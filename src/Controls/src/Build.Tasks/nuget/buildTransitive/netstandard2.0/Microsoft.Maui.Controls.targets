<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<UsingTask TaskName="Microsoft.Maui.Controls.Build.Tasks.XamlCTask" AssemblyFile="$(MSBuildThisFileDirectory)Microsoft.Maui.Controls.Build.Tasks.dll" />

	<PropertyGroup>
		<SynthesizeLinkMetadata>true</SynthesizeLinkMetadata>
		<EnableDefaultXamlItems Condition="'$(EnableDefaultXamlItems)'==''">True</EnableDefaultXamlItems>
		<EnableDefaultCssItems Condition="'$(EnableDefaultCssItems)'==''">True</EnableDefaultCssItems>
		<!-- The WINUI check for this only runs when there is an empty string so I just convert false to an empty string to fall in line with our other properties -->
		<SkipMicrosoftUIXamlCheckTargetPlatformVersion Condition="'$(SkipMicrosoftUIXamlCheckTargetPlatformVersion)'==''">true</SkipMicrosoftUIXamlCheckTargetPlatformVersion>
		<SkipMicrosoftUIXamlCheckTargetPlatformVersion Condition="'$(SkipMicrosoftUIXamlCheckTargetPlatformVersion)'=='false'"></SkipMicrosoftUIXamlCheckTargetPlatformVersion>
		<AndroidUseDefaultAotProfile Condition="'$(AndroidEnableProfiledAot)' == 'true' and '$(AndroidUseDefaultAotProfile)' == ''">false</AndroidUseDefaultAotProfile>
	</PropertyGroup>

	<ItemGroup>
		<AvailableItemName Include="MauiXaml" />
		<AvailableItemName Include="MauiCss" />
	</ItemGroup>

	<ItemGroup Condition=" '$(DisableMauiAnalyzers)' != 'true' ">
		<Analyzer Include="$(MSBuildThisFileDirectory)Microsoft.Maui.Controls.SourceGen.dll" IsImplicitlyDefined="true" />
	</ItemGroup>

	<!-- Enable BindingSourceGen -->
	<PropertyGroup>
		<_MauiBindingInterceptorsSupport Condition=" '$(_MauiBindingInterceptorsSupport)' == '' and '$(DisableMauiAnalyzers)' != 'true' ">true</_MauiBindingInterceptorsSupport>
		<InterceptorsPreviewNamespaces Condition=" '$(_MauiBindingInterceptorsSupport)' == 'true' ">$(InterceptorsPreviewNamespaces);Microsoft.Maui.Controls.Generated</InterceptorsPreviewNamespaces>
	</PropertyGroup>
	<ItemGroup Condition=" '$(_MauiBindingInterceptorsSupport)' == 'true' ">
		<Analyzer Include="$(MSBuildThisFileDirectory)Microsoft.Maui.Controls.BindingSourceGen.dll" IsImplicitlyDefined="true" />
	</ItemGroup>

	<ItemGroup Condition="'$(AndroidEnableProfiledAot)' == 'true' and '$(MauiUseDefaultAotProfile)' != 'false'">
		<AndroidAotProfile Include="$(MSBuildThisFileDirectory)maui.aotprofile" />
		<AndroidAotProfile Include="$(MSBuildThisFileDirectory)maui-blazor.aotprofile" />
	</ItemGroup>

	<!-- Check Tasks ABI and other validations -->
	<PropertyGroup>
		<_MauiTargetsImportedAgain Condition="'$(_MauiTargetsImported)'=='True'">True</_MauiTargetsImportedAgain>
		<_MauiTargetsImported>True</_MauiTargetsImported>
		<IsXBuild Condition="'$(MSBuildRuntimeType)' == ''">true</IsXBuild>
		<IsXBuild Condition="'$(MSBuildRuntimeType)' != ''">false</IsXBuild>
	</PropertyGroup>

	<Target Name="_ValidateMauiTasks" BeforeTargets="_CheckForInvalidConfigurationAndPlatform" Condition="'$(MauiDisableTargetsValidation)' != 'True'">
		<Error Code="XF001"
			Text="Microsoft.Maui targets have been imported multiple times. Please check your project file and remove the duplicate import(s)."
			Condition="'$(_MauiTargetsImportedAgain)' == 'True'" />
	</Target>

	<Target Name="_ValidateMSBuild" BeforeTargets="_CheckForInvalidConfigurationAndPlatform">
		<Error Code="XF003"
			Text="Microsoft.Maui requires msbuild. xbuild is no longer supported."
			Condition="'$(IsXBuild)' == 'true'" />
	</Target>

	<Target Name="_ValidateNETFrameworkVersion"
			BeforeTargets="_CheckForInvalidConfigurationAndPlatform"
			Condition="'$(ProjectExt)' != '.wapproj' AND '$(TargetFrameworkIdentifier)' == '.NETFramework' AND '$(TargetFrameworkVersion.Substring(1))' &lt; '4.6.1' AND '$(MauiDisableFrameworkVersionValidation)' != 'True'">
		<Error Code="XF004"
			Text="Microsoft.Maui requires .NETFramework >= v4.6.1. You have '$(TargetFrameworkVersion)'" />
	</Target>

	<Target
		Name="_ValidateMauiDoesNotHaveXamarinForms"
		BeforeTargets="_CheckForInvalidConfigurationAndPlatform"
		Condition="'$(MauiDisableXamarinFormsValidation)' != 'True'">
		<Error
			Code="MA001"
			Text="This project or a dependency has imported the Xamarin.Forms packages. .NET MAUI is not compatible with Xamarin.Forms and is unable to build. Please remove Xamarin.Forms or the project/package dependency that is using Xamarin.Forms."
			Condition="'$(_XFTargetsImported)' == 'true'"/>
	</Target>


  <!-- Inject MauiXaml and MauiCss as AdditionalFiles for partial type generation-->
  <Target Name="_MauiInjectXamlCssAdditionalFiles"
          BeforeTargets="GenerateMSBuildEditorConfigFileShouldRun"
          DependsOnTargets="$(CreateManifestResourceNamesDependsOn)">
    <ItemGroup>
      <_MauiXamlWithResourceNames Remove="@(_MauiXamlWithResourceNames)" />
      <_MauiXamlWithTargetPath Remove="@(_MauiXamlWithTargetPath)" />
      <_MauiCssWithResourceNames Remove="@(_MauiCssWithResourceNames)" />
      <_MauiCssWithTargetPath Remove="@(_MauiCssWithTargetPath)" />
    </ItemGroup>

    <AssignTargetPath Files="@(MauiXaml)" RootFolder="$(MSBuildProjectDirectory)">
      <Output TaskParameter="AssignedFiles" ItemName="_MauiXamlWithTargetPath" />
    </AssignTargetPath>

    <AssignTargetPath Files="@(MauiCss)" RootFolder="$(MSBuildProjectDirectory)">
      <Output TaskParameter="AssignedFiles" ItemName="_MauiCssWithTargetPath" />
    </AssignTargetPath>

    <CreateCSharpManifestResourceName
              ResourceFiles="@(_MauiXamlWithTargetPath -> '%(FullPath)')"
              RootNamespace="$(RootNamespace)"
              UseDependentUponConvention="$(EmbeddedResourceUseDependentUponConvention)">
      <Output TaskParameter="ResourceFilesWithManifestResourceNames" ItemName="_MauiXamlWithResourceNames" />
    </CreateCSharpManifestResourceName>

    <CreateCSharpManifestResourceName
              ResourceFiles="@(_MauiCssWithTargetPath -> '%(FullPath)')"
              RootNamespace="$(RootNamespace)"
              UseDependentUponConvention="$(EmbeddedResourceUseDependentUponConvention)">
      <Output TaskParameter="ResourceFilesWithManifestResourceNames" ItemName="_MauiCssWithResourceNames" />
    </CreateCSharpManifestResourceName>
    <ItemGroup>
      <AdditionalFiles Condition="%(_MauiXamlWithResourceNames.TargetPath) != ''"
            Include="@(_MauiXamlWithResourceNames)"
            ManifestResourceName="%(_MauiXamlWithResourceNames.ManifestResourceName)"
            TargetPath="%(_MauiXamlWithResourceNames.TargetPath)"
            RelativePath="$([MSBuild]::MakeRelative($(MSBuildProjectDirectory), %(_MauiXamlWithResourceNames.TargetPath)))"
            ItemSpec="%(_MauiXamlWithResourceNames.OriginalItemSpec)"
            GenKind="Xaml"/>
      <AdditionalFiles Condition="%(_MauiCssWithResourceNames.TargetPath) != ''"
            Include="@(_MauiCssWithResourceNames)"
            ManifestResourceName="%(_MauiCssWithResourceNames.ManifestResourceName)"
            TargetPath="%(_MauiCssWithResourceNames.TargetPath)"
            RelativePath="$([MSBuild]::MakeRelative($(MSBuildProjectDirectory), %(_MauiCssWithResourceNames.TargetPath)))"
            ItemSpec="%(_MauiCssWithResourceNames.OriginalItemSpec)"
            GenKind="Css"/>
      <_MauiXamlWithResourceNames Remove="@(_MauiXamlWithResourceNames)" />
      <_MauiXamlWithTargetPath Remove="@(_MauiXamlWithTargetPath)" />
      <_MauiCssWithResourceNames Remove="@(_MauiCssWithResourceNames)" />
      <_MauiCssWithTargetPath Remove="@(_MauiCssWithTargetPath)" />
    </ItemGroup>
  </Target>


  <!-- re-add MauiXaml and MauiCss as EmbeddedResources -->
  <PropertyGroup>
    <PrepareResourcesDependsOn>
      _MauiAddXamlEmbeddedResources;
      $(PrepareResourcesDependsOn);
    </PrepareResourcesDependsOn>
  </PropertyGroup>
  <Target Name="_MauiAddXamlEmbeddedResources">
    <ItemGroup>
      <EmbeddedResource Include="@(MauiXaml)" />
      <EmbeddedResource Include="@(MauiCss)" />
    </ItemGroup>
  </Target>

	<!-- XamlC -->
	<PropertyGroup>
		<CompileDependsOn>
			$(CompileDependsOn);
			XamlC;
		</CompileDependsOn>
	</PropertyGroup>

	<Target Name="XamlC"
		AfterTargets="AfterCompile"
		Inputs="$(IntermediateOutputPath)$(TargetFileName)"
		Outputs="$(IntermediateOutputPath)XamlC.stamp"
		Condition=" '$(DesignTimeBuild)' != 'True' AND '@(MauiXaml)' != ''">
		<PropertyGroup>
			<_MauiXamlCValidateOnly>$(MauiXamlCValidateOnly)</_MauiXamlCValidateOnly>
			<_MauiXamlCValidateOnly Condition="'$(Configuration)' == 'Debug' AND '$(_MauiForceXamlCForDebug)' != 'True'">True</_MauiXamlCValidateOnly>
			<_MauiXamlCValidateOnly Condition="'$(BuildingForLiveUnitTesting)' == 'True' ">True</_MauiXamlCValidateOnly>

			<MauiStrictXamlCompilation Condition="'$(MauiStrictXamlCompilation)' == '' and ('$(PublishAot)' == 'true' or '$(TrimMode)' == 'full')">true</MauiStrictXamlCompilation>
			<_MauiXamlCWarningsNotAsErrors>$(WarningsNotAsErrors)</_MauiXamlCWarningsNotAsErrors>
			<_MauiXamlCWarningsNotAsErrors Condition="'$(MauiStrictXamlCompilation)' != 'true'">$(_MauiXamlCWarningsNotAsErrors);XC0022;XC0023;XC0025</_MauiXamlCWarningsNotAsErrors>

      <_MauiXamlCGenerateFullPaths Condition="'$(_MauiXamlCGenerateFullPaths)' == '' and '$(GenerateFullPaths)' == 'true'">true</_MauiXamlCGenerateFullPaths>
      <_MauiXamlCGenerateFullPaths Condition="'$(_MauiXamlCGenerateFullPaths)' == ''">false</_MauiXamlCGenerateFullPaths>
      <_MauiXamlCFullPathPrefix Condition="'$(_MauiXamlCFullPathPrefix)' == '' and '$(_MauiXamlCGenerateFullPaths)' == 'true'">$(MSBuildProjectDirectory)</_MauiXamlCFullPathPrefix>
		</PropertyGroup>
		<XamlCTask
			Assembly = "$(IntermediateOutputPath)$(TargetFileName)"
			ReferencePath = "@(ReferencePath)"
			OptimizeIL = "true"
			DebugSymbols = "$(DebugSymbols)"
			DebugType = "$(DebugType)"
			DefaultCompile = "true"
      CompileBindingsWithSource = "$(MauiEnableXamlCBindingWithSourceCompilation)"
			ValidateOnly = "$(_MauiXamlCValidateOnly)"
			TargetFramework = "$(TargetFramework)"
			KeepXamlResources = "$(MauiKeepXamlResources)"

      WarningLevel = "$(WarningLevel)"
      TreatWarningsAsErrors = "$(TreatWarningsAsErrors)"
      NoWarn = "$(NoWarn)"
      WarningsAsErrors = "$(WarningsAsErrors)"
      WarningsNotAsErrors = "$(_MauiXamlCWarningsNotAsErrors)"
      GenerateFullPaths = "$(_MauiXamlCGenerateFullPaths)"
      FullPathPrefix = "$(_MauiXamlCFullPathPrefix)" />
      
		<Touch Files="$(IntermediateOutputPath)XamlC.stamp" AlwaysCreate="True" />
		<ItemGroup>
			<FileWrites Include="$(IntermediateOutputPath)XamlC.stamp" />
		</ItemGroup>
	</Target>

 <!--
    Platform Specific Targets.
    We can't use a framework specific targets file because it breaks shared projects i.e.  /build/MonoAndroid10/Microsoft.Maui.Controls.targets
  -->

  <!-- MonoAndroid targets. -->
  <PropertyGroup Condition="'$(TargetFrameworkIdentifier)' == 'MonoAndroid'">
    <CoreCompileDependsOn>
      IncludeProguardForAndroid;
      $(CoreCompileDependsOn);
    </CoreCompileDependsOn>
    <PrepareForBuildDependsOn>
      ValidateTargetFrameworkVersionForMaui;
      $(PrepareForBuildDependsOn);
    </PrepareForBuildDependsOn>
  </PropertyGroup>

  <Target Name="IncludeProguardForAndroid" Condition="'$(MauiDisableDefaultProguardConfiguration)' != 'True'">
    <ItemGroup>
      <ProguardConfiguration Include="$(MSBuildThisFileDirectory)MonoAndroid10\proguard.cfg" />
    </ItemGroup>
  </Target>

  <Target Name="ValidateTargetFrameworkVersionForMaui" Condition="'$(MauiDisableTargetFrameworkValidation)' != 'True'">
    <PropertyGroup>
      <MinTargetFrameworkVersionForMaui>10.0</MinTargetFrameworkVersionForMaui>
      <TargetFrameworkVersionWithoutV>$(TargetFrameworkVersion.TrimStart('vV'))</TargetFrameworkVersionWithoutV>
    </PropertyGroup>
    <Error Code="XF005"  Condition="$(TargetFrameworkVersionWithoutV) &lt; $(MinTargetFrameworkVersionForMaui)"
           Text="The %24(TargetFrameworkVersion) for $(ProjectName) ($(TargetFrameworkVersion)) is less than the minimum required %24(TargetFrameworkVersion) for Microsoft.Maui ($(MinTargetFrameworkVersionForMaui)). You need to increase the %24(TargetFrameworkVersion) for $(ProjectName)."   />
  </Target>

  <Target Name="_MauiPrepareForILLink" BeforeTargets="PrepareForILLink;_GenerateRuntimeConfigurationFilesInputCache;XamlC">
    <PropertyGroup>
      <MauiEnableIVisualAssemblyScanning Condition="'$(MauiEnableIVisualAssemblyScanning)' == ''">false</MauiEnableIVisualAssemblyScanning>
    </PropertyGroup>
    <PropertyGroup Condition="'$(PublishAot)' == 'true' or '$(TrimMode)' == 'full'">
      <MauiShellSearchResultsRendererDisplayMemberNameSupported Condition="'$(MauiShellSearchResultsRendererDisplayMemberNameSupported)' == ''">false</MauiShellSearchResultsRendererDisplayMemberNameSupported>
      <MauiQueryPropertyAttributeSupport Condition="'$(MauiQueryPropertyAttributeSupport)' == ''">false</MauiQueryPropertyAttributeSupport>
      <MauiImplicitCastOperatorsUsageViaReflectionSupport Condition="'$(MauiImplicitCastOperatorsUsageViaReflectionSupport)' == ''">false</MauiImplicitCastOperatorsUsageViaReflectionSupport>
      <MauiEnableXamlCBindingWithSourceCompilation Condition="'$(MauiEnableXamlCBindingWithSourceCompilation)' == ''">true</MauiEnableXamlCBindingWithSourceCompilation>
      <MauiHybridWebViewSupported Condition="'$(MauiHybridWebViewSupported)' == ''">false</MauiHybridWebViewSupported>
    </PropertyGroup>
    <ItemGroup>
      <RuntimeHostConfigurationOption Include="Microsoft.Maui.RuntimeFeature.IsIVisualAssemblyScanningEnabled"
                                      Condition="'$(MauiEnableIVisualAssemblyScanning)' != ''"
                                      Value="$(MauiEnableIVisualAssemblyScanning)"
                                      Trim="true" />
      <RuntimeHostConfigurationOption Include="Microsoft.Maui.RuntimeFeature.IsShellSearchResultsRendererDisplayMemberNameSupported"
                                      Condition="'$(MauiShellSearchResultsRendererDisplayMemberNameSupported)' != ''"
                                      Value="$(MauiShellSearchResultsRendererDisplayMemberNameSupported)"
                                      Trim="true" />
      <RuntimeHostConfigurationOption Include="Microsoft.Maui.RuntimeFeature.IsQueryPropertyAttributeSupported"
                                      Condition="'$(MauiQueryPropertyAttributeSupport)' != ''"
                                      Value="$(MauiQueryPropertyAttributeSupport)"
                                      Trim="true" />
      <RuntimeHostConfigurationOption Include="Microsoft.Maui.RuntimeFeature.IsImplicitCastOperatorsUsageViaReflectionSupported"
                                      Condition="'$(MauiImplicitCastOperatorsUsageViaReflectionSupport)' != ''"
                                      Value="$(MauiImplicitCastOperatorsUsageViaReflectionSupport)"
                                      Trim="true" />
      <RuntimeHostConfigurationOption Include="Microsoft.Maui.RuntimeFeature.AreBindingInterceptorsSupported"
                                      Condition="'$(_MauiBindingInterceptorsSupport)' != ''"
                                      Value="$(_MauiBindingInterceptorsSupport)"
                                      Trim="true" />
      <RuntimeHostConfigurationOption Include="Microsoft.Maui.RuntimeFeature.IsXamlCBindingWithSourceCompilationEnabled"
                                      Condition="'$(MauiEnableXamlCBindingWithSourceCompilation)' != ''"
                                      Value="$(MauiEnableXamlCBindingWithSourceCompilation)"
                                      Trim="false" />
      <RuntimeHostConfigurationOption Include="Microsoft.Maui.RuntimeFeature.IsHybridWebViewSupported"
                                      Condition="'$(MauiHybridWebViewSupported)' != ''"
                                      Value="$(MauiHybridWebViewSupported)"
                                      Trim="true" />
    </ItemGroup>
  </Target>

</Project>
