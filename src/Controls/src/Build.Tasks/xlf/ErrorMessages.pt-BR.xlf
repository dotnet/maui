<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="pt-BR" original="../ErrorMessages.resx">
    <body>
      <trans-unit id="AdderMissing">
        <source>No Add() method defined on "{0}{1}".</source>
        <target state="new">No Add() method defined on "{0}{1}".</target>
        <note>0 is type name, 1 is property name</note>
      </trans-unit>
      <trans-unit id="BPMissingGetter">
        <source>Missing a "public static Get{0}" method or a public instance property getter for the attached property "{1}.{0}Property".</source>
        <target state="new">Missing a "public static Get{0}" method or a public instance property getter for the attached property "{1}.{0}Property".</target>
        <note>0 is BindableProperty name, 1 is the declaring type</note>
      </trans-unit>
      <trans-unit id="BPName">
        <source>The name of the BindableProperty {0} does not end with "Property".</source>
        <target state="new">The name of the BindableProperty {0} does not end with "Property".</target>
        <note>0 is BindableProperty name</note>
      </trans-unit>
      <trans-unit id="BindingIndexerEmpty">
        <source>Binding: Indexer did not contain arguments.</source>
        <target state="new">Binding: Indexer did not contain arguments.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingIndexerNotClosed">
        <source>Binding: Indexer did not contain closing bracket.</source>
        <target state="new">Binding: Indexer did not contain closing bracket.</target>
        <note />
      </trans-unit>
      <trans-unit id="BindingIndexerParse">
        <source>Binding: "{0}" cannot be parsed as an index for a "{1}".</source>
        <target state="new">Binding: "{0}" cannot be parsed as an index for a "{1}".</target>
        <note>0 is indexer value, 1 is property name</note>
      </trans-unit>
      <trans-unit id="BindingIndexerTypeUnsupported">
        <source>Binding: Unsupported indexer index type: "{0}".</source>
        <target state="new">Binding: Unsupported indexer index type: "{0}".</target>
        <note>0 is indexer type name</note>
      </trans-unit>
      <trans-unit id="BindingPropertyNotFound">
        <source>Binding: Property "{0}" not found on "{1}".</source>
        <target state="new">Binding: Property "{0}" not found on "{1}".</target>
        <note>0 is property name, 1 is type name</note>
      </trans-unit>
      <trans-unit id="ConstructorDefaultMissing">
        <source>Missing default constructor for "{0}".</source>
        <target state="new">Missing default constructor for "{0}".</target>
        <note>0 is type name</note>
      </trans-unit>
      <trans-unit id="ConstructorXArgsMissing">
        <source>Missing constructor for "{0}" with matching x:Arguments.</source>
        <target state="new">Missing constructor for "{0}" with matching x:Arguments.</target>
        <note>0 is type name</note>
      </trans-unit>
      <trans-unit id="ContentPropertyAttributeMissing">
        <source>Cannot set the content of "{0}" as it doesn't have a [ContentProperty] attribute.</source>
        <target state="new">Cannot set the content of "{0}" as it doesn't have a [ContentProperty] attribute.</target>
        <note>0 is type name</note>
      </trans-unit>
      <trans-unit id="Conversion">
        <source>Cannot convert value "{0}" to "{1}".</source>
        <target state="new">Cannot convert value "{0}" to "{1}".</target>
        <note>0 is a value, 1 is a type</note>
      </trans-unit>
      <trans-unit id="EnumValueMissing">
        <source>Enum value not found for "{0}".</source>
        <target state="new">Enum value not found for "{0}".</target>
        <note>0 is enum value</note>
      </trans-unit>
      <trans-unit id="InvalidXaml">
        <source>Invalid Xaml "{0}".</source>
        <target state="new">Invalid Xaml "{0}".</target>
        <note>0 is the invalid xaml snippet</note>
      </trans-unit>
      <trans-unit id="MarkupNotClosed">
        <source>Markup expression not closed.</source>
        <target state="new">Markup expression not closed.</target>
        <note />
      </trans-unit>
      <trans-unit id="MarkupParsingFailed">
        <source>Error while parsing markup expression.</source>
        <target state="new">Error while parsing markup expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="MemberResolution">
        <source>No property, BindableProperty, or event found for "{0}", or mismatching type between value and property.</source>
        <target state="new">No property, BindableProperty, or event found for "{0}", or mismatching type between value and property.</target>
        <note>0 is member name</note>
      </trans-unit>
      <trans-unit id="MethodStaticMissing">
        <source>No static method found for "{0}::{1} ({2})".</source>
        <target state="new">No static method found for "{0}::{1} ({2})".</target>
        <note>0 is type name, 1 is methodname, 2 is type arg list</note>
      </trans-unit>
      <trans-unit id="MissingEventHandler">
        <source>EventHandler "{0}" with correct signature not found in type "{1}".</source>
        <target state="new">EventHandler "{0}" with correct signature not found in type "{1}".</target>
        <note>0 is the handler name, 1 is the declaring type</note>
      </trans-unit>
      <trans-unit id="NamescopeDuplicate">
        <source>An element with the name "{0}" already exists in this NameScope.</source>
        <target state="new">An element with the name "{0}" already exists in this NameScope.</target>
        <note>0 is the duplicated key</note>
      </trans-unit>
      <trans-unit id="PropertyMissing">
        <source>Missing mandatory property "{0}" on "{1}".</source>
        <target state="new">Missing mandatory property "{0}" on "{1}".</target>
        <note>0 is a property name, 1 is a type</note>
      </trans-unit>
      <trans-unit id="PropertyResolution">
        <source>Cannot resolve property "{0}" on type "{1} (property missing or missing accessors)".</source>
        <target state="new">Cannot resolve property "{0}" on type "{1} (property missing or missing accessors)".</target>
        <note>0 is a property name, 1 is a type name</note>
      </trans-unit>
      <trans-unit id="ResourceDictDuplicateKey">
        <source>"A resource with the key "{0}" is already present in the ResourceDictionary.</source>
        <target state="new">"A resource with the key "{0}" is already present in the ResourceDictionary.</target>
        <note>0 is key name</note>
      </trans-unit>
      <trans-unit id="ResourceDictMissingKey">
        <source>Resources in ResourceDictionary require a x:Key attribute.</source>
        <target state="new">Resources in ResourceDictionary require a x:Key attribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="ResourceMissing">
        <source>Resource "{0}" not found.</source>
        <target state="new">Resource "{0}" not found.</target>
        <note>0 is a resourceId</note>
      </trans-unit>
      <trans-unit id="SByteEnums">
        <source>Multi-valued enums are not valid on sbyte enum types.</source>
        <target state="new">Multi-valued enums are not valid on sbyte enum types.</target>
        <note />
      </trans-unit>
      <trans-unit id="StyleSheetNoSourceOrContent">
        <source>StyleSheet require either a Source or a content.</source>
        <target state="new">StyleSheet require either a Source or a content.</target>
        <note />
      </trans-unit>
      <trans-unit id="StyleSheetSourceNotALiteral">
        <source>Source property is not a string literal.</source>
        <target state="new">Source property is not a string literal.</target>
        <note />
      </trans-unit>
      <trans-unit id="StyleSheetSourceOrContent">
        <source>StyleSheet can not have both a Source and a content.</source>
        <target state="new">StyleSheet can not have both a Source and a content.</target>
        <note />
      </trans-unit>
      <trans-unit id="StyleSheetStyleNotALiteral">
        <source>Style property or Content is not a string literal.</source>
        <target state="new">Style property or Content is not a string literal.</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeResolution">
        <source>Cannot resolve type "{0}".</source>
        <target state="new">Cannot resolve type "{0}".</target>
        <note>0 is a type name</note>
      </trans-unit>
      <trans-unit id="XDataTypeSyntax">
        <source>x:DataType expects a string literal, an {{x:Type}} markup or {{x:Nul}l}.</source>
        <target state="new">x:DataType expects a string literal, an {{x:Type}} markup or {{x:Nul}l}.</target>
        <note />
      </trans-unit>
      <trans-unit id="XKeyNotLiteral">
        <source>x:Key expects a string literal.</source>
        <target state="new">x:Key expects a string literal.</target>
        <note />
      </trans-unit>
      <trans-unit id="XStaticResolution">
        <source>x:Static: unable to find a public -- or accessible internal -- static field, static property, const or enum value named "{0}" in "{1}".</source>
        <target state="new">x:Static: unable to find a public -- or accessible internal -- static field, static property, const or enum value named "{0}" in "{1}".</target>
        <note>0 is membername, 1 is type name</note>
      </trans-unit>
      <trans-unit id="XStaticSyntax">
        <source>Syntax for x:Static is "[Member=][prefix:]typeName.staticMemberName".</source>
        <target state="new">Syntax for x:Static is "[Member=][prefix:]typeName.staticMemberName".</target>
        <note />
      </trans-unit>
      <trans-unit id="XmlnsUndeclared">
        <source>Undeclared xmlns prefix "{0}".</source>
        <target state="new">Undeclared xmlns prefix "{0}".</target>
        <note>0 is the xmlns prefix</note>
      </trans-unit>
    </body>
  </file>
</xliff>