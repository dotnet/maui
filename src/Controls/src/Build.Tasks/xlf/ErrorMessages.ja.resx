<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdderMissing" xml:space="preserve">
    <value>Add() メソッドが "{0}{1}" に定義されていません。</value>
    <comment>0 is type name, 1 is property name</comment>
  </data>
  <data name="BindingIndexerEmpty" xml:space="preserve">
    <value>バインド: インデクサーに引数が含まれていませんでした。</value>
  </data>
  <data name="BindingIndexerNotClosed" xml:space="preserve">
    <value>バインド: インデクサーに右角かっこが含まれていませんでした。</value>
  </data>
  <data name="BindingIndexerParse" xml:space="preserve">
    <value>バインド: "{0}" は、"{1}" のインデックスとして解析できません。</value>
    <comment>0 is indexer value, 1 is property name</comment>
  </data>
  <data name="BindingIndexerTypeUnsupported" xml:space="preserve">
    <value>バインド: サポートされていない種類のインデクサーのインデックスです: "{0}"。</value>
    <comment>0 is indexer type name</comment>
  </data>
  <data name="BindingWithoutDataType" xml:space="preserve">
    <value>x:DataType が指定されている場合は、バインドをコンパイルして実行時のパフォーマンスを向上させることができます。詳細については、https://learn.microsoft.com/dotnet/maui/fundamentals/data-binding/compiled-bindings を参照してください。</value>
  </data>
  <data name="BindingWithNullDataType" xml:space="preserve">
    <value>x:DataType が明示的に null でない場合、ランタイム パフォーマンスを向上させるためにバインドをコンパイルできます。詳細については、https://learn.microsoft.com/dotnet/maui/fundamentals/data-binding/compiled-bindings を参照してください。</value>
  </data>
  <data name="BindingWithXDataTypeFromOuterScope" xml:space="preserve">
    <value>x:DataType 注釈が外部スコープから取得されているため、バインドが正しくコンパイルされない可能性があります。すべての DataTemplate XAML 要素に正しい x:DataType で注釈を付けます。詳細については、https://learn.microsoft.com/dotnet/maui/fundamentals/data-binding/compiled-bindings を参照してください。</value>
  </data>
  <data name="BindingWithSourceCompilationSkipped" xml:space="preserve">
    <value>明示的に設定されたソース プロパティがあり、ソースを使用したバインドのコンパイルが有効になっていないため、バインドはコンパイルされませんでした。プロジェクト ファイルで &lt;MauiEnableXamlCBindingWithSourceCompilation&gt;true&lt;/MauiEnableXamlCBindingWithSourceCompilation&gt; を設定して、このバインドに正しい x:DataType が指定されていることを確認して、この最適化を有効にすることを検討してください。詳細については、https://learn.microsoft.com/dotnet/maui/fundamentals/data-binding/compiled-bindings を参照してください。</value>
  </data>
  <data name="BindingPropertyNotFound" xml:space="preserve">
    <value>バインド: プロパティ "{0}" が "{1}" に見つかりません。</value>
    <comment>0 is property name, 1 is type name</comment>
  </data>
  <data name="BPMissingGetter" xml:space="preserve">
    <value>添付プロパティ "{1}. {0}Property" の "public static Get{0}" メソッドまたはパブリック インスタンス プロパティ ゲッターがありません。</value>
    <comment>0 is BindableProperty name, 1 is the declaring type</comment>
  </data>
  <data name="BPName" xml:space="preserve">
    <value>BindableProperty {0} の名前の末尾が "Property" ではありません。</value>
    <comment>0 is BindableProperty name</comment>
  </data>
  <data name="ConstructorDefaultMissing" xml:space="preserve">
    <value>"{0}" の既定のコンストラクターがありません。</value>
    <comment>0 is type name</comment>
  </data>
  <data name="ConstructorXArgsMissing" xml:space="preserve">
    <value>一致する x:Arguments を持つ "{0}" のコンストラクターがありません。</value>
    <comment>0 is type name</comment>
  </data>
  <data name="ContentPropertyAttributeMissing" xml:space="preserve">
    <value>[ContentProperty] 属性がないため、"{0}" の内容を設定できません。</value>
    <comment>0 is type name</comment>
  </data>
  <data name="Conversion" xml:space="preserve">
    <value>値 "{0}" を "{1}" に変換できません。</value>
    <comment>0 is a value, 1 is a type</comment>
  </data>
  <data name="EnumValueMissing" xml:space="preserve">
    <value>"{0}" の列挙値が見つかりません。</value>
    <comment>0 is enum value</comment>
  </data>
  <data name="InvalidXaml" xml:space="preserve">
    <value>Xaml "{0}" が無効です。</value>
    <comment>0 is the invalid xaml snippet</comment>
  </data>
  <data name="MarkupNotClosed" xml:space="preserve">
    <value>マークアップ式が閉じられていません。</value>
  </data>
  <data name="MarkupParsingFailed" xml:space="preserve">
    <value>マークアップ式の解析中にエラーが発生しました。</value>
  </data>
  <data name="MemberResolution" xml:space="preserve">
    <value>"{0}" のプロパティ、BindableProperty、またはイベントが見つからないか、値とプロパティの型が一致しません。</value>
    <comment>0 is member name</comment>
  </data>
  <data name="MethodStaticMissing" xml:space="preserve">
    <value>"{0}::{1} ({2})" の静的メソッドが見つかりません。</value>
    <comment>0 is type name, 1 is methodname, 2 is type arg list</comment>
  </data>
  <data name="MissingEventHandler" xml:space="preserve">
    <value>正しいシグネチャを持つ EventHandler "{0}" が型 "{1}" に見つかりません。</value>
    <comment>0 is the handler name, 1 is the declaring type</comment>
  </data>
  <data name="NamescopeDuplicate" xml:space="preserve">
    <value>この NameScope には、"{0}" という名前の要素が既に存在します。</value>
    <comment>0 is the duplicated key</comment>
  </data>
  <data name="ObsoleteProperty" xml:space="preserve">
    <value>プロパティ、プロパティ セッター、または BindableProperty "{0}" は非推奨です。</value>
  </data>
  <data name="PropertyMissing" xml:space="preserve">
    <value>"{1}" の必須プロパティ "{0}" がありません。</value>
    <comment>0 is a property name, 1 is a type</comment>
  </data>
  <data name="PropertyResolution" xml:space="preserve">
    <value>型 "{1}" のプロパティ"{0}"を解決できません (プロパティが見つからないか、アクセサーがありません)。</value>
    <comment>0 is a property name, 1 is a type name</comment>
  </data>
  <data name="ResourceDictDuplicateKey" xml:space="preserve">
    <value>キーが "{0}"のリソースは、ResourceDictionary 内に既に存在します。</value>
    <comment>0 is key name</comment>
  </data>
  <data name="ResourceDictMissingKey" xml:space="preserve">
    <value>ResourceDictionary 内のリソースには x:Key 属性が必要です。</value>
  </data>
  <data name="ResourceMissing" xml:space="preserve">
    <value>リソース "{0}" が見つかりません。</value>
    <comment>0 is a resourceId</comment>
  </data>
  <data name="SByteEnums" xml:space="preserve">
    <value>複数の値を持つ列挙型は、sbyte 列挙型では無効です。</value>
  </data>
  <data name="StyleSheetNoSourceOrContent" xml:space="preserve">
    <value>スタイルシートには、ソースまたはコンテンツのどちらかが必要です。</value>
  </data>
  <data name="StyleSheetSourceNotALiteral" xml:space="preserve">
    <value>ソース プロパティは文字列リテラルではありません。</value>
  </data>
  <data name="StyleSheetSourceOrContent" xml:space="preserve">
    <value>スタイルシートにソースとコンテンツの両方を含めることはできません。</value>
  </data>
  <data name="StyleSheetStyleNotALiteral" xml:space="preserve">
    <value>スタイル プロパティまたはコンテンツが文字列リテラルではありません。</value>
  </data>
  <data name="TypeResolution" xml:space="preserve">
    <value>型 "{0}" を解決できません。</value>
    <comment>0 is a type name</comment>
  </data>
  <data name="XDataTypeSyntax" xml:space="preserve">
    <value>x:DataType には、文字列リテラル、{{x:Type}} マークアップ、または {{x:Null}} を指定する必要があります。</value>
  </data>
  <data name="UnattributedMarkupType" xml:space="preserve">
    <value>マークアップ拡張 "{0}" に [RequireService] または [AcceptEmptyServiceProvider] が必要ない場合は、その拡張子に起因することを検討してください。</value>
    <comment>0 is type name</comment>
  </data>
  <data name="XmlnsUndeclared" xml:space="preserve">
    <value>宣言されていない xmlns プレフィックス "{0}" です。</value>
    <comment>0 is the xmlns prefix</comment>
  </data>
  <data name="XStaticResolution" xml:space="preserve">
    <value>x:Static: "{1}" に、"{0}" という名前のパブリックな (またはアクセス可能な内部の) 静的フィールド、静的プロパティ、const、または列挙値が見つかりません。</value>
    <comment>0 is membername, 1 is type name</comment>
  </data>
  <data name="XStaticSyntax" xml:space="preserve">
    <value>X:Static の構文が、"[Member=][prefix:]typeName.staticMemberName" です。</value>
  </data>
  <data name="XKeyNotLiteral" xml:space="preserve">
    <value>x:Key には文字列リテラルが期待されています。</value>
  </data>
  <data name="StaticResourceSyntax" xml:space="preserve">
    <value>{StaticResource} にはキーが必要です。</value>
  </data>
</root>