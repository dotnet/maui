<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdderMissing" xml:space="preserve">
    <value>未在“{0}{1}”上定义 Add() 方法。</value>
    <comment>0 is type name, 1 is property name</comment>
  </data>
  <data name="BindingIndexerEmpty" xml:space="preserve">
    <value>绑定: 索引器未包含参数。</value>
  </data>
  <data name="BindingIndexerNotClosed" xml:space="preserve">
    <value>绑定: 索引器未包含右方括号。</value>
  </data>
  <data name="BindingIndexerParse" xml:space="preserve">
    <value>绑定: 无法将“{0}”作为“{1}”的索引进行分析。</value>
    <comment>0 is indexer value, 1 is property name</comment>
  </data>
  <data name="BindingIndexerTypeUnsupported" xml:space="preserve">
    <value>绑定: 不受支持的索引器索引类型:“{0}”。</value>
    <comment>0 is indexer type name</comment>
  </data>
  <data name="BindingWithoutDataType" xml:space="preserve">
    <value>如果指定了 x:DataType，则可以编译绑定以提高运行时性能。有关详细信息，请参阅 https://learn.microsoft.com/dotnet/maui/fundamentals/data-binding/compiled-bindings。</value>
  </data>
  <data name="BindingWithNullDataType" xml:space="preserve">
    <value>如果 x:DataType 非显式为 null，则可以编译绑定以提高运行时性能。有关详细信息，请参阅 https://learn.microsoft.com/dotnet/maui/fundamentals/data-binding/compiled-bindings。</value>
  </data>
  <data name="BindingWithXDataTypeFromOuterScope" xml:space="preserve">
    <value>绑定可能编译不正确，因为 x:DataType 批注来自外部范围。请确保使用正确的 x:DataType 批注所有 DataTemplate XAML 元素。有关详细信息，请参阅 https://learn.microsoft.com/dotnet/maui/fundamentals/data-binding/compiled-bindings。</value>
  </data>
  <data name="BindingWithSourceCompilationSkipped" xml:space="preserve">
    <value>绑定未编译，因为它具有显式设置的 Source 属性，并且未启用使用 Source 的绑定编译。请考虑通过在项目文件中设置 &lt;MauiEnableXamlCBindingWithSourceCompilation&gt;true&lt;/MauiEnableXamlCBindingWithSourceCompilation&gt; 来启用此优化，并确保为此绑定指定了正确的 x:DataType。有关详细信息，请参阅 https://learn.microsoft.com/dotnet/maui/fundamentals/data-binding/compiled-bindings。</value>
  </data>
  <data name="BindingPropertyNotFound" xml:space="preserve">
    <value>绑定: 在“{1}”上找不到属性“{0}”。</value>
    <comment>0 is property name, 1 is type name</comment>
  </data>
  <data name="BPMissingGetter" xml:space="preserve">
    <value>对于附加属性 "{1}.{0}Property"，缺少 "public static Get{0}" 方法或公共实例属性 getter。</value>
    <comment>0 is BindableProperty name, 1 is the declaring type</comment>
  </data>
  <data name="BPName" xml:space="preserve">
    <value>BindableProperty {0} 的名称不是以 "Property" 结尾的。</value>
    <comment>0 is BindableProperty name</comment>
  </data>
  <data name="ConstructorDefaultMissing" xml:space="preserve">
    <value>缺少“{0}”的默认构造函数。</value>
    <comment>0 is type name</comment>
  </data>
  <data name="ConstructorXArgsMissing" xml:space="preserve">
    <value>“{0}”中缺少具有匹配的 x:Arguments 的构造函数。</value>
    <comment>0 is type name</comment>
  </data>
  <data name="ContentPropertyAttributeMissing" xml:space="preserve">
    <value>无法设置“{0}”的内容，因为它没有 [ContentProperty] 属性。</value>
    <comment>0 is type name</comment>
  </data>
  <data name="Conversion" xml:space="preserve">
    <value>无法将值“{0}”转换为“{1}”。</value>
    <comment>0 is a value, 1 is a type</comment>
  </data>
  <data name="EnumValueMissing" xml:space="preserve">
    <value>找不到“{0}”的枚举值。</value>
    <comment>0 is enum value</comment>
  </data>
  <data name="InvalidXaml" xml:space="preserve">
    <value>Xaml“{0}”无效。</value>
    <comment>0 is the invalid xaml snippet</comment>
  </data>
  <data name="MarkupNotClosed" xml:space="preserve">
    <value>标记表达式未关闭。</value>
  </data>
  <data name="MarkupParsingFailed" xml:space="preserve">
    <value>分析标记表达式时出错。</value>
  </data>
  <data name="MemberResolution" xml:space="preserve">
    <value>未找到“{0}”的属性、BindableProperty 或事件，或者值与属性之间的类型不匹配。</value>
    <comment>0 is member name</comment>
  </data>
  <data name="MethodStaticMissing" xml:space="preserve">
    <value>找不到“{0}::{1} ({2})”的静态方法。</value>
    <comment>0 is type name, 1 is methodname, 2 is type arg list</comment>
  </data>
  <data name="MissingEventHandler" xml:space="preserve">
    <value>在类型“{1}”中找不到具有正确签名的 EventHandler“{0}”。</value>
    <comment>0 is the handler name, 1 is the declaring type</comment>
  </data>
  <data name="NamescopeDuplicate" xml:space="preserve">
    <value>此 NameScope 中已存在名为“{0}”的元素。</value>
    <comment>0 is the duplicated key</comment>
  </data>
  <data name="ObsoleteProperty" xml:space="preserve">
    <value>属性、属性资源库或 BindableProperty "{0}" 已弃用。</value>
  </data>
  <data name="PropertyMissing" xml:space="preserve">
    <value>“{1}”上缺少强制属性“{0}”。</value>
    <comment>0 is a property name, 1 is a type</comment>
  </data>
  <data name="PropertyResolution" xml:space="preserve">
    <value>无法解析类型“{1}”上的属性“{0}”(缺少属性或访问器)”。</value>
    <comment>0 is a property name, 1 is a type name</comment>
  </data>
  <data name="ResourceDictDuplicateKey" xml:space="preserve">
    <value>ResourceDictionary 中已存在具有键“{0}”的资源。</value>
    <comment>0 is key name</comment>
  </data>
  <data name="ResourceDictMissingKey" xml:space="preserve">
    <value>ResourceDictionary 中的资源需具有 x:Key 属性。</value>
  </data>
  <data name="ResourceMissing" xml:space="preserve">
    <value>找不到资源“{0}”。</value>
    <comment>0 is a resourceId</comment>
  </data>
  <data name="SByteEnums" xml:space="preserve">
    <value>多值枚举在 sbyte 枚举类型上无效。</value>
  </data>
  <data name="StyleSheetNoSourceOrContent" xml:space="preserve">
    <value>样式表需要源或内容。</value>
  </data>
  <data name="StyleSheetSourceNotALiteral" xml:space="preserve">
    <value>源属性不是字符串文本。</value>
  </data>
  <data name="StyleSheetSourceOrContent" xml:space="preserve">
    <value>样式表不能同时具有源和内容。</value>
  </data>
  <data name="StyleSheetStyleNotALiteral" xml:space="preserve">
    <value>样式属性或内容不是字符串文本。</value>
  </data>
  <data name="TypeResolution" xml:space="preserve">
    <value>无法解析类型“{0}”。</value>
    <comment>0 is a type name</comment>
  </data>
  <data name="XDataTypeSyntax" xml:space="preserve">
    <value>x:DataType 需要字符串字面量、{{x:Type}} 标记或 {{x:Null}}。</value>
  </data>
  <data name="UnattributedMarkupType" xml:space="preserve">
    <value>如果标记扩展 "{0}" 不需要任何服务，请考虑使用 [RequireService] 或 [AcceptEmptyServiceProvider] 来标注它。</value>
    <comment>0 is type name</comment>
  </data>
  <data name="XmlnsUndeclared" xml:space="preserve">
    <value>xmlns 前缀“{0}”未经过声明。</value>
    <comment>0 is the xmlns prefix</comment>
  </data>
  <data name="XStaticResolution" xml:space="preserve">
    <value>x:Static: 在“{1}”中找不到公共(或可访问的内部)静态字段、静态属性、常量或枚举值“{0}”。</value>
    <comment>0 is membername, 1 is type name</comment>
  </data>
  <data name="XStaticSyntax" xml:space="preserve">
    <value>x:Static 的语法为 "[Member=][prefix:]typeName.staticMemberName"。</value>
  </data>
  <data name="XKeyNotLiteral" xml:space="preserve">
    <value>x:Key 需要字符串字面量。</value>
  </data>
  <data name="StaticResourceSyntax" xml:space="preserve">
    <value>{StaticResource} 中需要一个键。</value>
  </data>
</root>