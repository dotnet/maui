<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdderMissing" xml:space="preserve">
    <value>Для "{0}{1}" не определен метод Add ().</value>
    <comment>0 is type name, 1 is property name</comment>
  </data>
  <data name="BindingIndexerEmpty" xml:space="preserve">
    <value>Привязка: индексатор не содержит аргументов.</value>
  </data>
  <data name="BindingIndexerNotClosed" xml:space="preserve">
    <value>Привязка: индексатор не содержит закрывающей скобки.</value>
  </data>
  <data name="BindingIndexerParse" xml:space="preserve">
    <value>Привязка: не удается проанализировать значение индексатора "{0}" как индекс для свойства "{1}".</value>
    <comment>0 is indexer value, 1 is property name</comment>
  </data>
  <data name="BindingIndexerTypeUnsupported" xml:space="preserve">
    <value>Привязка: неподдерживаемый тип индекса индексатора: "{0}".</value>
    <comment>0 is indexer type name</comment>
  </data>
  <data name="BindingWithoutDataType" xml:space="preserve">
    <value>Привязка может быть скомпилирована для повышения производительности среды выполнения, если задан атрибут x:DataType. Дополнительные сведения см. по адресу https://learn.microsoft.com/dotnet/maui/fundamentals/data-binding/compiled-bindings.</value>
  </data>
  <data name="BindingWithNullDataType" xml:space="preserve">
    <value>Привязка может быть скомпилирована для повышения производительности среды выполнения, если для x:DataType не задано значение NULL явным образом. Дополнительные сведения см. по адресу https://learn.microsoft.com/dotnet/maui/fundamentals/data-binding/compiled-bindings.</value>
  </data>
  <data name="BindingWithXDataTypeFromOuterScope" xml:space="preserve">
    <value>Привязка может быть скомпилирована неправильно, поскольку аннотация x:DataType взята из внешней области. Убедитесь, что для всех элементов XAML DataTemplate используется правильная аннотация x:DataType. Дополнительные сведения см. по адресу https://learn.microsoft.com/dotnet/maui/fundamentals/data-binding/compiled-bindings.</value>
  </data>
  <data name="BindingWithSourceCompilationSkipped" xml:space="preserve">
    <value>Привязка не была скомпилирована, поскольку для нее явным образом задано свойство Source, а компиляция привязок со свойством Source не включена. Попробуйте включить эту оптимизацию путем установки значения &lt;MauiEnableXamlCBindingWithSourceCompilation&gt;true&lt;/MauiEnableXamlCBindingWithSourceCompilation&gt; в файле проекта. Убедитесь, что для этой привязки указан правильный атрибут x:DataType. Дополнительные сведения см. по адресу https://learn.microsoft.com/dotnet/maui/fundamentals/data-binding/compiled-bindings.</value>
  </data>
  <data name="BindingPropertyNotFound" xml:space="preserve">
    <value>Привязка: свойство "{0}" не найдено в "{1}".</value>
    <comment>0 is property name, 1 is type name</comment>
  </data>
  <data name="BPMissingGetter" xml:space="preserve">
    <value>Отсутствует метод "public static Get{0}" или метод получения открытого свойства экземпляра для вложенного свойства "{1}.{0}Property".</value>
    <comment>0 is BindableProperty name, 1 is the declaring type</comment>
  </data>
  <data name="BPName" xml:space="preserve">
    <value>Имя привязываемого свойства (BindableProperty) {0} не заканчивается на "Property".</value>
    <comment>0 is BindableProperty name</comment>
  </data>
  <data name="ConstructorDefaultMissing" xml:space="preserve">
    <value>Отсутствует конструктор по умолчанию для "{0}".</value>
    <comment>0 is type name</comment>
  </data>
  <data name="ConstructorXArgsMissing" xml:space="preserve">
    <value>Отсутствует конструктор для "{0}" с соответствующим x:Arguments.</value>
    <comment>0 is type name</comment>
  </data>
  <data name="ContentPropertyAttributeMissing" xml:space="preserve">
    <value>Не удается задать содержимое "{0}", так как у него нет атрибута [ContentProperty].</value>
    <comment>0 is type name</comment>
  </data>
  <data name="Conversion" xml:space="preserve">
    <value>Не удается преобразовать значение "{0}" в "{1}".</value>
    <comment>0 is a value, 1 is a type</comment>
  </data>
  <data name="EnumValueMissing" xml:space="preserve">
    <value>Значение перечисления для "{0}" не найдено.</value>
    <comment>0 is enum value</comment>
  </data>
  <data name="InvalidXaml" xml:space="preserve">
    <value>Недопустимый код XAML "{0}".</value>
    <comment>0 is the invalid xaml snippet</comment>
  </data>
  <data name="MarkupNotClosed" xml:space="preserve">
    <value>Выражение разметки не закрыто.</value>
  </data>
  <data name="MarkupParsingFailed" xml:space="preserve">
    <value>Ошибка при анализе выражения разметки.</value>
  </data>
  <data name="MemberResolution" xml:space="preserve">
    <value>Не найдено свойство, привязываемое свойство (BindableProperty) или событие для "{0}" либо типы значения и свойства не совпадают.</value>
    <comment>0 is member name</comment>
  </data>
  <data name="MethodStaticMissing" xml:space="preserve">
    <value>Не найден статический метод для "{0}::{1} ({2})".</value>
    <comment>0 is type name, 1 is methodname, 2 is type arg list</comment>
  </data>
  <data name="MissingEventHandler" xml:space="preserve">
    <value>В типе "{1}" не найден обработчик событий (EventHandler) "{0}" с правильной подписью.</value>
    <comment>0 is the handler name, 1 is the declaring type</comment>
  </data>
  <data name="NamescopeDuplicate" xml:space="preserve">
    <value>Элемент с именем "{0}" уже существует в этой области видимости имен.</value>
    <comment>0 is the duplicated key</comment>
  </data>
  <data name="ObsoleteProperty" xml:space="preserve">
    <value>Свойство, метод задания свойства или BindableProperty "{0}" упразднены.</value>
  </data>
  <data name="PropertyMissing" xml:space="preserve">
    <value>Отсутствует обязательное свойство "{0}" для "{1}".</value>
    <comment>0 is a property name, 1 is a type</comment>
  </data>
  <data name="PropertyResolution" xml:space="preserve">
    <value>Не удается разрешить свойство "{0}" для типа "{1} (свойство отсутствует или не содержит методов доступа)".</value>
    <comment>0 is a property name, 1 is a type name</comment>
  </data>
  <data name="ResourceDictDuplicateKey" xml:space="preserve">
    <value>"Ресурс с ключом "{0}" уже присутствует в ResourceDictionary.</value>
    <comment>0 is key name</comment>
  </data>
  <data name="ResourceDictMissingKey" xml:space="preserve">
    <value>Для ресурсов в ResourceDictionary требуется атрибут x:Key.</value>
  </data>
  <data name="ResourceMissing" xml:space="preserve">
    <value>Ресурс "{0}" не найден.</value>
    <comment>0 is a resourceId</comment>
  </data>
  <data name="SByteEnums" xml:space="preserve">
    <value>Перечисления с несколькими значениями не могут использоваться в типах перечисления sbyte.</value>
  </data>
  <data name="StyleSheetNoSourceOrContent" xml:space="preserve">
    <value>Для таблицы стилей (StyleSheet) необходимо указать источник (Source) или содержимое.</value>
  </data>
  <data name="StyleSheetSourceNotALiteral" xml:space="preserve">
    <value>Свойство Source не является строковым литералом.</value>
  </data>
  <data name="StyleSheetSourceOrContent" xml:space="preserve">
    <value>У таблицы стилей не может быть свойство Source и содержимое.</value>
  </data>
  <data name="StyleSheetStyleNotALiteral" xml:space="preserve">
    <value>Свойство Style или содержимое (Content) не является строковым литералом.</value>
  </data>
  <data name="TypeResolution" xml:space="preserve">
    <value>Не удается разрешить тип "{0}".</value>
    <comment>0 is a type name</comment>
  </data>
  <data name="XDataTypeSyntax" xml:space="preserve">
    <value>Для x:DataType ожидается строковый литерал, разметка {{x:Type}} или {{x:Null}}.</value>
  </data>
  <data name="UnattributedMarkupType" xml:space="preserve">
    <value>Попробуйте присвоить расширению разметки "{0}" аннотацию [RequireService] или [AcceptEmptyServiceProvider], если оно не требует никаких аннотаций.</value>
    <comment>0 is type name</comment>
  </data>
  <data name="XmlnsUndeclared" xml:space="preserve">
    <value>Необъявленный префикс xmlns "{0}".</value>
    <comment>0 is the xmlns prefix</comment>
  </data>
  <data name="XStaticResolution" xml:space="preserve">
    <value>x:Static: не удается найти статическое поле, статическое свойство, константу или значение перечисления с именем "{0}" в "{1}", которые являлись бы открытыми или были бы доступны внутренне.</value>
    <comment>0 is membername, 1 is type name</comment>
  </data>
  <data name="XStaticSyntax" xml:space="preserve">
    <value>Синтаксис для x:Static — "[Member=][prefix:]typeName.staticMemberName".</value>
  </data>
  <data name="XKeyNotLiteral" xml:space="preserve">
    <value>x:Key ожидает строковый литерал.</value>
  </data>
  <data name="StaticResourceSyntax" xml:space="preserve">
    <value>Необходимо указать ключ в {StaticResource}.</value>
  </data>
</root>