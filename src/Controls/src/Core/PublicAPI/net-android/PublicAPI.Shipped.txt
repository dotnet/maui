#nullable enable
~abstract Microsoft.Maui.Controls.DataTemplateSelector.OnSelectTemplate(object item, Microsoft.Maui.Controls.BindableObject container) -> Microsoft.Maui.Controls.DataTemplate
~abstract Microsoft.Maui.Controls.Handlers.Compatibility.CellAdapter.GetCellForPosition(int position) -> Microsoft.Maui.Controls.Cell
~abstract Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>.GetItemsLayout() -> Microsoft.Maui.Controls.IItemsLayout
~abstract Microsoft.Maui.Controls.Internals.GIFImageParser.AddBitmap(Microsoft.Maui.Controls.Internals.GIFHeader header, Microsoft.Maui.Controls.Internals.GIFBitmap bitmap, bool ignoreImageData) -> void
~abstract Microsoft.Maui.Controls.Internals.TableModel.GetItem(int section, int row) -> object
~abstract Microsoft.Maui.Controls.Layout.CreateLayoutManager() -> Microsoft.Maui.Layouts.ILayoutManager
~abstract Microsoft.Maui.Controls.MultiPage<T>.CreateDefault(object item) -> T
~abstract Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.GetNavigationTarget() -> Android.Views.ViewGroup
~abstract Microsoft.Maui.Controls.RouteFactory.GetOrCreate() -> Microsoft.Maui.Controls.Element
~abstract Microsoft.Maui.Controls.RouteFactory.GetOrCreate(System.IServiceProvider services) -> Microsoft.Maui.Controls.Element
~abstract Microsoft.Maui.Controls.Shapes.Geometry.AppendPath(Microsoft.Maui.Graphics.PathF path) -> void
~abstract Microsoft.Maui.Controls.TriggerAction<T>.Invoke(T sender) -> void
~abstract Microsoft.Maui.Controls.WebViewSource.Load(Microsoft.Maui.IWebViewDelegate renderer) -> void
~const Microsoft.Maui.Controls.Binding.SelfPath = "." -> string
~const Microsoft.Maui.Controls.BrushTypeConverter.Hsl = "hsl" -> string
~const Microsoft.Maui.Controls.BrushTypeConverter.Hsla = "hsla" -> string
~const Microsoft.Maui.Controls.BrushTypeConverter.LinearGradient = "linear-gradient" -> string
~const Microsoft.Maui.Controls.BrushTypeConverter.RadialGradient = "radial-gradient" -> string
~const Microsoft.Maui.Controls.BrushTypeConverter.Rgb = "rgb" -> string
~const Microsoft.Maui.Controls.BrushTypeConverter.Rgba = "rgba" -> string
~const Microsoft.Maui.Controls.CarouselView.CurrentItemVisualState = "CurrentItem" -> string
~const Microsoft.Maui.Controls.CarouselView.DefaultItemVisualState = "DefaultItem" -> string
~const Microsoft.Maui.Controls.CarouselView.NextItemVisualState = "NextItem" -> string
~const Microsoft.Maui.Controls.CarouselView.PreviousItemVisualState = "PreviousItem" -> string
~const Microsoft.Maui.Controls.CheckBox.IsCheckedVisualState = "IsChecked" -> string
~const Microsoft.Maui.Controls.Device.Android = "Android" -> string
~const Microsoft.Maui.Controls.Device.iOS = "iOS" -> string
~const Microsoft.Maui.Controls.Device.MacCatalyst = "MacCatalyst" -> string
~const Microsoft.Maui.Controls.Device.Tizen = "Tizen" -> string
~const Microsoft.Maui.Controls.Device.tvOS = "tvOS" -> string
~const Microsoft.Maui.Controls.Device.UWP = "WinUI" -> string
~const Microsoft.Maui.Controls.Device.WinUI = "WinUI" -> string
~const Microsoft.Maui.Controls.FlyoutItem.ImageStyle = "FlyoutItemImageStyle" -> string
~const Microsoft.Maui.Controls.FlyoutItem.LabelStyle = "FlyoutItemLabelStyle" -> string
~const Microsoft.Maui.Controls.FlyoutItem.LayoutStyle = "FlyoutItemLayoutStyle" -> string
~const Microsoft.Maui.Controls.Page.ActionSheetSignalName = "Microsoft.Maui.Controls.ShowActionSheet" -> string
~const Microsoft.Maui.Controls.Page.AlertSignalName = "Microsoft.Maui.Controls.SendAlert" -> string
~const Microsoft.Maui.Controls.Page.BusySetSignalName = "Microsoft.Maui.Controls.BusySet" -> string
~const Microsoft.Maui.Controls.Page.PromptSignalName = "Microsoft.Maui.Controls.SendPrompt" -> string
~const Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchViewAdapter.DoNotUpdateMarker = "__DO_NOT_UPDATE__" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ButtonStyle.Bottom = "bottom" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ButtonStyle.Circle = "circle" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ButtonStyle.Default = "default" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ButtonStyle.SelectMode = "select_mode" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ButtonStyle.Text = "textbutton" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FocusDirection.Back = "Back" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FocusDirection.Down = "Down" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FocusDirection.Forward = "Forward" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FocusDirection.Left = "Left" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FocusDirection.None = "None" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FocusDirection.Right = "Right" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FocusDirection.Up = "Up" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.Black = "Black" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.Bold = "Bold" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.Book = "Book" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.ExtraBlack = "ExtraBlack" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.Light = "Light" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.Medium = "Medium" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.None = "None" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.Normal = "Normal" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.SemiBold = "SemiBold" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.Thin = "Thin" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.UltraBold = "UltraBold" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight.UltraLight = "UltraLight" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ProgressBarStyle.Default = "default" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ProgressBarStyle.Pending = "pending" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.SwitchStyle.CheckBox = "default" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.SwitchStyle.Favorite = "favorite" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.SwitchStyle.OnOff = "on&off" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.SwitchStyle.Small = "small" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.SwitchStyle.Toggle = "toggle" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.TabbedPageStyle.Default = "default" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.TabbedPageStyle.Tabbar = "tabbar" -> string
~const Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.TabbedPageStyle.TabbarWithTitle = "tabbar_with_title" -> string
~const Microsoft.Maui.Controls.RadioButton.CheckedIndicator = "CheckedIndicator" -> string
~const Microsoft.Maui.Controls.RadioButton.CheckedVisualState = "Checked" -> string
~const Microsoft.Maui.Controls.RadioButton.TemplateRootName = "Root" -> string
~const Microsoft.Maui.Controls.RadioButton.UncheckedButton = "Button" -> string
~const Microsoft.Maui.Controls.RadioButton.UncheckedVisualState = "Unchecked" -> string
~const Microsoft.Maui.Controls.Shapes.StrokeShapeTypeConverter.Ellipse = "Ellipse" -> string
~const Microsoft.Maui.Controls.Shapes.StrokeShapeTypeConverter.Line = "Line" -> string
~const Microsoft.Maui.Controls.Shapes.StrokeShapeTypeConverter.Path = "Path" -> string
~const Microsoft.Maui.Controls.Shapes.StrokeShapeTypeConverter.Polygon = "Polygon" -> string
~const Microsoft.Maui.Controls.Shapes.StrokeShapeTypeConverter.Polyline = "Polyline" -> string
~const Microsoft.Maui.Controls.Shapes.StrokeShapeTypeConverter.Rectangle = "Rectangle" -> string
~const Microsoft.Maui.Controls.Shapes.StrokeShapeTypeConverter.RoundRectangle = "RoundRectangle" -> string
~const Microsoft.Maui.Controls.Switch.SwitchOffVisualState = "Off" -> string
~const Microsoft.Maui.Controls.Switch.SwitchOnVisualState = "On" -> string
~const Microsoft.Maui.Controls.VisualStateManager.CommonStates.Disabled = "Disabled" -> string
~const Microsoft.Maui.Controls.VisualStateManager.CommonStates.Focused = "Focused" -> string
~const Microsoft.Maui.Controls.VisualStateManager.CommonStates.Normal = "Normal" -> string
~const Microsoft.Maui.Controls.VisualStateManager.CommonStates.PointerOver = "PointerOver" -> string
~const Microsoft.Maui.Controls.VisualStateManager.CommonStates.Selected = "Selected" -> string
~Microsoft.Maui.Controls.AbsoluteLayout.GetLayoutBounds(Microsoft.Maui.IView view) -> Microsoft.Maui.Graphics.Rect
~Microsoft.Maui.Controls.AbsoluteLayout.GetLayoutFlags(Microsoft.Maui.IView view) -> Microsoft.Maui.Layouts.AbsoluteLayoutFlags
~Microsoft.Maui.Controls.AbsoluteLayout.SetLayoutBounds(Microsoft.Maui.IView view, Microsoft.Maui.Graphics.Rect bounds) -> void
~Microsoft.Maui.Controls.AbsoluteLayout.SetLayoutFlags(Microsoft.Maui.IView view, Microsoft.Maui.Layouts.AbsoluteLayoutFlags flags) -> void
~Microsoft.Maui.Controls.Accelerator.Keys.get -> System.Collections.Generic.IEnumerable<string>
~Microsoft.Maui.Controls.Accelerator.Keys.set -> void
~Microsoft.Maui.Controls.Accelerator.Modifiers.get -> System.Collections.Generic.IEnumerable<string>
~Microsoft.Maui.Controls.Accelerator.Modifiers.set -> void
~Microsoft.Maui.Controls.ActivityIndicator.Color.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.ActivityIndicator.Color.set -> void
~Microsoft.Maui.Controls.ActivityIndicator.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.ActivityIndicator>
~Microsoft.Maui.Controls.AndExpandLayoutManager.AndExpandLayoutManager(Microsoft.Maui.Controls.StackLayout stackLayout) -> void
~Microsoft.Maui.Controls.Animation.Add(double beginAt, double finishAt, Microsoft.Maui.Controls.Animation animation) -> void
~Microsoft.Maui.Controls.Animation.Animation(System.Action<double> callback, double start = 0, double end = 1, Microsoft.Maui.Easing easing = null, System.Action finished = null) -> void
~Microsoft.Maui.Controls.Animation.Commit(Microsoft.Maui.Controls.IAnimatable owner, string name, uint rate = 16, uint length = 250, Microsoft.Maui.Easing easing = null, System.Action<double, bool> finished = null, System.Func<bool> repeat = null) -> void
~Microsoft.Maui.Controls.Animation.GetCallback() -> System.Action<double>
~Microsoft.Maui.Controls.Animation.Insert(double beginAt, double finishAt, Microsoft.Maui.Controls.Animation animation) -> Microsoft.Maui.Controls.Animation
~Microsoft.Maui.Controls.Animation.WithConcurrent(Microsoft.Maui.Controls.Animation animation, double beginAt = 0, double finishAt = 1) -> Microsoft.Maui.Controls.Animation
~Microsoft.Maui.Controls.Animation.WithConcurrent(System.Action<double> callback, double start = 0, double end = 1, Microsoft.Maui.Easing easing = null, double beginAt = 0, double finishAt = 1) -> Microsoft.Maui.Controls.Animation
~Microsoft.Maui.Controls.AppLinkEntry.AppLinkUri.get -> System.Uri
~Microsoft.Maui.Controls.AppLinkEntry.AppLinkUri.set -> void
~Microsoft.Maui.Controls.AppLinkEntry.Description.get -> string
~Microsoft.Maui.Controls.AppLinkEntry.Description.set -> void
~Microsoft.Maui.Controls.AppLinkEntry.KeyValues.get -> System.Collections.Generic.IDictionary<string, string>
~Microsoft.Maui.Controls.AppLinkEntry.Thumbnail.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.AppLinkEntry.Thumbnail.set -> void
~Microsoft.Maui.Controls.AppLinkEntry.Title.get -> string
~Microsoft.Maui.Controls.AppLinkEntry.Title.set -> void
~Microsoft.Maui.Controls.BackButtonBehavior.Command.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.BackButtonBehavior.Command.set -> void
~Microsoft.Maui.Controls.BackButtonBehavior.CommandParameter.get -> object
~Microsoft.Maui.Controls.BackButtonBehavior.CommandParameter.set -> void
~Microsoft.Maui.Controls.BackButtonBehavior.IconOverride.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.BackButtonBehavior.IconOverride.set -> void
~Microsoft.Maui.Controls.BackButtonBehavior.TextOverride.get -> string
~Microsoft.Maui.Controls.BackButtonBehavior.TextOverride.set -> void
~Microsoft.Maui.Controls.BackgroundingEventArgs.BackgroundingEventArgs(Microsoft.Maui.IPersistedState state) -> void
~Microsoft.Maui.Controls.BackgroundingEventArgs.State.get -> Microsoft.Maui.IPersistedState
~Microsoft.Maui.Controls.BackgroundingEventArgs.State.set -> void
~Microsoft.Maui.Controls.BaseShellItem.FlyoutIcon.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.BaseShellItem.FlyoutIcon.set -> void
~Microsoft.Maui.Controls.BaseShellItem.Icon.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.BaseShellItem.Icon.set -> void
~Microsoft.Maui.Controls.BaseShellItem.Route.get -> string
~Microsoft.Maui.Controls.BaseShellItem.Route.set -> void
~Microsoft.Maui.Controls.BaseShellItem.Title.get -> string
~Microsoft.Maui.Controls.BaseShellItem.Title.set -> void
~Microsoft.Maui.Controls.BaseShellItem.Window.get -> Microsoft.Maui.Controls.Window
~Microsoft.Maui.Controls.Behavior.AssociatedType.get -> System.Type
~Microsoft.Maui.Controls.Behavior<T>
~Microsoft.Maui.Controls.BindableObject.BindingContext.get -> object
~Microsoft.Maui.Controls.BindableObject.BindingContext.set -> void
~Microsoft.Maui.Controls.BindableObject.ClearValue(Microsoft.Maui.Controls.BindableProperty property) -> void
~Microsoft.Maui.Controls.BindableObject.ClearValue(Microsoft.Maui.Controls.BindablePropertyKey propertyKey) -> void
~Microsoft.Maui.Controls.BindableObject.CoerceValue(Microsoft.Maui.Controls.BindableProperty property) -> void
~Microsoft.Maui.Controls.BindableObject.CoerceValue(Microsoft.Maui.Controls.BindablePropertyKey propertyKey) -> void
~Microsoft.Maui.Controls.BindableObject.Dispatcher.get -> Microsoft.Maui.Dispatching.IDispatcher
~Microsoft.Maui.Controls.BindableObject.GetValue(Microsoft.Maui.Controls.BindableProperty property) -> object
~Microsoft.Maui.Controls.BindableObject.IsSet(Microsoft.Maui.Controls.BindableProperty targetProperty) -> bool
~Microsoft.Maui.Controls.BindableObject.RemoveBinding(Microsoft.Maui.Controls.BindableProperty property) -> void
~Microsoft.Maui.Controls.BindableObject.SetBinding(Microsoft.Maui.Controls.BindableProperty targetProperty, Microsoft.Maui.Controls.BindingBase binding) -> void
~Microsoft.Maui.Controls.BindableObject.SetValue(Microsoft.Maui.Controls.BindableProperty property, object value) -> void
~Microsoft.Maui.Controls.BindableObject.SetValue(Microsoft.Maui.Controls.BindablePropertyKey propertyKey, object value) -> void
~Microsoft.Maui.Controls.BindableProperty.DeclaringType.get -> System.Type
~Microsoft.Maui.Controls.BindableProperty.DefaultValue.get -> object
~Microsoft.Maui.Controls.BindableProperty.PropertyName.get -> string
~Microsoft.Maui.Controls.BindableProperty.ReturnType.get -> System.Type
~Microsoft.Maui.Controls.BindablePropertyKey.BindableProperty.get -> Microsoft.Maui.Controls.BindableProperty
~Microsoft.Maui.Controls.Binding.Binding(string path, Microsoft.Maui.Controls.BindingMode mode = Microsoft.Maui.Controls.BindingMode.Default, Microsoft.Maui.Controls.IValueConverter converter = null, object converterParameter = null, string stringFormat = null, object source = null) -> void
~Microsoft.Maui.Controls.Binding.Converter.get -> Microsoft.Maui.Controls.IValueConverter
~Microsoft.Maui.Controls.Binding.Converter.set -> void
~Microsoft.Maui.Controls.Binding.ConverterParameter.get -> object
~Microsoft.Maui.Controls.Binding.ConverterParameter.set -> void
~Microsoft.Maui.Controls.Binding.Path.get -> string
~Microsoft.Maui.Controls.Binding.Path.set -> void
~Microsoft.Maui.Controls.Binding.Source.get -> object
~Microsoft.Maui.Controls.Binding.Source.set -> void
~Microsoft.Maui.Controls.Binding.UpdateSourceEventName.get -> string
~Microsoft.Maui.Controls.Binding.UpdateSourceEventName.set -> void
~Microsoft.Maui.Controls.BindingBase.FallbackValue.get -> object
~Microsoft.Maui.Controls.BindingBase.FallbackValue.set -> void
~Microsoft.Maui.Controls.BindingBase.StringFormat.get -> string
~Microsoft.Maui.Controls.BindingBase.StringFormat.set -> void
~Microsoft.Maui.Controls.BindingBase.TargetNullValue.get -> object
~Microsoft.Maui.Controls.BindingBase.TargetNullValue.set -> void
~Microsoft.Maui.Controls.BindingCondition.Binding.get -> Microsoft.Maui.Controls.BindingBase
~Microsoft.Maui.Controls.BindingCondition.Binding.set -> void
~Microsoft.Maui.Controls.BindingCondition.Value.get -> object
~Microsoft.Maui.Controls.BindingCondition.Value.set -> void
~Microsoft.Maui.Controls.BoxView.Color.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.BoxView.Color.set -> void
~Microsoft.Maui.Controls.BoxView.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.BoxView>
~Microsoft.Maui.Controls.BrushTypeConverter.GradientBrushParser.GradientBrushParser(Microsoft.Maui.Graphics.Converters.ColorTypeConverter colorConverter = null) -> void
~Microsoft.Maui.Controls.BrushTypeConverter.GradientBrushParser.Parse(string css) -> Microsoft.Maui.Controls.GradientBrush
~Microsoft.Maui.Controls.Button.BorderColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.Button.BorderColor.set -> void
~Microsoft.Maui.Controls.Button.Command.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.Button.Command.set -> void
~Microsoft.Maui.Controls.Button.CommandParameter.get -> object
~Microsoft.Maui.Controls.Button.CommandParameter.set -> void
~Microsoft.Maui.Controls.Button.ContentLayout.get -> Microsoft.Maui.Controls.Button.ButtonContentLayout
~Microsoft.Maui.Controls.Button.ContentLayout.set -> void
~Microsoft.Maui.Controls.Button.FontFamily.get -> string
~Microsoft.Maui.Controls.Button.FontFamily.set -> void
~Microsoft.Maui.Controls.Button.ImageSource.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.Button.ImageSource.set -> void
~Microsoft.Maui.Controls.Button.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.Button>
~Microsoft.Maui.Controls.Button.Text.get -> string
~Microsoft.Maui.Controls.Button.Text.set -> void
~Microsoft.Maui.Controls.Button.TextColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.Button.TextColor.set -> void
~Microsoft.Maui.Controls.CarouselView.CurrentItem.get -> object
~Microsoft.Maui.Controls.CarouselView.CurrentItem.set -> void
~Microsoft.Maui.Controls.CarouselView.CurrentItemChangedCommand.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.CarouselView.CurrentItemChangedCommand.set -> void
~Microsoft.Maui.Controls.CarouselView.CurrentItemChangedCommandParameter.get -> object
~Microsoft.Maui.Controls.CarouselView.CurrentItemChangedCommandParameter.set -> void
~Microsoft.Maui.Controls.CarouselView.IndicatorView.set -> void
~Microsoft.Maui.Controls.CarouselView.ItemsLayout.get -> Microsoft.Maui.Controls.LinearItemsLayout
~Microsoft.Maui.Controls.CarouselView.ItemsLayout.set -> void
~Microsoft.Maui.Controls.CarouselView.PositionChangedCommand.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.CarouselView.PositionChangedCommand.set -> void
~Microsoft.Maui.Controls.CarouselView.PositionChangedCommandParameter.get -> object
~Microsoft.Maui.Controls.CarouselView.PositionChangedCommandParameter.set -> void
~Microsoft.Maui.Controls.CarouselView.VisibleViews.get -> System.Collections.ObjectModel.ObservableCollection<Microsoft.Maui.Controls.View>
~Microsoft.Maui.Controls.Cell.ContextActions.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.MenuItem>
~Microsoft.Maui.Controls.Cell.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.Cell>
~Microsoft.Maui.Controls.CheckBox.Color.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.CheckBox.Color.set -> void
~Microsoft.Maui.Controls.CheckBox.Foreground.get -> Microsoft.Maui.Graphics.Paint
~Microsoft.Maui.Controls.CheckBox.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.CheckBox>
~Microsoft.Maui.Controls.ChildGestureRecognizer.GestureRecognizer.get -> Microsoft.Maui.Controls.IGestureRecognizer
~Microsoft.Maui.Controls.ChildGestureRecognizer.GestureRecognizer.set -> void
~Microsoft.Maui.Controls.ChildGestureRecognizer.OnPropertyChanged(string propertyName = "") -> void
~Microsoft.Maui.Controls.ClickedEventArgs.ClickedEventArgs(Microsoft.Maui.Controls.ButtonsMask buttons, object commandParameter) -> void
~Microsoft.Maui.Controls.ClickedEventArgs.Parameter.get -> object
~Microsoft.Maui.Controls.ClickGestureRecognizer.Command.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.ClickGestureRecognizer.Command.set -> void
~Microsoft.Maui.Controls.ClickGestureRecognizer.CommandParameter.get -> object
~Microsoft.Maui.Controls.ClickGestureRecognizer.CommandParameter.set -> void
~Microsoft.Maui.Controls.ClickGestureRecognizer.SendClicked(Microsoft.Maui.Controls.View sender, Microsoft.Maui.Controls.ButtonsMask buttons) -> void
~Microsoft.Maui.Controls.ColumnDefinitionCollection.ColumnDefinitionCollection(params Microsoft.Maui.Controls.ColumnDefinition[] definitions) -> void
~Microsoft.Maui.Controls.Command.CanExecute(object parameter) -> bool
~Microsoft.Maui.Controls.Command.Command(System.Action execute, System.Func<bool> canExecute) -> void
~Microsoft.Maui.Controls.Command.Command(System.Action execute) -> void
~Microsoft.Maui.Controls.Command.Command(System.Action<object> execute, System.Func<object, bool> canExecute) -> void
~Microsoft.Maui.Controls.Command.Command(System.Action<object> execute) -> void
~Microsoft.Maui.Controls.Command.Execute(object parameter) -> void
~Microsoft.Maui.Controls.Command<T>.Command(System.Action<T> execute, System.Func<T, bool> canExecute) -> void
~Microsoft.Maui.Controls.Command<T>.Command(System.Action<T> execute) -> void
~Microsoft.Maui.Controls.CompareStateTrigger.Property.get -> object
~Microsoft.Maui.Controls.CompareStateTrigger.Property.set -> void
~Microsoft.Maui.Controls.CompareStateTrigger.Value.get -> object
~Microsoft.Maui.Controls.CompareStateTrigger.Value.set -> void
~Microsoft.Maui.Controls.Compatibility.AbsoluteLayout.Children.get -> Microsoft.Maui.Controls.Compatibility.AbsoluteLayout.IAbsoluteList<Microsoft.Maui.Controls.View>
~Microsoft.Maui.Controls.Compatibility.AbsoluteLayout.IAbsoluteList<T>
~Microsoft.Maui.Controls.Compatibility.AbsoluteLayout.IAbsoluteList<T>.Add(Microsoft.Maui.Controls.View view, Microsoft.Maui.Graphics.Point position) -> void
~Microsoft.Maui.Controls.Compatibility.AbsoluteLayout.IAbsoluteList<T>.Add(Microsoft.Maui.Controls.View view, Microsoft.Maui.Graphics.Rect bounds, Microsoft.Maui.Layouts.AbsoluteLayoutFlags flags = Microsoft.Maui.Layouts.AbsoluteLayoutFlags.None) -> void
~Microsoft.Maui.Controls.Compatibility.AbsoluteLayout.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.Compatibility.AbsoluteLayout>
~Microsoft.Maui.Controls.Compatibility.ConstraintExpression.ElementName.get -> string
~Microsoft.Maui.Controls.Compatibility.ConstraintExpression.ElementName.set -> void
~Microsoft.Maui.Controls.Compatibility.ConstraintExpression.Property.get -> string
~Microsoft.Maui.Controls.Compatibility.ConstraintExpression.Property.set -> void
~Microsoft.Maui.Controls.Compatibility.ConstraintExpression.ProvideValue(System.IServiceProvider serviceProvider) -> Microsoft.Maui.Controls.Compatibility.Constraint
~Microsoft.Maui.Controls.Compatibility.Grid.Children.get -> Microsoft.Maui.Controls.Compatibility.Grid.IGridList<Microsoft.Maui.Controls.View>
~Microsoft.Maui.Controls.Compatibility.Grid.ColumnDefinitions.get -> Microsoft.Maui.Controls.ColumnDefinitionCollection
~Microsoft.Maui.Controls.Compatibility.Grid.ColumnDefinitions.set -> void
~Microsoft.Maui.Controls.Compatibility.Grid.IGridList<T>
~Microsoft.Maui.Controls.Compatibility.Grid.IGridList<T>.Add(Microsoft.Maui.Controls.View view, int left, int right, int top, int bottom) -> void
~Microsoft.Maui.Controls.Compatibility.Grid.IGridList<T>.Add(Microsoft.Maui.Controls.View view, int left, int top) -> void
~Microsoft.Maui.Controls.Compatibility.Grid.IGridList<T>.AddHorizontal(Microsoft.Maui.Controls.View view) -> void
~Microsoft.Maui.Controls.Compatibility.Grid.IGridList<T>.AddHorizontal(System.Collections.Generic.IEnumerable<Microsoft.Maui.Controls.View> views) -> void
~Microsoft.Maui.Controls.Compatibility.Grid.IGridList<T>.AddVertical(Microsoft.Maui.Controls.View view) -> void
~Microsoft.Maui.Controls.Compatibility.Grid.IGridList<T>.AddVertical(System.Collections.Generic.IEnumerable<Microsoft.Maui.Controls.View> views) -> void
~Microsoft.Maui.Controls.Compatibility.Grid.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.Compatibility.Grid>
~Microsoft.Maui.Controls.Compatibility.Grid.RowDefinitions.get -> Microsoft.Maui.Controls.RowDefinitionCollection
~Microsoft.Maui.Controls.Compatibility.Grid.RowDefinitions.set -> void
~Microsoft.Maui.Controls.Compatibility.INativeElementView.Element.get -> Microsoft.Maui.Controls.Element
~Microsoft.Maui.Controls.Compatibility.Layout.Children.get -> System.Collections.Generic.IReadOnlyList<Microsoft.Maui.Controls.Element>
~Microsoft.Maui.Controls.Compatibility.Layout.LowerChild(Microsoft.Maui.Controls.View view) -> void
~Microsoft.Maui.Controls.Compatibility.Layout.OnChildMeasureInvalidated(object sender, System.EventArgs e) -> void
~Microsoft.Maui.Controls.Compatibility.Layout.RaiseChild(Microsoft.Maui.Controls.View view) -> void
~Microsoft.Maui.Controls.Compatibility.Layout<T>
~Microsoft.Maui.Controls.Compatibility.Layout<T>.Children.get -> System.Collections.Generic.IList<T>
~Microsoft.Maui.Controls.Compatibility.Layout<T>.LayoutHandler.get -> Microsoft.Maui.ILayoutHandler
~Microsoft.Maui.Controls.Compatibility.Layout<T>.this[int index].get -> Microsoft.Maui.IView
~Microsoft.Maui.Controls.Compatibility.Layout<T>.this[int index].set -> void
~Microsoft.Maui.Controls.Compatibility.RelativeLayout.Children.get -> Microsoft.Maui.Controls.Compatibility.RelativeLayout.IRelativeList<Microsoft.Maui.Controls.View>
~Microsoft.Maui.Controls.Compatibility.RelativeLayout.IRelativeList<T>
~Microsoft.Maui.Controls.Compatibility.RelativeLayout.IRelativeList<T>.Add(T view, Microsoft.Maui.Controls.Compatibility.Constraint xConstraint = null, Microsoft.Maui.Controls.Compatibility.Constraint yConstraint = null, Microsoft.Maui.Controls.Compatibility.Constraint widthConstraint = null, Microsoft.Maui.Controls.Compatibility.Constraint heightConstraint = null) -> void
~Microsoft.Maui.Controls.Compatibility.RelativeLayout.IRelativeList<T>.Add(T view, System.Linq.Expressions.Expression<System.Func<double>> x = null, System.Linq.Expressions.Expression<System.Func<double>> y = null, System.Linq.Expressions.Expression<System.Func<double>> width = null, System.Linq.Expressions.Expression<System.Func<double>> height = null) -> void
~Microsoft.Maui.Controls.Compatibility.RelativeLayout.IRelativeList<T>.Add(T view, System.Linq.Expressions.Expression<System.Func<Microsoft.Maui.Graphics.Rect>> bounds) -> void
~Microsoft.Maui.Controls.Compatibility.RelativeLayout.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.Compatibility.RelativeLayout>
~Microsoft.Maui.Controls.Compatibility.StackLayout.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.Compatibility.StackLayout>
~Microsoft.Maui.Controls.Configuration<TPlatform, TElement>
~Microsoft.Maui.Controls.Configuration<TPlatform, TElement>.Configuration(TElement element) -> void
~Microsoft.Maui.Controls.Configuration<TPlatform, TElement>.Element.get -> TElement
~Microsoft.Maui.Controls.ContentPage.Content.get -> Microsoft.Maui.Controls.View
~Microsoft.Maui.Controls.ContentPage.Content.set -> void
~Microsoft.Maui.Controls.ContentPresenter.Content.get -> Microsoft.Maui.Controls.View
~Microsoft.Maui.Controls.ContentPresenter.Content.set -> void
~Microsoft.Maui.Controls.ContentPropertyAttribute.ContentPropertyAttribute(string name) -> void
~Microsoft.Maui.Controls.ContentPropertyAttribute.Name.get -> string
~Microsoft.Maui.Controls.ContentView.Content.get -> Microsoft.Maui.Controls.View
~Microsoft.Maui.Controls.ContentView.Content.set -> void
~Microsoft.Maui.Controls.ControlTemplate.ControlTemplate(System.Func<object> createTemplate) -> void
~Microsoft.Maui.Controls.ControlTemplate.ControlTemplate(System.Type type) -> void
~Microsoft.Maui.Controls.CurrentItemChangedEventArgs.CurrentItem.get -> object
~Microsoft.Maui.Controls.CurrentItemChangedEventArgs.PreviousItem.get -> object
~Microsoft.Maui.Controls.DataPackage.Image.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.DataPackage.Image.set -> void
~Microsoft.Maui.Controls.DataPackage.Properties.get -> Microsoft.Maui.Controls.DataPackagePropertySet
~Microsoft.Maui.Controls.DataPackage.Text.get -> string
~Microsoft.Maui.Controls.DataPackage.Text.set -> void
~Microsoft.Maui.Controls.DataPackage.View.get -> Microsoft.Maui.Controls.DataPackageView
~Microsoft.Maui.Controls.DataPackagePropertySet.Add(string key, object value) -> void
~Microsoft.Maui.Controls.DataPackagePropertySet.ContainsKey(string key) -> bool
~Microsoft.Maui.Controls.DataPackagePropertySet.GetEnumerator() -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string, object>>
~Microsoft.Maui.Controls.DataPackagePropertySet.Keys.get -> System.Collections.Generic.IEnumerable<string>
~Microsoft.Maui.Controls.DataPackagePropertySet.this[string key].get -> object
~Microsoft.Maui.Controls.DataPackagePropertySet.this[string key].set -> void
~Microsoft.Maui.Controls.DataPackagePropertySet.TryGetValue(string key, out object value) -> bool
~Microsoft.Maui.Controls.DataPackagePropertySet.Values.get -> System.Collections.Generic.IEnumerable<object>
~Microsoft.Maui.Controls.DataPackagePropertySetView._dataPackagePropertySet -> Microsoft.Maui.Controls.DataPackagePropertySet
~Microsoft.Maui.Controls.DataPackagePropertySetView.ContainsKey(string key) -> bool
~Microsoft.Maui.Controls.DataPackagePropertySetView.DataPackagePropertySetView(Microsoft.Maui.Controls.DataPackagePropertySet dataPackagePropertySet) -> void
~Microsoft.Maui.Controls.DataPackagePropertySetView.GetEnumerator() -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string, object>>
~Microsoft.Maui.Controls.DataPackagePropertySetView.Keys.get -> System.Collections.Generic.IEnumerable<string>
~Microsoft.Maui.Controls.DataPackagePropertySetView.this[string key].get -> object
~Microsoft.Maui.Controls.DataPackagePropertySetView.TryGetValue(string key, out object value) -> bool
~Microsoft.Maui.Controls.DataPackagePropertySetView.Values.get -> System.Collections.Generic.IEnumerable<object>
~Microsoft.Maui.Controls.DataPackageView.GetImageAsync() -> System.Threading.Tasks.Task<Microsoft.Maui.Controls.ImageSource>
~Microsoft.Maui.Controls.DataPackageView.GetTextAsync() -> System.Threading.Tasks.Task<string>
~Microsoft.Maui.Controls.DataPackageView.Properties.get -> Microsoft.Maui.Controls.DataPackagePropertySetView
~Microsoft.Maui.Controls.DataTemplate.Bindings.get -> System.Collections.Generic.IDictionary<Microsoft.Maui.Controls.BindableProperty, Microsoft.Maui.Controls.BindingBase>
~Microsoft.Maui.Controls.DataTemplate.DataTemplate(System.Func<object> loadTemplate) -> void
~Microsoft.Maui.Controls.DataTemplate.DataTemplate(System.Type type) -> void
~Microsoft.Maui.Controls.DataTemplate.SetBinding(Microsoft.Maui.Controls.BindableProperty property, Microsoft.Maui.Controls.BindingBase binding) -> void
~Microsoft.Maui.Controls.DataTemplate.SetValue(Microsoft.Maui.Controls.BindableProperty property, object value) -> void
~Microsoft.Maui.Controls.DataTemplate.Values.get -> System.Collections.Generic.IDictionary<Microsoft.Maui.Controls.BindableProperty, object>
~Microsoft.Maui.Controls.DataTemplateSelector.SelectTemplate(object item, Microsoft.Maui.Controls.BindableObject container) -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.DataTrigger.Binding.get -> Microsoft.Maui.Controls.BindingBase
~Microsoft.Maui.Controls.DataTrigger.Binding.set -> void
~Microsoft.Maui.Controls.DataTrigger.DataTrigger(System.Type targetType) -> void
~Microsoft.Maui.Controls.DataTrigger.Setters.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.Setter>
~Microsoft.Maui.Controls.DataTrigger.Value.get -> object
~Microsoft.Maui.Controls.DataTrigger.Value.set -> void
~Microsoft.Maui.Controls.DatePicker.FontFamily.get -> string
~Microsoft.Maui.Controls.DatePicker.FontFamily.set -> void
~Microsoft.Maui.Controls.DatePicker.Format.get -> string
~Microsoft.Maui.Controls.DatePicker.Format.set -> void
~Microsoft.Maui.Controls.DatePicker.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.DatePicker>
~Microsoft.Maui.Controls.DatePicker.TextColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.DatePicker.TextColor.set -> void
~Microsoft.Maui.Controls.DefinitionCollection<T>
~Microsoft.Maui.Controls.DefinitionCollection<T>.CopyTo(T[] array, int arrayIndex) -> void
~Microsoft.Maui.Controls.DefinitionCollection<T>.GetEnumerator() -> System.Collections.Generic.IEnumerator<T>
~Microsoft.Maui.Controls.DependencyAttribute.DependencyAttribute(System.Type implementorType) -> void
~Microsoft.Maui.Controls.DeviceStateTrigger.Device.get -> string
~Microsoft.Maui.Controls.DeviceStateTrigger.Device.set -> void
~Microsoft.Maui.Controls.DoubleCollection.DoubleCollection(double[] values) -> void
~Microsoft.Maui.Controls.DropGestureRecognizer.DragLeaveCommand.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.DropGestureRecognizer.DragLeaveCommand.set -> void
~Microsoft.Maui.Controls.DropGestureRecognizer.DragLeaveCommandParameter.get -> object
~Microsoft.Maui.Controls.DropGestureRecognizer.DragLeaveCommandParameter.set -> void
~Microsoft.Maui.Controls.DropGestureRecognizer.DragOverCommand.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.DropGestureRecognizer.DragOverCommand.set -> void
~Microsoft.Maui.Controls.DropGestureRecognizer.DragOverCommandParameter.get -> object
~Microsoft.Maui.Controls.DropGestureRecognizer.DragOverCommandParameter.set -> void
~Microsoft.Maui.Controls.DropGestureRecognizer.DropCommand.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.DropGestureRecognizer.DropCommand.set -> void
~Microsoft.Maui.Controls.DropGestureRecognizer.DropCommandParameter.get -> object
~Microsoft.Maui.Controls.DropGestureRecognizer.DropCommandParameter.set -> void
~Microsoft.Maui.Controls.DropGestureRecognizer.SendDragOver(Microsoft.Maui.Controls.DragEventArgs args) -> void
~Microsoft.Maui.Controls.Editor.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.Editor>
~Microsoft.Maui.Controls.Effect.Element.get -> Microsoft.Maui.Controls.Element
~Microsoft.Maui.Controls.Effect.ResolveId.get -> string
~Microsoft.Maui.Controls.Element.AddLogicalChild(Microsoft.Maui.Controls.Element element) -> void
~Microsoft.Maui.Controls.Element.AutomationId.get -> string
~Microsoft.Maui.Controls.Element.AutomationId.set -> void
~Microsoft.Maui.Controls.Element.ClassId.get -> string
~Microsoft.Maui.Controls.Element.ClassId.set -> void
~Microsoft.Maui.Controls.Element.EffectControlProvider.get -> Microsoft.Maui.Controls.IEffectControlProvider
~Microsoft.Maui.Controls.Element.EffectControlProvider.set -> void
~Microsoft.Maui.Controls.Element.EffectIsAttached(string name) -> bool
~Microsoft.Maui.Controls.Element.Effects.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.Effect>
~Microsoft.Maui.Controls.Element.FindByName(string name) -> object
~Microsoft.Maui.Controls.Element.Handler.get -> Microsoft.Maui.IElementHandler
~Microsoft.Maui.Controls.Element.Handler.set -> void
~Microsoft.Maui.Controls.Element.InsertLogicalChild(int index, Microsoft.Maui.Controls.Element element) -> void
~Microsoft.Maui.Controls.Element.LogicalChildren.get -> System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.Maui.Controls.Element>
~Microsoft.Maui.Controls.Element.Parent.get -> Microsoft.Maui.Controls.Element
~Microsoft.Maui.Controls.Element.Parent.set -> void
~Microsoft.Maui.Controls.Element.RealParent.get -> Microsoft.Maui.Controls.Element
~Microsoft.Maui.Controls.Element.RemoveDynamicResource(Microsoft.Maui.Controls.BindableProperty property) -> void
~Microsoft.Maui.Controls.Element.RemoveLogicalChild(Microsoft.Maui.Controls.Element element) -> bool
~Microsoft.Maui.Controls.Element.SetDynamicResource(Microsoft.Maui.Controls.BindableProperty property, string key) -> void
~Microsoft.Maui.Controls.Element.SetValueFromRenderer(Microsoft.Maui.Controls.BindableProperty property, object value) -> void
~Microsoft.Maui.Controls.Element.SetValueFromRenderer(Microsoft.Maui.Controls.BindablePropertyKey property, object value) -> void
~Microsoft.Maui.Controls.Element.StyleId.get -> string
~Microsoft.Maui.Controls.Element.StyleId.set -> void
~Microsoft.Maui.Controls.ElementEventArgs.Element.get -> Microsoft.Maui.Controls.Element
~Microsoft.Maui.Controls.ElementEventArgs.ElementEventArgs(Microsoft.Maui.Controls.Element element) -> void
~Microsoft.Maui.Controls.ElementTemplate.CreateContent() -> object
~Microsoft.Maui.Controls.ElementTemplate.LoadTemplate.get -> System.Func<object>
~Microsoft.Maui.Controls.ElementTemplate.LoadTemplate.set -> void
~Microsoft.Maui.Controls.Entry.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.Entry>
~Microsoft.Maui.Controls.Entry.ReturnCommand.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.Entry.ReturnCommand.set -> void
~Microsoft.Maui.Controls.Entry.ReturnCommandParameter.get -> object
~Microsoft.Maui.Controls.Entry.ReturnCommandParameter.set -> void
~Microsoft.Maui.Controls.EntryCell.Keyboard.get -> Microsoft.Maui.Keyboard
~Microsoft.Maui.Controls.EntryCell.Keyboard.set -> void
~Microsoft.Maui.Controls.EntryCell.Label.get -> string
~Microsoft.Maui.Controls.EntryCell.Label.set -> void
~Microsoft.Maui.Controls.EntryCell.LabelColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.EntryCell.LabelColor.set -> void
~Microsoft.Maui.Controls.EntryCell.Placeholder.get -> string
~Microsoft.Maui.Controls.EntryCell.Placeholder.set -> void
~Microsoft.Maui.Controls.EntryCell.Text.get -> string
~Microsoft.Maui.Controls.EntryCell.Text.set -> void
~Microsoft.Maui.Controls.EventTrigger.Actions.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.TriggerAction>
~Microsoft.Maui.Controls.EventTrigger.Event.get -> string
~Microsoft.Maui.Controls.EventTrigger.Event.set -> void
~Microsoft.Maui.Controls.ExportEffectAttribute.ExportEffectAttribute(System.Type effectType, string uniqueName) -> void
~Microsoft.Maui.Controls.ExportFontAttribute.Alias.get -> string
~Microsoft.Maui.Controls.ExportFontAttribute.Alias.set -> void
~Microsoft.Maui.Controls.ExportFontAttribute.ExportFontAttribute(string fontFileName) -> void
~Microsoft.Maui.Controls.ExportFontAttribute.FontFileName.get -> string
~Microsoft.Maui.Controls.FileImageSource.File.get -> string
~Microsoft.Maui.Controls.FileImageSource.File.set -> void
~Microsoft.Maui.Controls.FlexLayout.GetAlignSelf(Microsoft.Maui.IView view) -> Microsoft.Maui.Layouts.FlexAlignSelf
~Microsoft.Maui.Controls.FlexLayout.GetBasis(Microsoft.Maui.IView view) -> Microsoft.Maui.Layouts.FlexBasis
~Microsoft.Maui.Controls.FlexLayout.GetFlexFrame(Microsoft.Maui.IView view) -> Microsoft.Maui.Graphics.Rect
~Microsoft.Maui.Controls.FlexLayout.GetGrow(Microsoft.Maui.IView view) -> float
~Microsoft.Maui.Controls.FlexLayout.GetOrder(Microsoft.Maui.IView view) -> int
~Microsoft.Maui.Controls.FlexLayout.GetShrink(Microsoft.Maui.IView view) -> float
~Microsoft.Maui.Controls.FlexLayout.SetAlignSelf(Microsoft.Maui.IView view, Microsoft.Maui.Layouts.FlexAlignSelf alignSelf) -> void
~Microsoft.Maui.Controls.FlexLayout.SetBasis(Microsoft.Maui.IView view, Microsoft.Maui.Layouts.FlexBasis basis) -> void
~Microsoft.Maui.Controls.FlexLayout.SetGrow(Microsoft.Maui.IView view, float grow) -> void
~Microsoft.Maui.Controls.FlexLayout.SetOrder(Microsoft.Maui.IView view, int order) -> void
~Microsoft.Maui.Controls.FlexLayout.SetShrink(Microsoft.Maui.IView view, float shrink) -> void
~Microsoft.Maui.Controls.FlyoutPage.Detail.get -> Microsoft.Maui.Controls.Page
~Microsoft.Maui.Controls.FlyoutPage.Detail.set -> void
~Microsoft.Maui.Controls.FlyoutPage.Flyout.get -> Microsoft.Maui.Controls.Page
~Microsoft.Maui.Controls.FlyoutPage.Flyout.set -> void
~Microsoft.Maui.Controls.FlyoutPage.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.FlyoutPage>
~Microsoft.Maui.Controls.FocusEventArgs.FocusEventArgs(Microsoft.Maui.Controls.VisualElement visualElement, bool isFocused) -> void
~Microsoft.Maui.Controls.FocusEventArgs.VisualElement.get -> Microsoft.Maui.Controls.VisualElement
~Microsoft.Maui.Controls.FontImageSource.Color.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.FontImageSource.Color.set -> void
~Microsoft.Maui.Controls.FontImageSource.FontFamily.get -> string
~Microsoft.Maui.Controls.FontImageSource.FontFamily.set -> void
~Microsoft.Maui.Controls.FontImageSource.Glyph.get -> string
~Microsoft.Maui.Controls.FontImageSource.Glyph.set -> void
~Microsoft.Maui.Controls.FormattedString.Spans.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.Span>
~Microsoft.Maui.Controls.Frame.BorderColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.Frame.BorderColor.set -> void
~Microsoft.Maui.Controls.Frame.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.Frame>
~Microsoft.Maui.Controls.GestureElement.GestureRecognizers.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.IGestureRecognizer>
~Microsoft.Maui.Controls.GradientBrush.GradientStops.get -> Microsoft.Maui.Controls.GradientStopCollection
~Microsoft.Maui.Controls.GradientBrush.GradientStops.set -> void
~Microsoft.Maui.Controls.GradientStop.Color.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.GradientStop.Color.set -> void
~Microsoft.Maui.Controls.GradientStop.GradientStop(Microsoft.Maui.Graphics.Color color, float offset) -> void
~Microsoft.Maui.Controls.GraphicsView.Drawable.get -> Microsoft.Maui.Graphics.IDrawable
~Microsoft.Maui.Controls.GraphicsView.Drawable.set -> void
~Microsoft.Maui.Controls.Grid.AddColumnDefinition(Microsoft.Maui.Controls.ColumnDefinition gridColumnDefinition) -> void
~Microsoft.Maui.Controls.Grid.AddRowDefinition(Microsoft.Maui.Controls.RowDefinition gridRowDefinition) -> void
~Microsoft.Maui.Controls.Grid.ColumnDefinitions.get -> Microsoft.Maui.Controls.ColumnDefinitionCollection
~Microsoft.Maui.Controls.Grid.ColumnDefinitions.set -> void
~Microsoft.Maui.Controls.Grid.GetColumn(Microsoft.Maui.IView view) -> int
~Microsoft.Maui.Controls.Grid.GetColumnSpan(Microsoft.Maui.IView view) -> int
~Microsoft.Maui.Controls.Grid.GetRow(Microsoft.Maui.IView view) -> int
~Microsoft.Maui.Controls.Grid.GetRowSpan(Microsoft.Maui.IView view) -> int
~Microsoft.Maui.Controls.Grid.RowDefinitions.get -> Microsoft.Maui.Controls.RowDefinitionCollection
~Microsoft.Maui.Controls.Grid.RowDefinitions.set -> void
~Microsoft.Maui.Controls.Grid.SetColumn(Microsoft.Maui.IView view, int col) -> void
~Microsoft.Maui.Controls.Grid.SetColumnSpan(Microsoft.Maui.IView view, int span) -> void
~Microsoft.Maui.Controls.Grid.SetRow(Microsoft.Maui.IView view, int row) -> void
~Microsoft.Maui.Controls.Grid.SetRowSpan(Microsoft.Maui.IView view, int span) -> void
~Microsoft.Maui.Controls.GroupableItemsView.GroupFooterTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.GroupableItemsView.GroupFooterTemplate.set -> void
~Microsoft.Maui.Controls.GroupableItemsView.GroupHeaderTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.GroupableItemsView.GroupHeaderTemplate.set -> void
~Microsoft.Maui.Controls.HandlerAttribute.HandlerAttribute(System.Type handler, System.Type target, System.Type[] supportedVisuals) -> void
~Microsoft.Maui.Controls.HandlerAttribute.HandlerAttribute(System.Type handler, System.Type target) -> void
~Microsoft.Maui.Controls.HandlerChangingEventArgs.HandlerChangingEventArgs(Microsoft.Maui.IElementHandler oldHandler, Microsoft.Maui.IElementHandler newHandler) -> void
~Microsoft.Maui.Controls.HandlerChangingEventArgs.NewHandler.get -> Microsoft.Maui.IElementHandler
~Microsoft.Maui.Controls.HandlerChangingEventArgs.OldHandler.get -> Microsoft.Maui.IElementHandler
~Microsoft.Maui.Controls.Handlers.Compatibility.BaseCellView.AccessoryView.get -> Android.Views.View
~Microsoft.Maui.Controls.Handlers.Compatibility.BaseCellView.BaseCellView(Android.Content.Context context, Microsoft.Maui.Controls.Cell cell) -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.BaseCellView.DetailText.get -> string
~Microsoft.Maui.Controls.Handlers.Compatibility.BaseCellView.DetailText.set -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.BaseCellView.MainText.get -> string
~Microsoft.Maui.Controls.Handlers.Compatibility.BaseCellView.MainText.set -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.BaseCellView.SetAccessoryView(Android.Views.View view) -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.BaseCellView.SetDefaultMainTextColor(Microsoft.Maui.Graphics.Color defaultColor) -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.BaseCellView.SetDetailTextColor(Microsoft.Maui.Graphics.Color color) -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.BaseCellView.SetImageSource(Microsoft.Maui.Controls.ImageSource source) -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.BaseCellView.SetMainTextColor(Microsoft.Maui.Graphics.Color color) -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.CellAdapter.CellAdapter(Android.Content.Context context) -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.CellAdapter.OnActionItemClicked(Android.Views.ActionMode mode, Android.Views.IMenuItem item) -> bool
~Microsoft.Maui.Controls.Handlers.Compatibility.CellAdapter.OnCreateActionMode(Android.Views.ActionMode mode, Android.Views.IMenu menu) -> bool
~Microsoft.Maui.Controls.Handlers.Compatibility.CellAdapter.OnDestroyActionMode(Android.Views.ActionMode mode) -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.CellAdapter.OnItemClick(Android.Widget.AdapterView parent, Android.Views.View view, int position, long id) -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.CellAdapter.OnItemLongClick(Android.Widget.AdapterView parent, Android.Views.View view, int position, long id) -> bool
~Microsoft.Maui.Controls.Handlers.Compatibility.CellAdapter.OnPrepareActionMode(Android.Views.ActionMode mode, Android.Views.IMenu menu) -> bool
~Microsoft.Maui.Controls.Handlers.Compatibility.CellAdapter.SetSelectedBackground(Android.Views.View view, bool isContextTarget = false) -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.CellAdapter.UnsetSelectedBackground(Android.Views.View view) -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.CellRenderer.Cell.get -> Microsoft.Maui.Controls.Cell
~Microsoft.Maui.Controls.Handlers.Compatibility.CellRenderer.Cell.set -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.CellRenderer.GetCell(Microsoft.Maui.Controls.Cell item, Android.Views.View convertView, Android.Views.ViewGroup parent, Android.Content.Context context) -> Android.Views.View
~Microsoft.Maui.Controls.Handlers.Compatibility.CellRenderer.ParentView.get -> Microsoft.Maui.Controls.View
~Microsoft.Maui.Controls.Handlers.Compatibility.CellRenderer.ParentView.set -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.CellRenderer.WireUpForceUpdateSizeRequested(Microsoft.Maui.Controls.Cell cell, Android.Views.View platformCell) -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellEditText.EntryCellEditText(Android.Content.Context context) -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellView.EditingCompleted.get -> System.Action
~Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellView.EditingCompleted.set -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellView.EditText.get -> Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellEditText
~Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellView.Element.get -> Microsoft.Maui.Controls.Element
~Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellView.EntryCellView(Android.Content.Context context, Microsoft.Maui.Controls.Cell cell) -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellView.FocusChanged.get -> System.Action<bool>
~Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellView.FocusChanged.set -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellView.LabelText.get -> string
~Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellView.LabelText.set -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellView.SetLabelTextColor(Microsoft.Maui.Graphics.Color color, int defaultColorResourceId) -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellView.TextChanged.get -> System.Action<string>
~Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellView.TextChanged.set -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.ListViewRenderer.ListViewRenderer(Android.Content.Context context) -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.AndroidContext.get -> Android.Content.Context
~Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.Element.get -> Microsoft.Maui.Controls.Shell
~Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.ShellRenderer(Android.Content.Context context) -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.SwitchCellView.Cell.get -> Microsoft.Maui.Controls.SwitchCell
~Microsoft.Maui.Controls.Handlers.Compatibility.SwitchCellView.Cell.set -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.SwitchCellView.OnCheckedChanged(Android.Widget.CompoundButton buttonView, bool isChecked) -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.SwitchCellView.SwitchCellView(Android.Content.Context context, Microsoft.Maui.Controls.Cell cell) -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.TableViewModelRenderer.TableViewModelRenderer(Android.Content.Context context, Android.Widget.ListView listView, Microsoft.Maui.Controls.TableView view) -> void
~Microsoft.Maui.Controls.Handlers.Compatibility.TableViewRenderer.TableViewRenderer(Android.Content.Context context) -> void
~Microsoft.Maui.Controls.Handlers.Items.CarouselViewAdapter<TItemsView, TItemsViewSource>
~Microsoft.Maui.Controls.Handlers.Items.CarouselViewHandler.CarouselViewHandler(Microsoft.Maui.PropertyMapper mapper = null) -> void
~Microsoft.Maui.Controls.Handlers.Items.CollectionViewHandler.CollectionViewHandler(Microsoft.Maui.PropertyMapper mapper = null) -> void
~Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.BindTemplatedItemViewHolder(Microsoft.Maui.Controls.Handlers.Items.TemplatedItemViewHolder templatedItemViewHolder, object context) -> void
~Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.CreateEmptyViewHolder(object content, Microsoft.Maui.Controls.DataTemplate template, Android.Views.ViewGroup parent) -> AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder
~Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.CreateHeaderFooterViewHolder(object content, Microsoft.Maui.Controls.DataTemplate template, Android.Content.Context context) -> AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder
~Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.EmptyView.get -> object
~Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.EmptyView.set -> void
~Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.EmptyViewAdapter(Microsoft.Maui.Controls.ItemsView itemsView) -> void
~Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.EmptyViewTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.EmptyViewTemplate.set -> void
~Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.Footer.get -> object
~Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.Footer.set -> void
~Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.FooterTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.FooterTemplate.set -> void
~Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.Header.get -> object
~Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.Header.set -> void
~Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.HeaderTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.HeaderTemplate.set -> void
~Microsoft.Maui.Controls.Handlers.Items.GroupableItemsViewAdapter<TItemsView, TItemsViewSource>
~Microsoft.Maui.Controls.Handlers.Items.GroupableItemsViewAdapter<TItemsView, TItemsViewSource>.GroupableItemsViewAdapter(TItemsView groupableItemsView, System.Func<Microsoft.Maui.Controls.View, Android.Content.Context, Microsoft.Maui.Controls.Handlers.Items.ItemContentView> createView = null) -> void
~Microsoft.Maui.Controls.Handlers.Items.GroupableItemsViewHandler<TItemsView>
~Microsoft.Maui.Controls.Handlers.Items.GroupableItemsViewHandler<TItemsView>.GroupableItemsViewHandler(Microsoft.Maui.PropertyMapper mapper = null) -> void
~Microsoft.Maui.Controls.Handlers.Items.IGroupableItemsViewSource.GetGroup(int groupIndex) -> object
~Microsoft.Maui.Controls.Handlers.Items.IGroupableItemsViewSource.GetGroupItemsViewSource(int groupIndex) -> Microsoft.Maui.Controls.Handlers.Items.IItemsViewSource
~Microsoft.Maui.Controls.Handlers.Items.IItemsViewSource.GetItem(int position) -> object
~Microsoft.Maui.Controls.Handlers.Items.IItemsViewSource.GetPosition(object item) -> int
~Microsoft.Maui.Controls.Handlers.Items.IMauiRecyclerView<TItemsView>
~Microsoft.Maui.Controls.Handlers.Items.IMauiRecyclerView<TItemsView>.ItemsLayout.get -> Microsoft.Maui.Controls.IItemsLayout
~Microsoft.Maui.Controls.Handlers.Items.IMauiRecyclerView<TItemsView>.ScrollTo(Microsoft.Maui.Controls.ScrollToRequestEventArgs args) -> void
~Microsoft.Maui.Controls.Handlers.Items.IMauiRecyclerView<TItemsView>.SetUpNewElement(TItemsView newElement) -> void
~Microsoft.Maui.Controls.Handlers.Items.IMauiRecyclerView<TItemsView>.TearDownOldElement(TItemsView oldElement) -> void
~Microsoft.Maui.Controls.Handlers.Items.ItemContentView.Content -> Microsoft.Maui.IPlatformViewHandler
~Microsoft.Maui.Controls.Handlers.Items.ItemContentView.ItemContentView(Android.Content.Context context) -> void
~Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<TItemsView, TItemsViewSource>
~Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<TItemsView, TItemsViewSource>.ItemsViewAdapter(TItemsView itemsView, System.Func<Microsoft.Maui.Controls.View, Android.Content.Context, Microsoft.Maui.Controls.Handlers.Items.ItemContentView> createItemContentView = null) -> void
~Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>
~Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>.ItemsViewHandler(Microsoft.Maui.PropertyMapper mapper = null) -> void
~Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>.ItemsViewHandler(Microsoft.Maui.PropertyMapper mapper, Microsoft.Maui.CommandMapper commandMapper = null) -> void
~Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView.Carousel.get -> Microsoft.Maui.Controls.CarouselView
~Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView.MauiCarouselRecyclerView(Android.Content.Context context, System.Func<Microsoft.Maui.Controls.IItemsLayout> getItemsLayout, System.Func<Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<Microsoft.Maui.Controls.CarouselView, Microsoft.Maui.Controls.Handlers.Items.IItemsViewSource>> getAdapter) -> void
~Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>
~Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.CreateAdapter -> System.Func<TAdapter>
~Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.ItemsLayout.get -> Microsoft.Maui.Controls.IItemsLayout
~Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.ItemsView -> TItemsView
~Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.ItemsViewAdapter -> TAdapter
~Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.MauiRecyclerView(Android.Content.Context context, System.Func<Microsoft.Maui.Controls.IItemsLayout> getItemsLayout, System.Func<TAdapter> getAdapter) -> void
~Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.RecyclerViewScrollListener -> AndroidX.RecyclerView.Widget.RecyclerView.OnScrollListener
~Microsoft.Maui.Controls.Handlers.Items.RecyclerViewScrollListener<TItemsView, TItemsViewSource>
~Microsoft.Maui.Controls.Handlers.Items.RecyclerViewScrollListener<TItemsView, TItemsViewSource>.ItemsViewAdapter -> Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<TItemsView, TItemsViewSource>
~Microsoft.Maui.Controls.Handlers.Items.RecyclerViewScrollListener<TItemsView, TItemsViewSource>.RecyclerViewScrollListener(TItemsView itemsView, Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<TItemsView, TItemsViewSource> itemsViewAdapter, bool getCenteredItemOnXAndY) -> void
~Microsoft.Maui.Controls.Handlers.Items.RecyclerViewScrollListener<TItemsView, TItemsViewSource>.RecyclerViewScrollListener(TItemsView itemsView, Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<TItemsView, TItemsViewSource> itemsViewAdapter) -> void
~Microsoft.Maui.Controls.Handlers.Items.ReorderableItemsViewAdapter<TItemsView, TItemsViewSource>
~Microsoft.Maui.Controls.Handlers.Items.ReorderableItemsViewAdapter<TItemsView, TItemsViewSource>.ReorderableItemsViewAdapter(TItemsView reorderableItemsView, System.Func<Microsoft.Maui.Controls.View, Android.Content.Context, Microsoft.Maui.Controls.Handlers.Items.ItemContentView> createView = null) -> void
~Microsoft.Maui.Controls.Handlers.Items.ReorderableItemsViewHandler<TItemsView>
~Microsoft.Maui.Controls.Handlers.Items.ReorderableItemsViewHandler<TItemsView>.ReorderableItemsViewHandler(Microsoft.Maui.PropertyMapper mapper = null) -> void
~Microsoft.Maui.Controls.Handlers.Items.SelectableItemsViewAdapter<TItemsView, TItemsSource>
~Microsoft.Maui.Controls.Handlers.Items.SelectableItemsViewAdapter<TItemsView, TItemsSource>.SelectableItemsViewAdapter(TItemsView selectableItemsView, System.Func<Microsoft.Maui.Controls.View, Android.Content.Context, Microsoft.Maui.Controls.Handlers.Items.ItemContentView> createView = null) -> void
~Microsoft.Maui.Controls.Handlers.Items.SelectableItemsViewHandler<TItemsView>
~Microsoft.Maui.Controls.Handlers.Items.SelectableItemsViewHandler<TItemsView>.SelectableItemsViewHandler(Microsoft.Maui.PropertyMapper mapper = null) -> void
~Microsoft.Maui.Controls.Handlers.Items.SelectableViewHolder.OnClick(Android.Views.View view) -> void
~Microsoft.Maui.Controls.Handlers.Items.SelectableViewHolder.SelectableViewHolder(Android.Views.View itemView, bool isSelectionEnabled = true) -> void
~Microsoft.Maui.Controls.Handlers.Items.SimpleItemTouchHelperCallback.SetAdapter(Microsoft.Maui.Controls.Handlers.Items.IItemTouchHelperAdapter adapter) -> void
~Microsoft.Maui.Controls.Handlers.Items.SnapManager.SnapManager(AndroidX.RecyclerView.Widget.RecyclerView recyclerView) -> void
~Microsoft.Maui.Controls.Handlers.Items.SpacingItemDecoration.SpacingItemDecoration(Android.Content.Context context, Microsoft.Maui.Controls.IItemsLayout itemsLayout) -> void
~Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewAdapter<TItemsView, TItemsViewSource>
~Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewAdapter<TItemsView, TItemsViewSource>.CreateHeaderFooterViewHolder(object content, Microsoft.Maui.Controls.DataTemplate template, Android.Content.Context context) -> AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder
~Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewAdapter<TItemsView, TItemsViewSource>.StructuredItemsViewAdapter(TItemsView itemsView, System.Func<Microsoft.Maui.Controls.View, Android.Content.Context, Microsoft.Maui.Controls.Handlers.Items.ItemContentView> createItemContentView = null) -> void
~Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewHandler<TItemsView>
~Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewHandler<TItemsView>.StructuredItemsViewHandler(Microsoft.Maui.PropertyMapper mapper = null) -> void
~Microsoft.Maui.Controls.Handlers.Items.TemplatedItemViewHolder.Bind(object itemBindingContext, Microsoft.Maui.Controls.ItemsView itemsView, System.Action<Microsoft.Maui.Graphics.Size> reportMeasure = null, Microsoft.Maui.Graphics.Size? size = null) -> void
~Microsoft.Maui.Controls.Handlers.Items.TemplatedItemViewHolder.Recycle(Microsoft.Maui.Controls.ItemsView itemsView) -> void
~Microsoft.Maui.Controls.Handlers.Items.TemplatedItemViewHolder.TemplatedItemViewHolder(Microsoft.Maui.Controls.Handlers.Items.ItemContentView itemContentView, Microsoft.Maui.Controls.DataTemplate template, bool isSelectionEnabled = true) -> void
~Microsoft.Maui.Controls.Handlers.Items.TemplatedItemViewHolder.View.get -> Microsoft.Maui.Controls.View
~Microsoft.Maui.Controls.Handlers.LineHandler.LineHandler(Microsoft.Maui.IPropertyMapper mapper) -> void
~Microsoft.Maui.Controls.Handlers.PathHandler.PathHandler(Microsoft.Maui.IPropertyMapper mapper) -> void
~Microsoft.Maui.Controls.Handlers.PolygonHandler.PolygonHandler(Microsoft.Maui.IPropertyMapper mapper) -> void
~Microsoft.Maui.Controls.Handlers.PolylineHandler.PolylineHandler(Microsoft.Maui.IPropertyMapper mapper) -> void
~Microsoft.Maui.Controls.Handlers.RectangleHandler.RectangleHandler(Microsoft.Maui.IPropertyMapper mapper) -> void
~Microsoft.Maui.Controls.Handlers.RoundRectangleHandler.RoundRectangleHandler(Microsoft.Maui.IPropertyMapper mapper) -> void
~Microsoft.Maui.Controls.Hosting.IEffectsBuilder.Add(System.Type TEffect, System.Type TPlatformEffect) -> Microsoft.Maui.Controls.Hosting.IEffectsBuilder
~Microsoft.Maui.Controls.Hosting.IEffectsBuilder.Add<TEffect, TPlatformEffect>() -> Microsoft.Maui.Controls.Hosting.IEffectsBuilder
~Microsoft.Maui.Controls.HtmlWebViewSource.BaseUrl.get -> string
~Microsoft.Maui.Controls.HtmlWebViewSource.BaseUrl.set -> void
~Microsoft.Maui.Controls.HtmlWebViewSource.Html.get -> string
~Microsoft.Maui.Controls.HtmlWebViewSource.Html.set -> void
~Microsoft.Maui.Controls.IAppearanceObserver.OnAppearanceChanged(Microsoft.Maui.Controls.ShellAppearance appearance) -> void
~Microsoft.Maui.Controls.IAppIndexingProvider.AppLinks.get -> Microsoft.Maui.Controls.IAppLinks
~Microsoft.Maui.Controls.IApplicationController.SetAppIndexingProvider(Microsoft.Maui.Controls.IAppIndexingProvider appIndexing) -> void
~Microsoft.Maui.Controls.IAppLinkEntry.AppLinkUri.get -> System.Uri
~Microsoft.Maui.Controls.IAppLinkEntry.AppLinkUri.set -> void
~Microsoft.Maui.Controls.IAppLinkEntry.Description.get -> string
~Microsoft.Maui.Controls.IAppLinkEntry.Description.set -> void
~Microsoft.Maui.Controls.IAppLinkEntry.KeyValues.get -> System.Collections.Generic.IDictionary<string, string>
~Microsoft.Maui.Controls.IAppLinkEntry.Thumbnail.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.IAppLinkEntry.Thumbnail.set -> void
~Microsoft.Maui.Controls.IAppLinkEntry.Title.get -> string
~Microsoft.Maui.Controls.IAppLinkEntry.Title.set -> void
~Microsoft.Maui.Controls.IAppLinks.DeregisterLink(Microsoft.Maui.Controls.IAppLinkEntry appLink) -> void
~Microsoft.Maui.Controls.IAppLinks.DeregisterLink(System.Uri appLinkUri) -> void
~Microsoft.Maui.Controls.IAppLinks.RegisterLink(Microsoft.Maui.Controls.IAppLinkEntry appLink) -> void
~Microsoft.Maui.Controls.IBindableLayout.Children.get -> System.Collections.IList
~Microsoft.Maui.Controls.IBorderElement.Background.get -> Microsoft.Maui.Controls.Brush
~Microsoft.Maui.Controls.IBorderElement.BackgroundColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.IBorderElement.BorderColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.IBorderElement.BorderColorDefaultValue.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.IBorderElement.OnBorderColorPropertyChanged(Microsoft.Maui.Graphics.Color oldValue, Microsoft.Maui.Graphics.Color newValue) -> void
~Microsoft.Maui.Controls.IConfigElement<T>
~Microsoft.Maui.Controls.IConfigElement<T>.Element.get -> T
~Microsoft.Maui.Controls.IEffectControlProvider.RegisterEffect(Microsoft.Maui.Controls.Effect effect) -> void
~Microsoft.Maui.Controls.IElementConfiguration<TElement>
~Microsoft.Maui.Controls.IElementConfiguration<TElement>.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, TElement>
~Microsoft.Maui.Controls.IElementController.Descendants() -> System.Collections.Generic.IEnumerable<Microsoft.Maui.Controls.Element>
~Microsoft.Maui.Controls.IElementController.EffectControlProvider.get -> Microsoft.Maui.Controls.IEffectControlProvider
~Microsoft.Maui.Controls.IElementController.EffectControlProvider.set -> void
~Microsoft.Maui.Controls.IElementController.EffectIsAttached(string name) -> bool
~Microsoft.Maui.Controls.IElementController.LogicalChildren.get -> System.Collections.Generic.IReadOnlyList<Microsoft.Maui.Controls.Element>
~Microsoft.Maui.Controls.IElementController.RealParent.get -> Microsoft.Maui.Controls.Element
~Microsoft.Maui.Controls.IElementController.SetValueFromRenderer(Microsoft.Maui.Controls.BindableProperty property, object value) -> void
~Microsoft.Maui.Controls.IElementController.SetValueFromRenderer(Microsoft.Maui.Controls.BindablePropertyKey propertyKey, object value) -> void
~Microsoft.Maui.Controls.IExtendedTypeConverter.ConvertFromInvariantString(string value, System.IServiceProvider serviceProvider) -> object
~Microsoft.Maui.Controls.IGestureRecognizers.GestureRecognizers.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.IGestureRecognizer>
~Microsoft.Maui.Controls.IImageElement.OnImageSourceSourceChanged(object sender, System.EventArgs e) -> void
~Microsoft.Maui.Controls.IImageElement.Source.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.IItemsView<T>
~Microsoft.Maui.Controls.IItemsView<T>.CreateDefault(object item) -> T
~Microsoft.Maui.Controls.IItemsView<T>.SetupContent(T content, int index) -> void
~Microsoft.Maui.Controls.IItemsView<T>.UnhookContent(T content) -> void
~Microsoft.Maui.Controls.IItemViewController.BindView(Microsoft.Maui.Controls.View view, object item) -> void
~Microsoft.Maui.Controls.IItemViewController.CreateView(object itemType) -> Microsoft.Maui.Controls.View
~Microsoft.Maui.Controls.IItemViewController.GetItem(int index) -> object
~Microsoft.Maui.Controls.IItemViewController.GetItemType(object item) -> object
~Microsoft.Maui.Controls.ILayoutController.Children.get -> System.Collections.Generic.IReadOnlyList<Microsoft.Maui.Controls.Element>
~Microsoft.Maui.Controls.ILayoutManagerFactory.CreateLayoutManager(Microsoft.Maui.Controls.Layout layout) -> Microsoft.Maui.Layouts.ILayoutManager
~Microsoft.Maui.Controls.IListProxy.ProxiedEnumerable.get -> System.Collections.IEnumerable
~Microsoft.Maui.Controls.IListProxy.TryGetValue(int index, out object value) -> bool
~Microsoft.Maui.Controls.IListViewController.CreateDefaultCell(object item) -> Microsoft.Maui.Controls.Cell
~Microsoft.Maui.Controls.IListViewController.FooterElement.get -> Microsoft.Maui.Controls.Element
~Microsoft.Maui.Controls.IListViewController.GetDisplayTextFromGroup(object cell) -> string
~Microsoft.Maui.Controls.IListViewController.HeaderElement.get -> Microsoft.Maui.Controls.Element
~Microsoft.Maui.Controls.IListViewController.NotifyRowTapped(int index, int inGroupIndex, Microsoft.Maui.Controls.Cell cell, bool isContextMenuRequested) -> void
~Microsoft.Maui.Controls.IListViewController.NotifyRowTapped(int index, int inGroupIndex, Microsoft.Maui.Controls.Cell cell) -> void
~Microsoft.Maui.Controls.IListViewController.NotifyRowTapped(int index, Microsoft.Maui.Controls.Cell cell, bool isContextMenuRequested) -> void
~Microsoft.Maui.Controls.IListViewController.NotifyRowTapped(int index, Microsoft.Maui.Controls.Cell cell) -> void
~Microsoft.Maui.Controls.IListViewController.SendCellAppearing(Microsoft.Maui.Controls.Cell cell) -> void
~Microsoft.Maui.Controls.IListViewController.SendCellDisappearing(Microsoft.Maui.Controls.Cell cell) -> void
~Microsoft.Maui.Controls.Image.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.Image>
~Microsoft.Maui.Controls.Image.Source.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.Image.Source.set -> void
~Microsoft.Maui.Controls.ImageButton.BorderColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.ImageButton.BorderColor.set -> void
~Microsoft.Maui.Controls.ImageButton.Command.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.ImageButton.Command.set -> void
~Microsoft.Maui.Controls.ImageButton.CommandParameter.get -> object
~Microsoft.Maui.Controls.ImageButton.CommandParameter.set -> void
~Microsoft.Maui.Controls.ImageButton.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.ImageButton>
~Microsoft.Maui.Controls.ImageButton.Source.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.ImageButton.Source.set -> void
~Microsoft.Maui.Controls.ImageCell.ImageSource.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.ImageCell.ImageSource.set -> void
~Microsoft.Maui.Controls.IMessagingCenter.Send<TSender, TArgs>(TSender sender, string message, TArgs args) -> void
~Microsoft.Maui.Controls.IMessagingCenter.Send<TSender>(TSender sender, string message) -> void
~Microsoft.Maui.Controls.IMessagingCenter.Subscribe<TSender, TArgs>(object subscriber, string message, System.Action<TSender, TArgs> callback, TSender source = null) -> void
~Microsoft.Maui.Controls.IMessagingCenter.Subscribe<TSender>(object subscriber, string message, System.Action<TSender> callback, TSender source = null) -> void
~Microsoft.Maui.Controls.IMessagingCenter.Unsubscribe<TSender, TArgs>(object subscriber, string message) -> void
~Microsoft.Maui.Controls.IMessagingCenter.Unsubscribe<TSender>(object subscriber, string message) -> void
~Microsoft.Maui.Controls.IMultiValueConverter.Convert(object[] values, System.Type targetType, object parameter, System.Globalization.CultureInfo culture) -> object
~Microsoft.Maui.Controls.IMultiValueConverter.ConvertBack(object value, System.Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture) -> object[]
~Microsoft.Maui.Controls.INavigation.InsertPageBefore(Microsoft.Maui.Controls.Page page, Microsoft.Maui.Controls.Page before) -> void
~Microsoft.Maui.Controls.INavigation.ModalStack.get -> System.Collections.Generic.IReadOnlyList<Microsoft.Maui.Controls.Page>
~Microsoft.Maui.Controls.INavigation.NavigationStack.get -> System.Collections.Generic.IReadOnlyList<Microsoft.Maui.Controls.Page>
~Microsoft.Maui.Controls.INavigation.PopAsync() -> System.Threading.Tasks.Task<Microsoft.Maui.Controls.Page>
~Microsoft.Maui.Controls.INavigation.PopAsync(bool animated) -> System.Threading.Tasks.Task<Microsoft.Maui.Controls.Page>
~Microsoft.Maui.Controls.INavigation.PopModalAsync() -> System.Threading.Tasks.Task<Microsoft.Maui.Controls.Page>
~Microsoft.Maui.Controls.INavigation.PopModalAsync(bool animated) -> System.Threading.Tasks.Task<Microsoft.Maui.Controls.Page>
~Microsoft.Maui.Controls.INavigation.PopToRootAsync() -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.INavigation.PopToRootAsync(bool animated) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.INavigation.PushAsync(Microsoft.Maui.Controls.Page page, bool animated) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.INavigation.PushAsync(Microsoft.Maui.Controls.Page page) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.INavigation.PushModalAsync(Microsoft.Maui.Controls.Page page, bool animated) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.INavigation.PushModalAsync(Microsoft.Maui.Controls.Page page) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.INavigation.RemovePage(Microsoft.Maui.Controls.Page page) -> void
~Microsoft.Maui.Controls.INavigationPageController.Pages.get -> System.Collections.Generic.IEnumerable<Microsoft.Maui.Controls.Page>
~Microsoft.Maui.Controls.INavigationPageController.Peek(int depth = 0) -> Microsoft.Maui.Controls.Page
~Microsoft.Maui.Controls.INavigationPageController.PopAsyncInner(bool animated, bool fast = false) -> System.Threading.Tasks.Task<Microsoft.Maui.Controls.Page>
~Microsoft.Maui.Controls.INavigationPageController.RemoveAsyncInner(Microsoft.Maui.Controls.Page page, bool animated, bool fast) -> System.Threading.Tasks.Task<Microsoft.Maui.Controls.Page>
~Microsoft.Maui.Controls.IndicatorView.IndicatorColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.IndicatorView.IndicatorColor.set -> void
~Microsoft.Maui.Controls.IndicatorView.IndicatorLayout.get -> Microsoft.Maui.Controls.IBindableLayout
~Microsoft.Maui.Controls.IndicatorView.IndicatorLayout.set -> void
~Microsoft.Maui.Controls.IndicatorView.IndicatorTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.IndicatorView.IndicatorTemplate.set -> void
~Microsoft.Maui.Controls.IndicatorView.ItemsSource.get -> System.Collections.IEnumerable
~Microsoft.Maui.Controls.IndicatorView.ItemsSource.set -> void
~Microsoft.Maui.Controls.IndicatorView.SelectedIndicatorColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.IndicatorView.SelectedIndicatorColor.set -> void
~Microsoft.Maui.Controls.InputView.FontFamily.get -> string
~Microsoft.Maui.Controls.InputView.FontFamily.set -> void
~Microsoft.Maui.Controls.InputView.Keyboard.get -> Microsoft.Maui.Keyboard
~Microsoft.Maui.Controls.InputView.Keyboard.set -> void
~Microsoft.Maui.Controls.InputView.Placeholder.get -> string
~Microsoft.Maui.Controls.InputView.Placeholder.set -> void
~Microsoft.Maui.Controls.InputView.PlaceholderColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.InputView.PlaceholderColor.set -> void
~Microsoft.Maui.Controls.InputView.Text.get -> string
~Microsoft.Maui.Controls.InputView.Text.set -> void
~Microsoft.Maui.Controls.InputView.TextColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.InputView.TextColor.set -> void
~Microsoft.Maui.Controls.InputView.UpdateFormsText(string original, Microsoft.Maui.TextTransform transform) -> string
~Microsoft.Maui.Controls.Internals.ActionSheetArguments.ActionSheetArguments(string title, string cancel, string destruction, System.Collections.Generic.IEnumerable<string> buttons) -> void
~Microsoft.Maui.Controls.Internals.ActionSheetArguments.Buttons.get -> System.Collections.Generic.IEnumerable<string>
~Microsoft.Maui.Controls.Internals.ActionSheetArguments.Cancel.get -> string
~Microsoft.Maui.Controls.Internals.ActionSheetArguments.Destruction.get -> string
~Microsoft.Maui.Controls.Internals.ActionSheetArguments.Result.get -> System.Threading.Tasks.TaskCompletionSource<string>
~Microsoft.Maui.Controls.Internals.ActionSheetArguments.SetResult(string result) -> void
~Microsoft.Maui.Controls.Internals.ActionSheetArguments.Title.get -> string
~Microsoft.Maui.Controls.Internals.AlertArguments.Accept.get -> string
~Microsoft.Maui.Controls.Internals.AlertArguments.AlertArguments(string title, string message, string accept, string cancel) -> void
~Microsoft.Maui.Controls.Internals.AlertArguments.Cancel.get -> string
~Microsoft.Maui.Controls.Internals.AlertArguments.Message.get -> string
~Microsoft.Maui.Controls.Internals.AlertArguments.Result.get -> System.Threading.Tasks.TaskCompletionSource<bool>
~Microsoft.Maui.Controls.Internals.AlertArguments.Title.get -> string
~Microsoft.Maui.Controls.Internals.AsyncValue<T>.AsyncValue(System.Threading.Tasks.Task<T> valueTask, T defaultValue = default(T)) -> void
~Microsoft.Maui.Controls.Internals.DynamicResource.DynamicResource(string key) -> void
~Microsoft.Maui.Controls.Internals.DynamicResource.Key.get -> string
~Microsoft.Maui.Controls.Internals.EvalRequested.EvalRequested(string script) -> void
~Microsoft.Maui.Controls.Internals.EvalRequested.Script.get -> string
~Microsoft.Maui.Controls.Internals.GIFBitmap.Bounds.get -> Microsoft.Maui.Controls.Internals.GIFBitmap.Rect
~Microsoft.Maui.Controls.Internals.GIFBitmap.ColorTable.get -> Microsoft.Maui.Controls.Internals.GIFColorTable
~Microsoft.Maui.Controls.Internals.GIFBitmap.Data.get -> int[]
~Microsoft.Maui.Controls.Internals.GIFBitmap.Data.set -> void
~Microsoft.Maui.Controls.Internals.GIFBitmapDecoder.Compose(Microsoft.Maui.Controls.Internals.GIFHeader header, Microsoft.Maui.Controls.Internals.GIFBitmap currentBitmap, Microsoft.Maui.Controls.Internals.GIFBitmap previousBitmap) -> void
~Microsoft.Maui.Controls.Internals.GIFBitmapDecoder.DecodeAsync(Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader stream, int width, int height) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.Internals.GIFColorTable.Data.get -> int[]
~Microsoft.Maui.Controls.Internals.GIFDecoderFormatException.GIFDecoderFormatException(string message, System.Exception innerException) -> void
~Microsoft.Maui.Controls.Internals.GIFDecoderFormatException.GIFDecoderFormatException(string message) -> void
~Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader.CurrentBlockBuffer.get -> byte[]
~Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader.GIFDecoderStreamReader(System.IO.Stream stream) -> void
~Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader.ReadAsync(byte[] buffer, int toRead) -> System.Threading.Tasks.Task<int>
~Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader.ReadBlockAsync() -> System.Threading.Tasks.Task<int>
~Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader.ReadString(int length) -> string
~Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader.SkipBlockAsync() -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.Internals.GIFHeader.GlobalColorTable.get -> Microsoft.Maui.Controls.Internals.GIFColorTable
~Microsoft.Maui.Controls.Internals.GIFHeader.TypeIdentifier.get -> string
~Microsoft.Maui.Controls.Internals.GIFHeader.Version.get -> string
~Microsoft.Maui.Controls.Internals.GIFImageParser.ParseAsync(System.IO.Stream stream, bool skipTypeIdentifier = false, bool ignoreImageData = false) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.Internals.IDataTemplateController.IdString.get -> string
~Microsoft.Maui.Controls.Internals.IDynamicResourceHandler.SetDynamicResource(Microsoft.Maui.Controls.BindableProperty property, string key) -> void
~Microsoft.Maui.Controls.Internals.IExpressionSearch.FindObjects<T>(System.Linq.Expressions.Expression expression) -> System.Collections.Generic.List<T>
~Microsoft.Maui.Controls.Internals.IFontElement.FontFamily.get -> string
~Microsoft.Maui.Controls.Internals.IFontElement.OnFontFamilyChanged(string oldValue, string newValue) -> void
~Microsoft.Maui.Controls.Internals.IFontNamedSizeService.GetNamedSize(Microsoft.Maui.Controls.NamedSize size, System.Type targetElementType, bool useOldSizes) -> double
~Microsoft.Maui.Controls.Internals.IGestureController.CompositeGestureRecognizers.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.IGestureRecognizer>
~Microsoft.Maui.Controls.Internals.IGestureController.GetChildElements(Microsoft.Maui.Graphics.Point point) -> System.Collections.Generic.IList<Microsoft.Maui.Controls.GestureElement>
~Microsoft.Maui.Controls.Internals.INameScope.FindByName(string name) -> object
~Microsoft.Maui.Controls.Internals.INameScope.RegisterName(string name, object scopedElement) -> void
~Microsoft.Maui.Controls.Internals.INameScope.UnregisterName(string name) -> void
~Microsoft.Maui.Controls.Internals.INavigationProxy.NavigationProxy.get -> Microsoft.Maui.Controls.Internals.NavigationProxy
~Microsoft.Maui.Controls.Internals.IPerformanceProvider.Start(string reference, string tag, string path, string member) -> void
~Microsoft.Maui.Controls.Internals.IPerformanceProvider.Stop(string reference, string tag, string path, string member) -> void
~Microsoft.Maui.Controls.Internals.IPlatformSizeService.GetPlatformSize(Microsoft.Maui.Controls.VisualElement view, double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
~Microsoft.Maui.Controls.Internals.IResourceDictionary.TryGetValue(string key, out object value) -> bool
~Microsoft.Maui.Controls.Internals.ISystemResourcesProvider.GetSystemResources() -> Microsoft.Maui.Controls.Internals.IResourceDictionary
~Microsoft.Maui.Controls.Internals.NavigationProxy.Inner.get -> Microsoft.Maui.Controls.INavigation
~Microsoft.Maui.Controls.Internals.NavigationProxy.Inner.set -> void
~Microsoft.Maui.Controls.Internals.NavigationProxy.InsertPageBefore(Microsoft.Maui.Controls.Page page, Microsoft.Maui.Controls.Page before) -> void
~Microsoft.Maui.Controls.Internals.NavigationProxy.ModalStack.get -> System.Collections.Generic.IReadOnlyList<Microsoft.Maui.Controls.Page>
~Microsoft.Maui.Controls.Internals.NavigationProxy.NavigationStack.get -> System.Collections.Generic.IReadOnlyList<Microsoft.Maui.Controls.Page>
~Microsoft.Maui.Controls.Internals.NavigationProxy.PopAsync() -> System.Threading.Tasks.Task<Microsoft.Maui.Controls.Page>
~Microsoft.Maui.Controls.Internals.NavigationProxy.PopAsync(bool animated) -> System.Threading.Tasks.Task<Microsoft.Maui.Controls.Page>
~Microsoft.Maui.Controls.Internals.NavigationProxy.PopModalAsync() -> System.Threading.Tasks.Task<Microsoft.Maui.Controls.Page>
~Microsoft.Maui.Controls.Internals.NavigationProxy.PopModalAsync(bool animated) -> System.Threading.Tasks.Task<Microsoft.Maui.Controls.Page>
~Microsoft.Maui.Controls.Internals.NavigationProxy.PopToRootAsync() -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.Internals.NavigationProxy.PopToRootAsync(bool animated) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.Internals.NavigationProxy.PushAsync(Microsoft.Maui.Controls.Page root, bool animated) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.Internals.NavigationProxy.PushAsync(Microsoft.Maui.Controls.Page root) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.Internals.NavigationProxy.PushModalAsync(Microsoft.Maui.Controls.Page modal, bool animated) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.Internals.NavigationProxy.PushModalAsync(Microsoft.Maui.Controls.Page modal) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.Internals.NavigationProxy.RemovePage(Microsoft.Maui.Controls.Page page) -> void
~Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs.BeforePage.get -> Microsoft.Maui.Controls.Page
~Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs.BeforePage.set -> void
~Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs.NavigationRequestedEventArgs(Microsoft.Maui.Controls.Page page, bool animated) -> void
~Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs.NavigationRequestedEventArgs(Microsoft.Maui.Controls.Page page, Microsoft.Maui.Controls.Page before, bool animated) -> void
~Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs.Task.get -> System.Threading.Tasks.Task<bool>
~Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs.Task.set -> void
~Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.NotifyCollectionChangedEventArgsEx(int count, System.Collections.Specialized.NotifyCollectionChangedAction action, object changedItem, int index, int oldIndex) -> void
~Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.NotifyCollectionChangedEventArgsEx(int count, System.Collections.Specialized.NotifyCollectionChangedAction action, object changedItem, int index) -> void
~Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.NotifyCollectionChangedEventArgsEx(int count, System.Collections.Specialized.NotifyCollectionChangedAction action, object changedItem) -> void
~Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.NotifyCollectionChangedEventArgsEx(int count, System.Collections.Specialized.NotifyCollectionChangedAction action, object newItem, object oldItem, int index) -> void
~Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.NotifyCollectionChangedEventArgsEx(int count, System.Collections.Specialized.NotifyCollectionChangedAction action, object newItem, object oldItem) -> void
~Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.NotifyCollectionChangedEventArgsEx(int count, System.Collections.Specialized.NotifyCollectionChangedAction action, System.Collections.IList changedItems, int index, int oldIndex) -> void
~Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.NotifyCollectionChangedEventArgsEx(int count, System.Collections.Specialized.NotifyCollectionChangedAction action, System.Collections.IList changedItems, int startingIndex) -> void
~Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.NotifyCollectionChangedEventArgsEx(int count, System.Collections.Specialized.NotifyCollectionChangedAction action, System.Collections.IList changedItems) -> void
~Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.NotifyCollectionChangedEventArgsEx(int count, System.Collections.Specialized.NotifyCollectionChangedAction action, System.Collections.IList newItems, System.Collections.IList oldItems, int startingIndex) -> void
~Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.NotifyCollectionChangedEventArgsEx(int count, System.Collections.Specialized.NotifyCollectionChangedAction action, System.Collections.IList newItems, System.Collections.IList oldItems) -> void
~Microsoft.Maui.Controls.Internals.Profile.Datum.Id -> string
~Microsoft.Maui.Controls.Internals.Profile.Datum.Name -> string
~Microsoft.Maui.Controls.Internals.ProfileDatum.Id -> string
~Microsoft.Maui.Controls.Internals.ProfileDatum.Name -> string
~Microsoft.Maui.Controls.Internals.ProfileDatum.Path -> string
~Microsoft.Maui.Controls.Internals.PromptArguments.Accept.get -> string
~Microsoft.Maui.Controls.Internals.PromptArguments.Cancel.get -> string
~Microsoft.Maui.Controls.Internals.PromptArguments.InitialValue.get -> string
~Microsoft.Maui.Controls.Internals.PromptArguments.Keyboard.get -> Microsoft.Maui.Keyboard
~Microsoft.Maui.Controls.Internals.PromptArguments.Message.get -> string
~Microsoft.Maui.Controls.Internals.PromptArguments.Placeholder.get -> string
~Microsoft.Maui.Controls.Internals.PromptArguments.PromptArguments(string title, string message, string accept = "OK", string cancel = "Cancel", string placeholder = null, int maxLength = -1, Microsoft.Maui.Keyboard keyboard = null, string initialValue = "") -> void
~Microsoft.Maui.Controls.Internals.PromptArguments.Result.get -> System.Threading.Tasks.TaskCompletionSource<string>
~Microsoft.Maui.Controls.Internals.PromptArguments.SetResult(string text) -> void
~Microsoft.Maui.Controls.Internals.PromptArguments.Title.get -> string
~Microsoft.Maui.Controls.Internals.Registrar<TRegistrable>
~Microsoft.Maui.Controls.Internals.Registrar<TRegistrable>.GetHandler<TOut>(System.Type type, params object[] args) -> TOut
~Microsoft.Maui.Controls.Internals.Registrar<TRegistrable>.GetHandler<TOut>(System.Type type) -> TOut
~Microsoft.Maui.Controls.Internals.Registrar<TRegistrable>.GetHandlerForObject<TOut>(object obj, params object[] args) -> TOut
~Microsoft.Maui.Controls.Internals.Registrar<TRegistrable>.GetHandlerForObject<TOut>(object obj) -> TOut
~Microsoft.Maui.Controls.Internals.Registrar<TRegistrable>.GetHandlerType(System.Type viewType, System.Type visualType) -> System.Type
~Microsoft.Maui.Controls.Internals.Registrar<TRegistrable>.GetHandlerType(System.Type viewType) -> System.Type
~Microsoft.Maui.Controls.Internals.Registrar<TRegistrable>.GetHandlerTypeForObject(object obj) -> System.Type
~Microsoft.Maui.Controls.Internals.Registrar<TRegistrable>.Register(System.Type tview, System.Type trender, System.Type[] supportedVisual) -> void
~Microsoft.Maui.Controls.Internals.Registrar<TRegistrable>.Register(System.Type tview, System.Type trender, System.Type[] supportedVisuals, short priority) -> void
~Microsoft.Maui.Controls.Internals.Registrar<TRegistrable>.Register(System.Type tview, System.Type trender) -> void
~Microsoft.Maui.Controls.Internals.ResourceLoader.ResourceLoadingQuery.AssemblyName.get -> System.Reflection.AssemblyName
~Microsoft.Maui.Controls.Internals.ResourceLoader.ResourceLoadingQuery.AssemblyName.set -> void
~Microsoft.Maui.Controls.Internals.ResourceLoader.ResourceLoadingQuery.Instance.get -> object
~Microsoft.Maui.Controls.Internals.ResourceLoader.ResourceLoadingQuery.Instance.set -> void
~Microsoft.Maui.Controls.Internals.ResourceLoader.ResourceLoadingQuery.ResourcePath.get -> string
~Microsoft.Maui.Controls.Internals.ResourceLoader.ResourceLoadingQuery.ResourcePath.set -> void
~Microsoft.Maui.Controls.Internals.ResourceLoader.ResourceLoadingResponse.ResourceContent.get -> string
~Microsoft.Maui.Controls.Internals.ResourceLoader.ResourceLoadingResponse.ResourceContent.set -> void
~Microsoft.Maui.Controls.Internals.ResourcesChangedEventArgs.ResourcesChangedEventArgs(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>> values) -> void
~Microsoft.Maui.Controls.Internals.ResourcesChangedEventArgs.Values.get -> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>
~Microsoft.Maui.Controls.Internals.TableModel.RowLongPressed(object item) -> void
~Microsoft.Maui.Controls.Internals.TableModel.RowSelected(object item) -> void
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.ActivateContent(int index, object item) -> TItem
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.CreateContent(int index, object item, bool insert = false) -> TItem
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.GetEnumerator() -> System.Collections.Generic.IEnumerator<TItem>
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.GetGlobalIndexForGroup(Microsoft.Maui.Controls.ITemplatedItemsList<TItem> group) -> int
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.GetGlobalIndexOfGroup(object item) -> int
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.GetGlobalIndexOfItem(object group, object item) -> int
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.GetGlobalIndexOfItem(object item) -> int
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.GetGroupAndIndexOfItem(object group, object item) -> System.Tuple<int, int>
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.GetGroupAndIndexOfItem(object item) -> System.Tuple<int, int>
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.GroupDisplayBinding.get -> Microsoft.Maui.Controls.BindingBase
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.GroupDisplayBinding.set -> void
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.GroupHeaderTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.GroupHeaderTemplate.set -> void
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.GroupHeaderTemplateProperty.get -> Microsoft.Maui.Controls.BindableProperty
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.GroupHeaderTemplateProperty.set -> void
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.GroupShortNameBinding.get -> Microsoft.Maui.Controls.BindingBase
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.GroupShortNameBinding.set -> void
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.HeaderContent.get -> TItem
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.IndexOf(TItem item) -> int
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.IsGroupingEnabledProperty.get -> Microsoft.Maui.Controls.BindableProperty
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.IsGroupingEnabledProperty.set -> void
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.ItemsSource.get -> System.Collections.IEnumerable
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.Name.get -> string
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.Name.set -> void
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.Parent.get -> Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.ProgressiveLoadingProperty.get -> Microsoft.Maui.Controls.BindableProperty
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.ProgressiveLoadingProperty.set -> void
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.SelectDataTemplate(object item) -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.ShortName.get -> string
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.ShortName.set -> void
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.ShortNames.get -> System.Collections.Generic.IReadOnlyList<string>
~Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.this[int index].get -> TItem
~Microsoft.Maui.Controls.Internals.TypedBinding<TSource, TProperty>.TypedBinding(System.Func<TSource, (TProperty value, bool success)> getter, System.Action<TSource, TProperty> setter, System.Tuple<System.Func<TSource, object>, string>[] handlers) -> void
~Microsoft.Maui.Controls.Internals.TypedBindingBase.Converter.get -> Microsoft.Maui.Controls.IValueConverter
~Microsoft.Maui.Controls.Internals.TypedBindingBase.Converter.set -> void
~Microsoft.Maui.Controls.Internals.TypedBindingBase.ConverterParameter.get -> object
~Microsoft.Maui.Controls.Internals.TypedBindingBase.ConverterParameter.set -> void
~Microsoft.Maui.Controls.Internals.TypedBindingBase.Source.get -> object
~Microsoft.Maui.Controls.Internals.TypedBindingBase.Source.set -> void
~Microsoft.Maui.Controls.InvalidNavigationException.InvalidNavigationException(string message, System.Exception innerException) -> void
~Microsoft.Maui.Controls.InvalidNavigationException.InvalidNavigationException(string message) -> void
~Microsoft.Maui.Controls.InvalidNavigationException.InvalidNavigationException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
~Microsoft.Maui.Controls.IPageContainer<T>
~Microsoft.Maui.Controls.IPageContainer<T>.CurrentPage.get -> T
~Microsoft.Maui.Controls.IPageController.InternalChildren.get -> System.Collections.ObjectModel.ObservableCollection<Microsoft.Maui.Controls.Element>
~Microsoft.Maui.Controls.IPanGestureController.SendPan(Microsoft.Maui.Controls.Element sender, double totalX, double totalY, int gestureId) -> void
~Microsoft.Maui.Controls.IPanGestureController.SendPanCanceled(Microsoft.Maui.Controls.Element sender, int gestureId) -> void
~Microsoft.Maui.Controls.IPanGestureController.SendPanCompleted(Microsoft.Maui.Controls.Element sender, int gestureId) -> void
~Microsoft.Maui.Controls.IPanGestureController.SendPanStarted(Microsoft.Maui.Controls.Element sender, int gestureId) -> void
~Microsoft.Maui.Controls.IPinchGestureController.SendPinch(Microsoft.Maui.Controls.Element sender, double scale, Microsoft.Maui.Graphics.Point currentScalePoint) -> void
~Microsoft.Maui.Controls.IPinchGestureController.SendPinchCanceled(Microsoft.Maui.Controls.Element sender) -> void
~Microsoft.Maui.Controls.IPinchGestureController.SendPinchEnded(Microsoft.Maui.Controls.Element sender) -> void
~Microsoft.Maui.Controls.IPinchGestureController.SendPinchStarted(Microsoft.Maui.Controls.Element sender, Microsoft.Maui.Graphics.Point intialScalePoint) -> void
~Microsoft.Maui.Controls.IPlatformElementConfiguration<TPlatform, TElement>
~Microsoft.Maui.Controls.IQueryAttributable.ApplyQueryAttributes(System.Collections.Generic.IDictionary<string, object> query) -> void
~Microsoft.Maui.Controls.IScrollViewController.GetScrollPositionForElement(Microsoft.Maui.Controls.VisualElement item, Microsoft.Maui.Controls.ScrollToPosition position) -> Microsoft.Maui.Graphics.Point
~Microsoft.Maui.Controls.ISearchHandlerController.ItemSelected(object obj) -> void
~Microsoft.Maui.Controls.ISearchHandlerController.ListProxy.get -> System.Collections.Generic.IReadOnlyList<object>
~Microsoft.Maui.Controls.IShellAppearanceElement.EffectiveTabBarBackgroundColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.IShellAppearanceElement.EffectiveTabBarDisabledColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.IShellAppearanceElement.EffectiveTabBarForegroundColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.IShellAppearanceElement.EffectiveTabBarTitleColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.IShellAppearanceElement.EffectiveTabBarUnselectedColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.IShellContentController.GetOrCreateContent() -> Microsoft.Maui.Controls.Page
~Microsoft.Maui.Controls.IShellContentController.Page.get -> Microsoft.Maui.Controls.Page
~Microsoft.Maui.Controls.IShellContentController.RecyclePage(Microsoft.Maui.Controls.Page page) -> void
~Microsoft.Maui.Controls.IShellController.AddAppearanceObserver(Microsoft.Maui.Controls.IAppearanceObserver observer, Microsoft.Maui.Controls.Element pivot) -> void
~Microsoft.Maui.Controls.IShellController.AddFlyoutBehaviorObserver(Microsoft.Maui.Controls.IFlyoutBehaviorObserver observer) -> void
~Microsoft.Maui.Controls.IShellController.AppearanceChanged(Microsoft.Maui.Controls.Element source, bool appearanceSet) -> void
~Microsoft.Maui.Controls.IShellController.FlyoutContent.get -> Microsoft.Maui.Controls.View
~Microsoft.Maui.Controls.IShellController.FlyoutFooter.get -> Microsoft.Maui.Controls.View
~Microsoft.Maui.Controls.IShellController.FlyoutHeader.get -> Microsoft.Maui.Controls.View
~Microsoft.Maui.Controls.IShellController.FlyoutIcon.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.IShellController.GenerateFlyoutGrouping() -> System.Collections.Generic.List<System.Collections.Generic.List<Microsoft.Maui.Controls.Element>>
~Microsoft.Maui.Controls.IShellController.GetFlyoutItemDataTemplate(Microsoft.Maui.Controls.BindableObject bo) -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.IShellController.GetItems() -> System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.Maui.Controls.ShellItem>
~Microsoft.Maui.Controls.IShellController.GetNavigationState(Microsoft.Maui.Controls.ShellItem shellItem, Microsoft.Maui.Controls.ShellSection shellSection, Microsoft.Maui.Controls.ShellContent shellContent, bool includeStack = true) -> Microsoft.Maui.Controls.ShellNavigationState
~Microsoft.Maui.Controls.IShellController.OnFlyoutItemSelected(Microsoft.Maui.Controls.Element element) -> void
~Microsoft.Maui.Controls.IShellController.OnFlyoutItemSelectedAsync(Microsoft.Maui.Controls.Element element) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.IShellController.ProposeNavigation(Microsoft.Maui.Controls.ShellNavigationSource source, Microsoft.Maui.Controls.ShellItem item, Microsoft.Maui.Controls.ShellSection shellSection, Microsoft.Maui.Controls.ShellContent shellContent, System.Collections.Generic.IReadOnlyList<Microsoft.Maui.Controls.Page> stack, bool canCancel) -> bool
~Microsoft.Maui.Controls.IShellController.RemoveAppearanceObserver(Microsoft.Maui.Controls.IAppearanceObserver observer) -> bool
~Microsoft.Maui.Controls.IShellController.RemoveFlyoutBehaviorObserver(Microsoft.Maui.Controls.IFlyoutBehaviorObserver observer) -> bool
~Microsoft.Maui.Controls.IShellItemController.GetItems() -> System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.Maui.Controls.ShellSection>
~Microsoft.Maui.Controls.IShellItemController.ProposeSection(Microsoft.Maui.Controls.ShellSection shellSection, bool setValue = true) -> bool
~Microsoft.Maui.Controls.IShellSectionController.AddContentInsetObserver(Microsoft.Maui.Controls.IShellContentInsetObserver observer) -> void
~Microsoft.Maui.Controls.IShellSectionController.AddDisplayedPageObserver(object observer, System.Action<Microsoft.Maui.Controls.Page> callback) -> void
~Microsoft.Maui.Controls.IShellSectionController.GetItems() -> System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.Maui.Controls.ShellContent>
~Microsoft.Maui.Controls.IShellSectionController.PresentedPage.get -> Microsoft.Maui.Controls.Page
~Microsoft.Maui.Controls.IShellSectionController.RemoveContentInsetObserver(Microsoft.Maui.Controls.IShellContentInsetObserver observer) -> bool
~Microsoft.Maui.Controls.IShellSectionController.RemoveDisplayedPageObserver(object observer) -> bool
~Microsoft.Maui.Controls.IShellSectionController.SendPopped(Microsoft.Maui.Controls.Page page) -> void
~Microsoft.Maui.Controls.IShellSectionController.SendPopping(Microsoft.Maui.Controls.Page page) -> void
~Microsoft.Maui.Controls.IShellSectionController.SendPopping(System.Threading.Tasks.Task poppingCompleted) -> void
~Microsoft.Maui.Controls.IShellSectionController.SendPoppingToRoot(System.Threading.Tasks.Task finishedPopping) -> void
~Microsoft.Maui.Controls.ISwipeGestureController.DetectSwipe(Microsoft.Maui.Controls.View sender, Microsoft.Maui.SwipeDirection direction) -> bool
~Microsoft.Maui.Controls.ISwipeGestureController.SendSwipe(Microsoft.Maui.Controls.Element sender, double totalX, double totalY) -> void
~Microsoft.Maui.Controls.ISwipeItem.Command.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.ISwipeItem.Command.set -> void
~Microsoft.Maui.Controls.ISwipeItem.CommandParameter.get -> object
~Microsoft.Maui.Controls.ISwipeItem.CommandParameter.set -> void
~Microsoft.Maui.Controls.ISwipeViewController.SendSwipeChanging(Microsoft.Maui.Controls.SwipeChangingEventArgs args) -> void
~Microsoft.Maui.Controls.ISwipeViewController.SendSwipeEnded(Microsoft.Maui.Controls.SwipeEndedEventArgs args) -> void
~Microsoft.Maui.Controls.ISwipeViewController.SendSwipeStarted(Microsoft.Maui.Controls.SwipeStartedEventArgs args) -> void
~Microsoft.Maui.Controls.ITableModel.GetCell(int section, int row) -> Microsoft.Maui.Controls.Cell
~Microsoft.Maui.Controls.ITableModel.GetHeaderCell(int section) -> Microsoft.Maui.Controls.Cell
~Microsoft.Maui.Controls.ITableModel.GetItem(int section, int row) -> object
~Microsoft.Maui.Controls.ITableModel.GetSectionIndexTitles() -> string[]
~Microsoft.Maui.Controls.ITableModel.GetSectionTextColor(int section) -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.ITableModel.GetSectionTitle(int section) -> string
~Microsoft.Maui.Controls.ITableModel.RowSelected(object item) -> void
~Microsoft.Maui.Controls.ITableViewController.Model.get -> Microsoft.Maui.Controls.ITableModel
~Microsoft.Maui.Controls.ITemplatedItemsList<TItem>
~Microsoft.Maui.Controls.ITemplatedItemsList<TItem>.ActivateContent(int index, object item = null) -> TItem
~Microsoft.Maui.Controls.ITemplatedItemsList<TItem>.BindingContext.get -> object
~Microsoft.Maui.Controls.ITemplatedItemsList<TItem>.GetGlobalIndexForGroup(Microsoft.Maui.Controls.ITemplatedItemsList<TItem> group) -> int
~Microsoft.Maui.Controls.ITemplatedItemsList<TItem>.GetGlobalIndexOfItem(object item) -> int
~Microsoft.Maui.Controls.ITemplatedItemsList<TItem>.GetGroup(int index) -> Microsoft.Maui.Controls.ITemplatedItemsList<TItem>
~Microsoft.Maui.Controls.ITemplatedItemsList<TItem>.GetGroupAndIndexOfItem(object group, object item) -> System.Tuple<int, int>
~Microsoft.Maui.Controls.ITemplatedItemsList<TItem>.GetGroupAndIndexOfItem(object item) -> System.Tuple<int, int>
~Microsoft.Maui.Controls.ITemplatedItemsList<TItem>.HeaderContent.get -> TItem
~Microsoft.Maui.Controls.ITemplatedItemsList<TItem>.IndexOf(TItem item) -> int
~Microsoft.Maui.Controls.ITemplatedItemsList<TItem>.ItemsSource.get -> System.Collections.IEnumerable
~Microsoft.Maui.Controls.ITemplatedItemsList<TItem>.ListProxy.get -> Microsoft.Maui.Controls.IListProxy
~Microsoft.Maui.Controls.ITemplatedItemsList<TItem>.Name.get -> string
~Microsoft.Maui.Controls.ITemplatedItemsList<TItem>.Name.set -> void
~Microsoft.Maui.Controls.ITemplatedItemsList<TItem>.SelectDataTemplate(object item) -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.ITemplatedItemsList<TItem>.ShortNames.get -> System.Collections.Generic.IReadOnlyList<string>
~Microsoft.Maui.Controls.ITemplatedItemsList<TItem>.UpdateContent(TItem content, int index) -> TItem
~Microsoft.Maui.Controls.ITemplatedItemsList<TItem>.UpdateHeader(TItem content, int groupIndex) -> TItem
~Microsoft.Maui.Controls.ITemplatedItemsListScrollToRequestedEventArgs.Group.get -> object
~Microsoft.Maui.Controls.ITemplatedItemsListScrollToRequestedEventArgs.Item.get -> object
~Microsoft.Maui.Controls.ITemplatedItemsView<TItem>
~Microsoft.Maui.Controls.ITemplatedItemsView<TItem>.ListProxy.get -> Microsoft.Maui.Controls.IListProxy
~Microsoft.Maui.Controls.ITemplatedItemsView<TItem>.TemplatedItems.get -> Microsoft.Maui.Controls.ITemplatedItemsList<TItem>
~Microsoft.Maui.Controls.ItemsView.EmptyView.get -> object
~Microsoft.Maui.Controls.ItemsView.EmptyView.set -> void
~Microsoft.Maui.Controls.ItemsView.EmptyViewTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.ItemsView.EmptyViewTemplate.set -> void
~Microsoft.Maui.Controls.ItemsView.InternalItemsLayout.get -> Microsoft.Maui.Controls.IItemsLayout
~Microsoft.Maui.Controls.ItemsView.InternalItemsLayout.set -> void
~Microsoft.Maui.Controls.ItemsView.ItemsSource.get -> System.Collections.IEnumerable
~Microsoft.Maui.Controls.ItemsView.ItemsSource.set -> void
~Microsoft.Maui.Controls.ItemsView.ItemTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.ItemsView.ItemTemplate.set -> void
~Microsoft.Maui.Controls.ItemsView.RemainingItemsThresholdReachedCommand.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.ItemsView.RemainingItemsThresholdReachedCommand.set -> void
~Microsoft.Maui.Controls.ItemsView.RemainingItemsThresholdReachedCommandParameter.get -> object
~Microsoft.Maui.Controls.ItemsView.RemainingItemsThresholdReachedCommandParameter.set -> void
~Microsoft.Maui.Controls.ItemsView.ScrollTo(object item, object group = null, Microsoft.Maui.Controls.ScrollToPosition position = Microsoft.Maui.Controls.ScrollToPosition.MakeVisible, bool animate = true) -> void
~Microsoft.Maui.Controls.ItemsView.SendScrolled(Microsoft.Maui.Controls.ItemsViewScrolledEventArgs e) -> void
~Microsoft.Maui.Controls.ItemsView<TVisual>
~Microsoft.Maui.Controls.ItemsView<TVisual>.ItemsSource.get -> System.Collections.IEnumerable
~Microsoft.Maui.Controls.ItemsView<TVisual>.ItemsSource.set -> void
~Microsoft.Maui.Controls.ItemsView<TVisual>.ItemTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.ItemsView<TVisual>.ItemTemplate.set -> void
~Microsoft.Maui.Controls.ItemsView<TVisual>.TemplatedItems.get -> Microsoft.Maui.Controls.Internals.TemplatedItemsList<Microsoft.Maui.Controls.ItemsView<TVisual>, TVisual>
~Microsoft.Maui.Controls.ItemTappedEventArgs.Group.get -> object
~Microsoft.Maui.Controls.ItemTappedEventArgs.Item.get -> object
~Microsoft.Maui.Controls.ItemTappedEventArgs.ItemTappedEventArgs(object group, object item, int itemIndex) -> void
~Microsoft.Maui.Controls.ItemVisibilityEventArgs.Item.get -> object
~Microsoft.Maui.Controls.ItemVisibilityEventArgs.ItemVisibilityEventArgs(object item, int itemIndex) -> void
~Microsoft.Maui.Controls.IValueConverter.Convert(object value, System.Type targetType, object parameter, System.Globalization.CultureInfo culture) -> object
~Microsoft.Maui.Controls.IValueConverter.ConvertBack(object value, System.Type targetType, object parameter, System.Globalization.CultureInfo culture) -> object
~Microsoft.Maui.Controls.IViewContainer<T>
~Microsoft.Maui.Controls.IViewContainer<T>.Children.get -> System.Collections.Generic.IList<T>
~Microsoft.Maui.Controls.IVisualElementController.NavigationProxy.get -> Microsoft.Maui.Controls.Internals.NavigationProxy
~Microsoft.Maui.Controls.IWebViewController.SendNavigated(Microsoft.Maui.Controls.WebNavigatedEventArgs args) -> void
~Microsoft.Maui.Controls.IWebViewController.SendNavigating(Microsoft.Maui.Controls.WebNavigatingEventArgs args) -> void
~Microsoft.Maui.Controls.Label.FontFamily.get -> string
~Microsoft.Maui.Controls.Label.FontFamily.set -> void
~Microsoft.Maui.Controls.Label.FormattedText.get -> Microsoft.Maui.Controls.FormattedString
~Microsoft.Maui.Controls.Label.FormattedText.set -> void
~Microsoft.Maui.Controls.Label.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.Label>
~Microsoft.Maui.Controls.Label.Text.get -> string
~Microsoft.Maui.Controls.Label.Text.set -> void
~Microsoft.Maui.Controls.Label.TextColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.Label.TextColor.set -> void
~Microsoft.Maui.Controls.Layout._layoutManager -> Microsoft.Maui.Layouts.ILayoutManager
~Microsoft.Maui.Controls.Layout.Add(Microsoft.Maui.IView child) -> void
~Microsoft.Maui.Controls.Layout.Children.get -> System.Collections.Generic.IList<Microsoft.Maui.IView>
~Microsoft.Maui.Controls.Layout.Contains(Microsoft.Maui.IView item) -> bool
~Microsoft.Maui.Controls.Layout.CopyTo(Microsoft.Maui.IView[] array, int arrayIndex) -> void
~Microsoft.Maui.Controls.Layout.GetEnumerator() -> System.Collections.Generic.IEnumerator<Microsoft.Maui.IView>
~Microsoft.Maui.Controls.Layout.IndexOf(Microsoft.Maui.IView item) -> int
~Microsoft.Maui.Controls.Layout.Insert(int index, Microsoft.Maui.IView child) -> void
~Microsoft.Maui.Controls.Layout.Remove(Microsoft.Maui.IView child) -> bool
~Microsoft.Maui.Controls.Layout.this[int index].get -> Microsoft.Maui.IView
~Microsoft.Maui.Controls.Layout.this[int index].set -> void
~Microsoft.Maui.Controls.LinearGradientBrush.LinearGradientBrush(Microsoft.Maui.Controls.GradientStopCollection gradientStops, Microsoft.Maui.Graphics.Point startPoint, Microsoft.Maui.Graphics.Point endPoint) -> void
~Microsoft.Maui.Controls.LinearGradientBrush.LinearGradientBrush(Microsoft.Maui.Controls.GradientStopCollection gradientStops) -> void
~Microsoft.Maui.Controls.ListProxyChangedEventArgs.ListProxyChangedEventArgs(System.Collections.Generic.IReadOnlyCollection<object> oldList, System.Collections.Generic.IReadOnlyCollection<object> newList) -> void
~Microsoft.Maui.Controls.ListProxyChangedEventArgs.NewList.get -> System.Collections.Generic.IReadOnlyCollection<object>
~Microsoft.Maui.Controls.ListProxyChangedEventArgs.OldList.get -> System.Collections.Generic.IReadOnlyCollection<object>
~Microsoft.Maui.Controls.ListView.CreateDefaultCell(object item) -> Microsoft.Maui.Controls.Cell
~Microsoft.Maui.Controls.ListView.Footer.get -> object
~Microsoft.Maui.Controls.ListView.Footer.set -> void
~Microsoft.Maui.Controls.ListView.FooterElement.get -> Microsoft.Maui.Controls.Element
~Microsoft.Maui.Controls.ListView.FooterTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.ListView.FooterTemplate.set -> void
~Microsoft.Maui.Controls.ListView.GetDisplayTextFromGroup(object cell) -> string
~Microsoft.Maui.Controls.ListView.GroupDisplayBinding.get -> Microsoft.Maui.Controls.BindingBase
~Microsoft.Maui.Controls.ListView.GroupDisplayBinding.set -> void
~Microsoft.Maui.Controls.ListView.GroupHeaderTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.ListView.GroupHeaderTemplate.set -> void
~Microsoft.Maui.Controls.ListView.GroupShortNameBinding.get -> Microsoft.Maui.Controls.BindingBase
~Microsoft.Maui.Controls.ListView.GroupShortNameBinding.set -> void
~Microsoft.Maui.Controls.ListView.Header.get -> object
~Microsoft.Maui.Controls.ListView.Header.set -> void
~Microsoft.Maui.Controls.ListView.HeaderElement.get -> Microsoft.Maui.Controls.Element
~Microsoft.Maui.Controls.ListView.HeaderTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.ListView.HeaderTemplate.set -> void
~Microsoft.Maui.Controls.ListView.NotifyRowTapped(int groupIndex, int inGroupIndex, Microsoft.Maui.Controls.Cell cell = null) -> void
~Microsoft.Maui.Controls.ListView.NotifyRowTapped(int groupIndex, int inGroupIndex, Microsoft.Maui.Controls.Cell cell, bool isContextMenuRequested) -> void
~Microsoft.Maui.Controls.ListView.NotifyRowTapped(int index, Microsoft.Maui.Controls.Cell cell = null) -> void
~Microsoft.Maui.Controls.ListView.NotifyRowTapped(int index, Microsoft.Maui.Controls.Cell cell, bool isContextmenuRequested) -> void
~Microsoft.Maui.Controls.ListView.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.ListView>
~Microsoft.Maui.Controls.ListView.RefreshCommand.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.ListView.RefreshCommand.set -> void
~Microsoft.Maui.Controls.ListView.RefreshControlColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.ListView.RefreshControlColor.set -> void
~Microsoft.Maui.Controls.ListView.ScrollTo(object item, Microsoft.Maui.Controls.ScrollToPosition position, bool animated) -> void
~Microsoft.Maui.Controls.ListView.ScrollTo(object item, object group, Microsoft.Maui.Controls.ScrollToPosition position, bool animated) -> void
~Microsoft.Maui.Controls.ListView.SelectedItem.get -> object
~Microsoft.Maui.Controls.ListView.SelectedItem.set -> void
~Microsoft.Maui.Controls.ListView.SendCellAppearing(Microsoft.Maui.Controls.Cell cell) -> void
~Microsoft.Maui.Controls.ListView.SendCellDisappearing(Microsoft.Maui.Controls.Cell cell) -> void
~Microsoft.Maui.Controls.ListView.SendScrolled(Microsoft.Maui.Controls.ScrolledEventArgs args) -> void
~Microsoft.Maui.Controls.ListView.SeparatorColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.ListView.SeparatorColor.set -> void
~Microsoft.Maui.Controls.MarshalingObservableCollection.MarshalingObservableCollection(System.Collections.IList list) -> void
~Microsoft.Maui.Controls.MenuBar.Add(Microsoft.Maui.IMenuBarItem item) -> void
~Microsoft.Maui.Controls.MenuBar.Contains(Microsoft.Maui.IMenuBarItem item) -> bool
~Microsoft.Maui.Controls.MenuBar.CopyTo(Microsoft.Maui.IMenuBarItem[] array, int arrayIndex) -> void
~Microsoft.Maui.Controls.MenuBar.GetEnumerator() -> System.Collections.Generic.IEnumerator<Microsoft.Maui.IMenuBarItem>
~Microsoft.Maui.Controls.MenuBar.IndexOf(Microsoft.Maui.IMenuBarItem item) -> int
~Microsoft.Maui.Controls.MenuBar.Insert(int index, Microsoft.Maui.IMenuBarItem item) -> void
~Microsoft.Maui.Controls.MenuBar.Remove(Microsoft.Maui.IMenuBarItem item) -> bool
~Microsoft.Maui.Controls.MenuBar.this[int index].get -> Microsoft.Maui.IMenuBarItem
~Microsoft.Maui.Controls.MenuBar.this[int index].set -> void
~Microsoft.Maui.Controls.MenuBarItem.Add(Microsoft.Maui.IMenuElement item) -> void
~Microsoft.Maui.Controls.MenuBarItem.Contains(Microsoft.Maui.IMenuElement item) -> bool
~Microsoft.Maui.Controls.MenuBarItem.CopyTo(Microsoft.Maui.IMenuElement[] array, int arrayIndex) -> void
~Microsoft.Maui.Controls.MenuBarItem.GetEnumerator() -> System.Collections.Generic.IEnumerator<Microsoft.Maui.IMenuElement>
~Microsoft.Maui.Controls.MenuBarItem.IndexOf(Microsoft.Maui.IMenuElement item) -> int
~Microsoft.Maui.Controls.MenuBarItem.Insert(int index, Microsoft.Maui.IMenuElement item) -> void
~Microsoft.Maui.Controls.MenuBarItem.Remove(Microsoft.Maui.IMenuElement item) -> bool
~Microsoft.Maui.Controls.MenuBarItem.Text.get -> string
~Microsoft.Maui.Controls.MenuBarItem.Text.set -> void
~Microsoft.Maui.Controls.MenuBarItem.this[int index].get -> Microsoft.Maui.IMenuElement
~Microsoft.Maui.Controls.MenuBarItem.this[int index].set -> void
~Microsoft.Maui.Controls.MenuFlyout.Add(Microsoft.Maui.IMenuElement item) -> void
~Microsoft.Maui.Controls.MenuFlyout.Contains(Microsoft.Maui.IMenuElement item) -> bool
~Microsoft.Maui.Controls.MenuFlyout.CopyTo(Microsoft.Maui.IMenuElement[] array, int arrayIndex) -> void
~Microsoft.Maui.Controls.MenuFlyout.GetEnumerator() -> System.Collections.Generic.IEnumerator<Microsoft.Maui.IMenuElement>
~Microsoft.Maui.Controls.MenuFlyout.IndexOf(Microsoft.Maui.IMenuElement item) -> int
~Microsoft.Maui.Controls.MenuFlyout.Insert(int index, Microsoft.Maui.IMenuElement item) -> void
~Microsoft.Maui.Controls.MenuFlyout.Remove(Microsoft.Maui.IMenuElement item) -> bool
~Microsoft.Maui.Controls.MenuFlyout.this[int index].get -> Microsoft.Maui.IMenuElement
~Microsoft.Maui.Controls.MenuFlyout.this[int index].set -> void
~Microsoft.Maui.Controls.MenuFlyoutSubItem.Add(Microsoft.Maui.IMenuElement item) -> void
~Microsoft.Maui.Controls.MenuFlyoutSubItem.Contains(Microsoft.Maui.IMenuElement item) -> bool
~Microsoft.Maui.Controls.MenuFlyoutSubItem.CopyTo(Microsoft.Maui.IMenuElement[] array, int arrayIndex) -> void
~Microsoft.Maui.Controls.MenuFlyoutSubItem.GetEnumerator() -> System.Collections.Generic.IEnumerator<Microsoft.Maui.IMenuElement>
~Microsoft.Maui.Controls.MenuFlyoutSubItem.IndexOf(Microsoft.Maui.IMenuElement item) -> int
~Microsoft.Maui.Controls.MenuFlyoutSubItem.Insert(int index, Microsoft.Maui.IMenuElement item) -> void
~Microsoft.Maui.Controls.MenuFlyoutSubItem.Remove(Microsoft.Maui.IMenuElement item) -> bool
~Microsoft.Maui.Controls.MenuFlyoutSubItem.this[int index].get -> Microsoft.Maui.IMenuElement
~Microsoft.Maui.Controls.MenuFlyoutSubItem.this[int index].set -> void
~Microsoft.Maui.Controls.MenuItem.class.get -> System.Collections.Generic.IList<string>
~Microsoft.Maui.Controls.MenuItem.class.set -> void
~Microsoft.Maui.Controls.MenuItem.Command.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.MenuItem.Command.set -> void
~Microsoft.Maui.Controls.MenuItem.CommandParameter.get -> object
~Microsoft.Maui.Controls.MenuItem.CommandParameter.set -> void
~Microsoft.Maui.Controls.MenuItem.IconImageSource.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.MenuItem.IconImageSource.set -> void
~Microsoft.Maui.Controls.MenuItem.StyleClass.get -> System.Collections.Generic.IList<string>
~Microsoft.Maui.Controls.MenuItem.StyleClass.set -> void
~Microsoft.Maui.Controls.MenuItem.Text.get -> string
~Microsoft.Maui.Controls.MenuItem.Text.set -> void
~Microsoft.Maui.Controls.MenuItemCollection.Add(Microsoft.Maui.Controls.MenuItem item) -> void
~Microsoft.Maui.Controls.MenuItemCollection.Contains(Microsoft.Maui.Controls.MenuItem item) -> bool
~Microsoft.Maui.Controls.MenuItemCollection.CopyTo(Microsoft.Maui.Controls.MenuItem[] array, int arrayIndex) -> void
~Microsoft.Maui.Controls.MenuItemCollection.GetEnumerator() -> System.Collections.Generic.IEnumerator<Microsoft.Maui.Controls.MenuItem>
~Microsoft.Maui.Controls.MenuItemCollection.IndexOf(Microsoft.Maui.Controls.MenuItem item) -> int
~Microsoft.Maui.Controls.MenuItemCollection.Insert(int index, Microsoft.Maui.Controls.MenuItem item) -> void
~Microsoft.Maui.Controls.MenuItemCollection.Remove(Microsoft.Maui.Controls.MenuItem item) -> bool
~Microsoft.Maui.Controls.MenuItemCollection.this[int index].get -> Microsoft.Maui.Controls.MenuItem
~Microsoft.Maui.Controls.MenuItemCollection.this[int index].set -> void
~Microsoft.Maui.Controls.ModalEventArgs.Modal.get -> Microsoft.Maui.Controls.Page
~Microsoft.Maui.Controls.ModalEventArgs.ModalEventArgs(Microsoft.Maui.Controls.Page modal) -> void
~Microsoft.Maui.Controls.ModalPoppedEventArgs.ModalPoppedEventArgs(Microsoft.Maui.Controls.Page modal) -> void
~Microsoft.Maui.Controls.ModalPoppingEventArgs.ModalPoppingEventArgs(Microsoft.Maui.Controls.Page modal) -> void
~Microsoft.Maui.Controls.ModalPushedEventArgs.ModalPushedEventArgs(Microsoft.Maui.Controls.Page modal) -> void
~Microsoft.Maui.Controls.ModalPushingEventArgs.ModalPushingEventArgs(Microsoft.Maui.Controls.Page modal) -> void
~Microsoft.Maui.Controls.MultiBinding.Bindings.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.BindingBase>
~Microsoft.Maui.Controls.MultiBinding.Bindings.set -> void
~Microsoft.Maui.Controls.MultiBinding.Converter.get -> Microsoft.Maui.Controls.IMultiValueConverter
~Microsoft.Maui.Controls.MultiBinding.Converter.set -> void
~Microsoft.Maui.Controls.MultiBinding.ConverterParameter.get -> object
~Microsoft.Maui.Controls.MultiBinding.ConverterParameter.set -> void
~Microsoft.Maui.Controls.MultiPage<T>
~Microsoft.Maui.Controls.MultiPage<T>.Children.get -> System.Collections.Generic.IList<T>
~Microsoft.Maui.Controls.MultiPage<T>.CurrentPage.get -> T
~Microsoft.Maui.Controls.MultiPage<T>.CurrentPage.set -> void
~Microsoft.Maui.Controls.MultiPage<T>.GetPageByIndex(int index) -> T
~Microsoft.Maui.Controls.MultiPage<T>.ItemsSource.get -> System.Collections.IEnumerable
~Microsoft.Maui.Controls.MultiPage<T>.ItemsSource.set -> void
~Microsoft.Maui.Controls.MultiPage<T>.ItemTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.MultiPage<T>.ItemTemplate.set -> void
~Microsoft.Maui.Controls.MultiPage<T>.SelectedItem.get -> object
~Microsoft.Maui.Controls.MultiPage<T>.SelectedItem.set -> void
~Microsoft.Maui.Controls.MultiTrigger.Conditions.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.Condition>
~Microsoft.Maui.Controls.MultiTrigger.MultiTrigger(System.Type targetType) -> void
~Microsoft.Maui.Controls.MultiTrigger.Setters.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.Setter>
~Microsoft.Maui.Controls.NavigableElement.class.get -> System.Collections.Generic.IList<string>
~Microsoft.Maui.Controls.NavigableElement.class.set -> void
~Microsoft.Maui.Controls.NavigableElement.Navigation.get -> Microsoft.Maui.Controls.INavigation
~Microsoft.Maui.Controls.NavigableElement.NavigationProxy.get -> Microsoft.Maui.Controls.Internals.NavigationProxy
~Microsoft.Maui.Controls.NavigableElement.Style.get -> Microsoft.Maui.Controls.Style
~Microsoft.Maui.Controls.NavigableElement.Style.set -> void
~Microsoft.Maui.Controls.NavigableElement.StyleClass.get -> System.Collections.Generic.IList<string>
~Microsoft.Maui.Controls.NavigableElement.StyleClass.set -> void
~Microsoft.Maui.Controls.NavigationEventArgs.NavigationEventArgs(Microsoft.Maui.Controls.Page page) -> void
~Microsoft.Maui.Controls.NavigationEventArgs.Page.get -> Microsoft.Maui.Controls.Page
~Microsoft.Maui.Controls.NavigationPage.BarBackground.get -> Microsoft.Maui.Controls.Brush
~Microsoft.Maui.Controls.NavigationPage.BarBackground.set -> void
~Microsoft.Maui.Controls.NavigationPage.BarBackgroundColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.NavigationPage.BarBackgroundColor.set -> void
~Microsoft.Maui.Controls.NavigationPage.BarTextColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.NavigationPage.BarTextColor.set -> void
~Microsoft.Maui.Controls.NavigationPage.CurrentPage.get -> Microsoft.Maui.Controls.Page
~Microsoft.Maui.Controls.NavigationPage.NavigationPage(Microsoft.Maui.Controls.Page root) -> void
~Microsoft.Maui.Controls.NavigationPage.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.NavigationPage>
~Microsoft.Maui.Controls.NavigationPage.Peek(int depth) -> Microsoft.Maui.Controls.Page
~Microsoft.Maui.Controls.NavigationPage.PopAsync() -> System.Threading.Tasks.Task<Microsoft.Maui.Controls.Page>
~Microsoft.Maui.Controls.NavigationPage.PopAsync(bool animated) -> System.Threading.Tasks.Task<Microsoft.Maui.Controls.Page>
~Microsoft.Maui.Controls.NavigationPage.PopToRootAsync() -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.NavigationPage.PopToRootAsync(bool animated) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.NavigationPage.PushAsync(Microsoft.Maui.Controls.Page page, bool animated) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.NavigationPage.PushAsync(Microsoft.Maui.Controls.Page page) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.NavigationPage.RootPage.get -> Microsoft.Maui.Controls.Page
~Microsoft.Maui.Controls.On.Platform.get -> System.Collections.Generic.IList<string>
~Microsoft.Maui.Controls.On.Platform.set -> void
~Microsoft.Maui.Controls.On.Value.get -> object
~Microsoft.Maui.Controls.On.Value.set -> void
~Microsoft.Maui.Controls.OnPlatform<T>.Platforms.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.On>
~Microsoft.Maui.Controls.Page.BackgroundImageSource.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.Page.BackgroundImageSource.set -> void
~Microsoft.Maui.Controls.Page.DisplayActionSheet(string title, string cancel, string destruction, Microsoft.Maui.FlowDirection flowDirection, params string[] buttons) -> System.Threading.Tasks.Task<string>
~Microsoft.Maui.Controls.Page.DisplayActionSheet(string title, string cancel, string destruction, params string[] buttons) -> System.Threading.Tasks.Task<string>
~Microsoft.Maui.Controls.Page.DisplayAlert(string title, string message, string accept, string cancel, Microsoft.Maui.FlowDirection flowDirection) -> System.Threading.Tasks.Task<bool>
~Microsoft.Maui.Controls.Page.DisplayAlert(string title, string message, string accept, string cancel) -> System.Threading.Tasks.Task<bool>
~Microsoft.Maui.Controls.Page.DisplayAlert(string title, string message, string cancel, Microsoft.Maui.FlowDirection flowDirection) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.Page.DisplayAlert(string title, string message, string cancel) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.Page.DisplayPromptAsync(string title, string message, string accept = "OK", string cancel = "Cancel", string placeholder = null, int maxLength = -1, Microsoft.Maui.Keyboard keyboard = null, string initialValue = "") -> System.Threading.Tasks.Task<string>
~Microsoft.Maui.Controls.Page.IconImageSource.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.Page.IconImageSource.set -> void
~Microsoft.Maui.Controls.Page.InternalChildren.get -> System.Collections.ObjectModel.ObservableCollection<Microsoft.Maui.Controls.Element>
~Microsoft.Maui.Controls.Page.MenuBarItems.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.MenuBarItem>
~Microsoft.Maui.Controls.Page.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.Page>
~Microsoft.Maui.Controls.Page.Title.get -> string
~Microsoft.Maui.Controls.Page.Title.set -> void
~Microsoft.Maui.Controls.Page.ToolbarItems.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.ToolbarItem>
~Microsoft.Maui.Controls.ParentChangingEventArgs.NewParent.get -> Microsoft.Maui.Controls.Element
~Microsoft.Maui.Controls.ParentChangingEventArgs.OldParent.get -> Microsoft.Maui.Controls.Element
~Microsoft.Maui.Controls.ParentChangingEventArgs.ParentChangingEventArgs(Microsoft.Maui.Controls.Element oldParent, Microsoft.Maui.Controls.Element newParent) -> void
~Microsoft.Maui.Controls.Picker.FontFamily.get -> string
~Microsoft.Maui.Controls.Picker.FontFamily.set -> void
~Microsoft.Maui.Controls.Picker.ItemDisplayBinding.get -> Microsoft.Maui.Controls.BindingBase
~Microsoft.Maui.Controls.Picker.ItemDisplayBinding.set -> void
~Microsoft.Maui.Controls.Picker.Items.get -> System.Collections.Generic.IList<string>
~Microsoft.Maui.Controls.Picker.ItemsSource.get -> System.Collections.IList
~Microsoft.Maui.Controls.Picker.ItemsSource.set -> void
~Microsoft.Maui.Controls.Picker.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.Picker>
~Microsoft.Maui.Controls.Picker.SelectedItem.get -> object
~Microsoft.Maui.Controls.Picker.SelectedItem.set -> void
~Microsoft.Maui.Controls.Picker.TextColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.Picker.TextColor.set -> void
~Microsoft.Maui.Controls.Picker.Title.get -> string
~Microsoft.Maui.Controls.Picker.Title.set -> void
~Microsoft.Maui.Controls.Picker.TitleColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.Picker.TitleColor.set -> void
~Microsoft.Maui.Controls.Platform.ColorChangeRevealDrawable.ColorChangeRevealDrawable(Android.Graphics.Color startColor, Android.Graphics.Color endColor, Android.Graphics.Point center) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ContainerView.ContainerView(Android.Content.Context context, Microsoft.Maui.Controls.View view, Microsoft.Maui.IMauiContext mauiContext) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ContainerView.View.get -> Microsoft.Maui.Controls.View
~Microsoft.Maui.Controls.Platform.Compatibility.ContainerView.View.set -> void
~Microsoft.Maui.Controls.Platform.Compatibility.CustomFrameLayout.CustomFrameLayout(Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr, int defStyleRes) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.CustomFrameLayout.CustomFrameLayout(Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.CustomFrameLayout.CustomFrameLayout(Android.Content.Context context, Android.Util.IAttributeSet attrs) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.CustomFrameLayout.CustomFrameLayout(Android.Content.Context context) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.IShellBottomNavViewAppearanceTracker.ResetAppearance(Google.Android.Material.BottomNavigation.BottomNavigationView bottomView) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.IShellBottomNavViewAppearanceTracker.SetAppearance(Google.Android.Material.BottomNavigation.BottomNavigationView bottomView, Microsoft.Maui.Controls.IShellAppearanceElement appearance) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.IShellContext.AndroidContext.get -> Android.Content.Context
~Microsoft.Maui.Controls.Platform.Compatibility.IShellContext.CreateBottomNavViewAppearanceTracker(Microsoft.Maui.Controls.ShellItem shellItem) -> Microsoft.Maui.Controls.Platform.Compatibility.IShellBottomNavViewAppearanceTracker
~Microsoft.Maui.Controls.Platform.Compatibility.IShellContext.CreateFragmentForPage(Microsoft.Maui.Controls.Page page) -> Microsoft.Maui.Controls.Platform.Compatibility.IShellObservableFragment
~Microsoft.Maui.Controls.Platform.Compatibility.IShellContext.CreateShellFlyoutContentRenderer() -> Microsoft.Maui.Controls.Platform.Compatibility.IShellFlyoutContentRenderer
~Microsoft.Maui.Controls.Platform.Compatibility.IShellContext.CreateShellItemRenderer(Microsoft.Maui.Controls.ShellItem shellItem) -> Microsoft.Maui.Controls.Platform.Compatibility.IShellItemRenderer
~Microsoft.Maui.Controls.Platform.Compatibility.IShellContext.CreateShellSectionRenderer(Microsoft.Maui.Controls.ShellSection shellSection) -> Microsoft.Maui.Controls.Platform.Compatibility.IShellSectionRenderer
~Microsoft.Maui.Controls.Platform.Compatibility.IShellContext.CreateTabLayoutAppearanceTracker(Microsoft.Maui.Controls.ShellSection shellSection) -> Microsoft.Maui.Controls.Platform.Compatibility.IShellTabLayoutAppearanceTracker
~Microsoft.Maui.Controls.Platform.Compatibility.IShellContext.CreateToolbarAppearanceTracker() -> Microsoft.Maui.Controls.Platform.Compatibility.IShellToolbarAppearanceTracker
~Microsoft.Maui.Controls.Platform.Compatibility.IShellContext.CreateTrackerForToolbar(AndroidX.AppCompat.Widget.Toolbar toolbar) -> Microsoft.Maui.Controls.Platform.Compatibility.IShellToolbarTracker
~Microsoft.Maui.Controls.Platform.Compatibility.IShellContext.CurrentDrawerLayout.get -> AndroidX.DrawerLayout.Widget.DrawerLayout
~Microsoft.Maui.Controls.Platform.Compatibility.IShellContext.Shell.get -> Microsoft.Maui.Controls.Shell
~Microsoft.Maui.Controls.Platform.Compatibility.IShellFlyoutContentRenderer.AndroidView.get -> Android.Views.View
~Microsoft.Maui.Controls.Platform.Compatibility.IShellFlyoutRenderer.AndroidView.get -> Android.Views.View
~Microsoft.Maui.Controls.Platform.Compatibility.IShellFlyoutRenderer.AttachFlyout(Microsoft.Maui.Controls.Platform.Compatibility.IShellContext context, Android.Views.View content) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.IShellItemRenderer.Fragment.get -> AndroidX.Fragment.App.Fragment
~Microsoft.Maui.Controls.Platform.Compatibility.IShellItemRenderer.ShellItem.get -> Microsoft.Maui.Controls.ShellItem
~Microsoft.Maui.Controls.Platform.Compatibility.IShellItemRenderer.ShellItem.set -> void
~Microsoft.Maui.Controls.Platform.Compatibility.IShellObservableFragment.Fragment.get -> AndroidX.Fragment.App.Fragment
~Microsoft.Maui.Controls.Platform.Compatibility.IShellSearchView.SearchHandler.get -> Microsoft.Maui.Controls.SearchHandler
~Microsoft.Maui.Controls.Platform.Compatibility.IShellSearchView.SearchHandler.set -> void
~Microsoft.Maui.Controls.Platform.Compatibility.IShellSearchView.View.get -> Android.Views.View
~Microsoft.Maui.Controls.Platform.Compatibility.IShellSectionRenderer.ShellSection.get -> Microsoft.Maui.Controls.ShellSection
~Microsoft.Maui.Controls.Platform.Compatibility.IShellSectionRenderer.ShellSection.set -> void
~Microsoft.Maui.Controls.Platform.Compatibility.IShellTabLayoutAppearanceTracker.ResetAppearance(Google.Android.Material.Tabs.TabLayout tabLayout) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.IShellTabLayoutAppearanceTracker.SetAppearance(Google.Android.Material.Tabs.TabLayout tabLayout, Microsoft.Maui.Controls.ShellAppearance appearance) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.IShellToolbarAppearanceTracker.ResetAppearance(AndroidX.AppCompat.Widget.Toolbar toolbar, Microsoft.Maui.Controls.Platform.Compatibility.IShellToolbarTracker toolbarTracker) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.IShellToolbarAppearanceTracker.SetAppearance(AndroidX.AppCompat.Widget.Toolbar toolbar, Microsoft.Maui.Controls.Platform.Compatibility.IShellToolbarTracker toolbarTracker, Microsoft.Maui.Controls.ShellAppearance appearance) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.IShellToolbarTracker.Page.get -> Microsoft.Maui.Controls.Page
~Microsoft.Maui.Controls.Platform.Compatibility.IShellToolbarTracker.Page.set -> void
~Microsoft.Maui.Controls.Platform.Compatibility.IShellToolbarTracker.SetToolbar(Microsoft.Maui.IToolbar toolbar) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.IShellToolbarTracker.TintColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.Platform.Compatibility.IShellToolbarTracker.TintColor.set -> void
~Microsoft.Maui.Controls.Platform.Compatibility.SearchHandlerAppearanceTracker.SearchHandlerAppearanceTracker(Microsoft.Maui.Controls.Platform.Compatibility.IShellSearchView searchView, Microsoft.Maui.Controls.Platform.Compatibility.IShellContext shellContext) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellBottomNavViewAppearanceTracker.ShellBottomNavViewAppearanceTracker(Microsoft.Maui.Controls.Platform.Compatibility.IShellContext shellContext, Microsoft.Maui.Controls.ShellItem shellItem) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellContentFragment.Fragment.get -> AndroidX.Fragment.App.Fragment
~Microsoft.Maui.Controls.Platform.Compatibility.ShellContentFragment.ShellContentFragment(Microsoft.Maui.Controls.Platform.Compatibility.IShellContext shellContext, Microsoft.Maui.Controls.Page page) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellContentFragment.ShellContentFragment(Microsoft.Maui.Controls.Platform.Compatibility.IShellContext shellContext, Microsoft.Maui.Controls.ShellContent shellContent) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.AdapterListItem.AdapterListItem(Microsoft.Maui.Controls.Element element, bool drawTopLine = false) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.AdapterListItem.Element.get -> Microsoft.Maui.Controls.Element
~Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.AdapterListItem.Element.set -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.ElementViewHolder.Bar.get -> Android.Views.View
~Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.ElementViewHolder.Element.get -> Microsoft.Maui.Controls.Element
~Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.ElementViewHolder.Element.set -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.ElementViewHolder.ElementViewHolder(Microsoft.Maui.Controls.View view, Android.Views.View itemView, Android.Views.View bar, System.Action<Microsoft.Maui.Controls.Element> selectedCallback, Microsoft.Maui.Controls.Shell shell) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.ElementViewHolder.View.get -> Microsoft.Maui.Controls.View
~Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.Shell.get -> Microsoft.Maui.Controls.Shell
~Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.ShellFlyoutRecyclerAdapter(Microsoft.Maui.Controls.Platform.Compatibility.IShellContext shellContext, System.Action<Microsoft.Maui.Controls.Element> selectedCallback) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRenderer.ShellFlyoutRenderer(Microsoft.Maui.Controls.Platform.Compatibility.IShellContext shellContext, Android.Content.Context context) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.AndroidView.get -> Android.Views.View
~Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.FooterView.get -> Android.Views.View
~Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.HeaderContainer.HeaderContainer(Android.Content.Context context, Microsoft.Maui.Controls.View view, Microsoft.Maui.IMauiContext mauiContext) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.MauiContext.get -> Microsoft.Maui.IMauiContext
~Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.OnElementSelected(Microsoft.Maui.Controls.Element element) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.OnOffsetChanged(Google.Android.Material.AppBar.AppBarLayout appBarLayout, int verticalOffset) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.ShellContext.get -> Microsoft.Maui.Controls.Platform.Compatibility.IShellContext
~Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.ShellFlyoutTemplatedContentRenderer(Microsoft.Maui.Controls.Platform.Compatibility.IShellContext shellContext) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.View.get -> Android.Views.View
~Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.ShellItemController.get -> Microsoft.Maui.Controls.IShellItemController
~Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.ShellItemRenderer(Microsoft.Maui.Controls.Platform.Compatibility.IShellContext shellContext) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.DisplayedPage.get -> Microsoft.Maui.Controls.Page
~Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.DisplayedPage.set -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.ShellContext.get -> Microsoft.Maui.Controls.Platform.Compatibility.IShellContext
~Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.ShellItem.get -> Microsoft.Maui.Controls.ShellItem
~Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.ShellItemRendererBase(Microsoft.Maui.Controls.Platform.Compatibility.IShellContext shellContext) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.ShellSection.get -> Microsoft.Maui.Controls.ShellSection
~Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.ShellSection.set -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchView.SearchHandler.get -> Microsoft.Maui.Controls.SearchHandler
~Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchView.SearchHandler.set -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchView.ShellSearchView(Android.Content.Context context, Microsoft.Maui.Controls.Platform.Compatibility.IShellContext shellContext) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchViewAdapter.Filter.get -> Android.Widget.Filter
~Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchViewAdapter.MauiContext.get -> Microsoft.Maui.IMauiContext
~Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchViewAdapter.ShellSearchViewAdapter(Microsoft.Maui.Controls.SearchHandler searchHandler, Microsoft.Maui.Controls.Platform.Compatibility.IShellContext shellContext) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellSectionRenderer.ShellContext.get -> Microsoft.Maui.Controls.Platform.Compatibility.IShellContext
~Microsoft.Maui.Controls.Platform.Compatibility.ShellSectionRenderer.ShellSection.get -> Microsoft.Maui.Controls.ShellSection
~Microsoft.Maui.Controls.Platform.Compatibility.ShellSectionRenderer.ShellSection.set -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellSectionRenderer.ShellSectionRenderer(Microsoft.Maui.Controls.Platform.Compatibility.IShellContext shellContext) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellTabLayoutAppearanceTracker.ShellTabLayoutAppearanceTracker(Microsoft.Maui.Controls.Platform.Compatibility.IShellContext shellContext) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarAppearanceTracker.ShellToolbarAppearanceTracker(Microsoft.Maui.Controls.Platform.Compatibility.IShellContext shellContext) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.MauiContext.get -> Microsoft.Maui.IMauiContext
~Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.Page.get -> Microsoft.Maui.Controls.Page
~Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.Page.set -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.SearchHandler.get -> Microsoft.Maui.Controls.SearchHandler
~Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.SearchHandler.set -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.ShellContext.get -> Microsoft.Maui.Controls.Platform.Compatibility.IShellContext
~Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.ShellToolbarTracker(Microsoft.Maui.Controls.Platform.Compatibility.IShellContext shellContext, AndroidX.AppCompat.Widget.Toolbar toolbar, AndroidX.DrawerLayout.Widget.DrawerLayout drawerLayout) -> void
~Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.TintColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.TintColor.set -> void
~Microsoft.Maui.Controls.Platform.GenericAnimatorListener.OnCancel.get -> System.Action<Android.Animation.Animator>
~Microsoft.Maui.Controls.Platform.GenericAnimatorListener.OnCancel.set -> void
~Microsoft.Maui.Controls.Platform.GenericAnimatorListener.OnEnd.get -> System.Action<Android.Animation.Animator>
~Microsoft.Maui.Controls.Platform.GenericAnimatorListener.OnEnd.set -> void
~Microsoft.Maui.Controls.Platform.GenericAnimatorListener.OnRepeat.get -> System.Action<Android.Animation.Animator>
~Microsoft.Maui.Controls.Platform.GenericAnimatorListener.OnRepeat.set -> void
~Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.GradientShader.Colors.get -> int[]
~Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.GradientShader.Colors.set -> void
~Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.GradientShader.Offsets.get -> float[]
~Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.GradientShader.Offsets.set -> void
~Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.LinearGradientShader.LinearGradientShader(int[] colors, float[] offsets, float x1, float y1, float x2, float y2) -> void
~Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.RadialGradientShader.RadialGradientShader(int[] colors, float[] offsets, float centerX, float centerY, float radius) -> void
~Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.SetGradient(Microsoft.Maui.Controls.Brush brush) -> void
~Microsoft.Maui.Controls.Platform.ITabStop.TabStop.get -> Android.Views.View
~Microsoft.Maui.Controls.PlatformConfigurationRegistry<TElement>
~Microsoft.Maui.Controls.PlatformConfigurationRegistry<TElement>.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, TElement>
~Microsoft.Maui.Controls.PlatformConfigurationRegistry<TElement>.PlatformConfigurationRegistry(TElement element) -> void
~Microsoft.Maui.Controls.PlatformEffect<TContainer, TControl>
~Microsoft.Maui.Controls.PlatformEffect<TContainer, TControl>.Container.get -> TContainer
~Microsoft.Maui.Controls.PlatformEffect<TContainer, TControl>.Control.get -> TControl
~Microsoft.Maui.Controls.PointCollection.PointCollection(Microsoft.Maui.Graphics.Point[] p) -> void
~Microsoft.Maui.Controls.PoppedToRootEventArgs.PoppedPages.get -> System.Collections.Generic.IEnumerable<Microsoft.Maui.Controls.Page>
~Microsoft.Maui.Controls.PoppedToRootEventArgs.PoppedToRootEventArgs(Microsoft.Maui.Controls.Page page, System.Collections.Generic.IEnumerable<Microsoft.Maui.Controls.Page> poppedPages) -> void
~Microsoft.Maui.Controls.ProgressBar.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.ProgressBar>
~Microsoft.Maui.Controls.ProgressBar.ProgressColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.ProgressBar.ProgressColor.set -> void
~Microsoft.Maui.Controls.ProgressBar.ProgressTo(double value, uint length, Microsoft.Maui.Easing easing) -> System.Threading.Tasks.Task<bool>
~Microsoft.Maui.Controls.PropertyChangingEventArgs.PropertyChangingEventArgs(string propertyName) -> void
~Microsoft.Maui.Controls.PropertyCondition.Property.get -> Microsoft.Maui.Controls.BindableProperty
~Microsoft.Maui.Controls.PropertyCondition.Property.set -> void
~Microsoft.Maui.Controls.PropertyCondition.Value.get -> object
~Microsoft.Maui.Controls.PropertyCondition.Value.set -> void
~Microsoft.Maui.Controls.QueryPropertyAttribute.Name.get -> string
~Microsoft.Maui.Controls.QueryPropertyAttribute.QueryId.get -> string
~Microsoft.Maui.Controls.QueryPropertyAttribute.QueryPropertyAttribute(string name, string queryId) -> void
~Microsoft.Maui.Controls.RadialGradientBrush.RadialGradientBrush(Microsoft.Maui.Controls.GradientStopCollection gradientStops, double radius) -> void
~Microsoft.Maui.Controls.RadialGradientBrush.RadialGradientBrush(Microsoft.Maui.Controls.GradientStopCollection gradientStops, Microsoft.Maui.Graphics.Point center, double radius) -> void
~Microsoft.Maui.Controls.RadialGradientBrush.RadialGradientBrush(Microsoft.Maui.Controls.GradientStopCollection gradientStops) -> void
~Microsoft.Maui.Controls.RadioButton.BorderColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.RadioButton.BorderColor.set -> void
~Microsoft.Maui.Controls.RadioButton.Content.get -> object
~Microsoft.Maui.Controls.RadioButton.Content.set -> void
~Microsoft.Maui.Controls.RadioButton.ContentAsString() -> string
~Microsoft.Maui.Controls.RadioButton.FontFamily.get -> string
~Microsoft.Maui.Controls.RadioButton.FontFamily.set -> void
~Microsoft.Maui.Controls.RadioButton.GroupName.get -> string
~Microsoft.Maui.Controls.RadioButton.GroupName.set -> void
~Microsoft.Maui.Controls.RadioButton.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.RadioButton>
~Microsoft.Maui.Controls.RadioButton.TextColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.RadioButton.TextColor.set -> void
~Microsoft.Maui.Controls.RadioButton.Value.get -> object
~Microsoft.Maui.Controls.RadioButton.Value.set -> void
~Microsoft.Maui.Controls.RefreshView.Command.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.RefreshView.Command.set -> void
~Microsoft.Maui.Controls.RefreshView.CommandParameter.get -> object
~Microsoft.Maui.Controls.RefreshView.CommandParameter.set -> void
~Microsoft.Maui.Controls.RefreshView.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.RefreshView>
~Microsoft.Maui.Controls.RefreshView.RefreshColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.RefreshView.RefreshColor.set -> void
~Microsoft.Maui.Controls.RelativeBindingSource.AncestorType.get -> System.Type
~Microsoft.Maui.Controls.RelativeBindingSource.RelativeBindingSource(Microsoft.Maui.Controls.RelativeBindingSourceMode mode, System.Type ancestorType = null, int ancestorLevel = 1) -> void
~Microsoft.Maui.Controls.RenderWithAttribute.RenderWithAttribute(System.Type type, System.Type[] supportedVisuals) -> void
~Microsoft.Maui.Controls.RenderWithAttribute.RenderWithAttribute(System.Type type) -> void
~Microsoft.Maui.Controls.RenderWithAttribute.SupportedVisuals.get -> System.Type[]
~Microsoft.Maui.Controls.RenderWithAttribute.Type.get -> System.Type
~Microsoft.Maui.Controls.ResolutionGroupNameAttribute.ResolutionGroupNameAttribute(string name) -> void
~Microsoft.Maui.Controls.ResourceDictionary.Add(Microsoft.Maui.Controls.ResourceDictionary mergedResourceDictionary) -> void
~Microsoft.Maui.Controls.ResourceDictionary.Add(Microsoft.Maui.Controls.Style style) -> void
~Microsoft.Maui.Controls.ResourceDictionary.Add(Microsoft.Maui.Controls.StyleSheets.StyleSheet styleSheet) -> void
~Microsoft.Maui.Controls.ResourceDictionary.Add(string key, object value) -> void
~Microsoft.Maui.Controls.ResourceDictionary.ContainsKey(string key) -> bool
~Microsoft.Maui.Controls.ResourceDictionary.GetEnumerator() -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string, object>>
~Microsoft.Maui.Controls.ResourceDictionary.Keys.get -> System.Collections.Generic.ICollection<string>
~Microsoft.Maui.Controls.ResourceDictionary.MergedDictionaries.get -> System.Collections.Generic.ICollection<Microsoft.Maui.Controls.ResourceDictionary>
~Microsoft.Maui.Controls.ResourceDictionary.Remove(string key) -> bool
~Microsoft.Maui.Controls.ResourceDictionary.SetAndLoadSource(System.Uri value, string resourcePath, System.Reflection.Assembly assembly, System.Xml.IXmlLineInfo lineInfo) -> void
~Microsoft.Maui.Controls.ResourceDictionary.Source.get -> System.Uri
~Microsoft.Maui.Controls.ResourceDictionary.Source.set -> void
~Microsoft.Maui.Controls.ResourceDictionary.this[string index].get -> object
~Microsoft.Maui.Controls.ResourceDictionary.this[string index].set -> void
~Microsoft.Maui.Controls.ResourceDictionary.TryGetValue(string key, out object value) -> bool
~Microsoft.Maui.Controls.ResourceDictionary.Values.get -> System.Collections.Generic.ICollection<object>
~Microsoft.Maui.Controls.RoutingEffect.RoutingEffect(string effectId) -> void
~Microsoft.Maui.Controls.RowDefinitionCollection.RowDefinitionCollection(params Microsoft.Maui.Controls.RowDefinition[] definitions) -> void
~Microsoft.Maui.Controls.ScrollToRequestedEventArgs.Element.get -> Microsoft.Maui.Controls.Element
~Microsoft.Maui.Controls.ScrollToRequestedEventArgs.ToRequest() -> Microsoft.Maui.ScrollToRequest
~Microsoft.Maui.Controls.ScrollToRequestEventArgs.Group.get -> object
~Microsoft.Maui.Controls.ScrollToRequestEventArgs.Item.get -> object
~Microsoft.Maui.Controls.ScrollToRequestEventArgs.ScrollToRequestEventArgs(object item, object group, Microsoft.Maui.Controls.ScrollToPosition scrollToPosition, bool isAnimated) -> void
~Microsoft.Maui.Controls.ScrollView.Content.get -> Microsoft.Maui.Controls.View
~Microsoft.Maui.Controls.ScrollView.Content.set -> void
~Microsoft.Maui.Controls.ScrollView.GetScrollPositionForElement(Microsoft.Maui.Controls.VisualElement item, Microsoft.Maui.Controls.ScrollToPosition pos) -> Microsoft.Maui.Graphics.Point
~Microsoft.Maui.Controls.ScrollView.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.ScrollView>
~Microsoft.Maui.Controls.ScrollView.ScrollToAsync(double x, double y, bool animated) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.ScrollView.ScrollToAsync(Microsoft.Maui.Controls.Element element, Microsoft.Maui.Controls.ScrollToPosition position, bool animated) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.SearchBar.CancelButtonColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.SearchBar.CancelButtonColor.set -> void
~Microsoft.Maui.Controls.SearchBar.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.SearchBar>
~Microsoft.Maui.Controls.SearchBar.SearchCommand.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.SearchBar.SearchCommand.set -> void
~Microsoft.Maui.Controls.SearchBar.SearchCommandParameter.get -> object
~Microsoft.Maui.Controls.SearchBar.SearchCommandParameter.set -> void
~Microsoft.Maui.Controls.SearchHandler.AutomationId.get -> string
~Microsoft.Maui.Controls.SearchHandler.AutomationId.set -> void
~Microsoft.Maui.Controls.SearchHandler.BackgroundColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.SearchHandler.BackgroundColor.set -> void
~Microsoft.Maui.Controls.SearchHandler.CancelButtonColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.SearchHandler.CancelButtonColor.set -> void
~Microsoft.Maui.Controls.SearchHandler.ClearIcon.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.SearchHandler.ClearIcon.set -> void
~Microsoft.Maui.Controls.SearchHandler.ClearIconHelpText.get -> string
~Microsoft.Maui.Controls.SearchHandler.ClearIconHelpText.set -> void
~Microsoft.Maui.Controls.SearchHandler.ClearIconName.get -> string
~Microsoft.Maui.Controls.SearchHandler.ClearIconName.set -> void
~Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommand.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommand.set -> void
~Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommandParameter.get -> object
~Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommandParameter.set -> void
~Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderHelpText.get -> string
~Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderHelpText.set -> void
~Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderIcon.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderIcon.set -> void
~Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderName.get -> string
~Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderName.set -> void
~Microsoft.Maui.Controls.SearchHandler.Command.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.SearchHandler.Command.set -> void
~Microsoft.Maui.Controls.SearchHandler.CommandParameter.get -> object
~Microsoft.Maui.Controls.SearchHandler.CommandParameter.set -> void
~Microsoft.Maui.Controls.SearchHandler.DisplayMemberName.get -> string
~Microsoft.Maui.Controls.SearchHandler.DisplayMemberName.set -> void
~Microsoft.Maui.Controls.SearchHandler.FontFamily.get -> string
~Microsoft.Maui.Controls.SearchHandler.FontFamily.set -> void
~Microsoft.Maui.Controls.SearchHandler.ItemsSource.get -> System.Collections.IEnumerable
~Microsoft.Maui.Controls.SearchHandler.ItemsSource.set -> void
~Microsoft.Maui.Controls.SearchHandler.ItemTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.SearchHandler.ItemTemplate.set -> void
~Microsoft.Maui.Controls.SearchHandler.Keyboard.get -> Microsoft.Maui.Keyboard
~Microsoft.Maui.Controls.SearchHandler.Keyboard.set -> void
~Microsoft.Maui.Controls.SearchHandler.Placeholder.get -> string
~Microsoft.Maui.Controls.SearchHandler.Placeholder.set -> void
~Microsoft.Maui.Controls.SearchHandler.PlaceholderColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.SearchHandler.PlaceholderColor.set -> void
~Microsoft.Maui.Controls.SearchHandler.Query.get -> string
~Microsoft.Maui.Controls.SearchHandler.Query.set -> void
~Microsoft.Maui.Controls.SearchHandler.QueryIcon.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.SearchHandler.QueryIcon.set -> void
~Microsoft.Maui.Controls.SearchHandler.QueryIconHelpText.get -> string
~Microsoft.Maui.Controls.SearchHandler.QueryIconHelpText.set -> void
~Microsoft.Maui.Controls.SearchHandler.QueryIconName.get -> string
~Microsoft.Maui.Controls.SearchHandler.QueryIconName.set -> void
~Microsoft.Maui.Controls.SearchHandler.SelectedItem.get -> object
~Microsoft.Maui.Controls.SearchHandler.TextColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.SearchHandler.TextColor.set -> void
~Microsoft.Maui.Controls.SelectableItemsView.SelectedItem.get -> object
~Microsoft.Maui.Controls.SelectableItemsView.SelectedItem.set -> void
~Microsoft.Maui.Controls.SelectableItemsView.SelectedItems.get -> System.Collections.Generic.IList<object>
~Microsoft.Maui.Controls.SelectableItemsView.SelectedItems.set -> void
~Microsoft.Maui.Controls.SelectableItemsView.SelectionChangedCommand.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.SelectableItemsView.SelectionChangedCommand.set -> void
~Microsoft.Maui.Controls.SelectableItemsView.SelectionChangedCommandParameter.get -> object
~Microsoft.Maui.Controls.SelectableItemsView.SelectionChangedCommandParameter.set -> void
~Microsoft.Maui.Controls.SelectableItemsView.UpdateSelectedItems(System.Collections.Generic.IList<object> newSelection) -> void
~Microsoft.Maui.Controls.SelectedItemChangedEventArgs.SelectedItem.get -> object
~Microsoft.Maui.Controls.SelectedItemChangedEventArgs.SelectedItemChangedEventArgs(object selectedItem, int selectedItemIndex) -> void
~Microsoft.Maui.Controls.SelectedPositionChangedEventArgs.SelectedPosition.get -> object
~Microsoft.Maui.Controls.SelectionChangedEventArgs.CurrentSelection.get -> System.Collections.Generic.IReadOnlyList<object>
~Microsoft.Maui.Controls.SelectionChangedEventArgs.PreviousSelection.get -> System.Collections.Generic.IReadOnlyList<object>
~Microsoft.Maui.Controls.Setter.Property.get -> Microsoft.Maui.Controls.BindableProperty
~Microsoft.Maui.Controls.Setter.Property.set -> void
~Microsoft.Maui.Controls.Setter.TargetName.get -> string
~Microsoft.Maui.Controls.Setter.TargetName.set -> void
~Microsoft.Maui.Controls.Setter.Value.get -> object
~Microsoft.Maui.Controls.Setter.Value.set -> void
~Microsoft.Maui.Controls.Shadow.Brush.get -> Microsoft.Maui.Controls.Brush
~Microsoft.Maui.Controls.Shadow.Brush.set -> void
~Microsoft.Maui.Controls.Shapes.GeometryGroup.Children.get -> Microsoft.Maui.Controls.Shapes.GeometryCollection
~Microsoft.Maui.Controls.Shapes.GeometryGroup.Children.set -> void
~Microsoft.Maui.Controls.Shapes.Matrix.Transform(Microsoft.Maui.Graphics.Point[] points) -> void
~Microsoft.Maui.Controls.Shapes.Path.Data.get -> Microsoft.Maui.Controls.Shapes.Geometry
~Microsoft.Maui.Controls.Shapes.Path.Data.set -> void
~Microsoft.Maui.Controls.Shapes.Path.Path(Microsoft.Maui.Controls.Shapes.Geometry data) -> void
~Microsoft.Maui.Controls.Shapes.Path.RenderTransform.get -> Microsoft.Maui.Controls.Shapes.Transform
~Microsoft.Maui.Controls.Shapes.Path.RenderTransform.set -> void
~Microsoft.Maui.Controls.Shapes.PathFigure.Segments.get -> Microsoft.Maui.Controls.Shapes.PathSegmentCollection
~Microsoft.Maui.Controls.Shapes.PathFigure.Segments.set -> void
~Microsoft.Maui.Controls.Shapes.PathGeometry.Figures.get -> Microsoft.Maui.Controls.Shapes.PathFigureCollection
~Microsoft.Maui.Controls.Shapes.PathGeometry.Figures.set -> void
~Microsoft.Maui.Controls.Shapes.PathGeometry.PathGeometry(Microsoft.Maui.Controls.Shapes.PathFigureCollection figures, Microsoft.Maui.Controls.Shapes.FillRule fillRule) -> void
~Microsoft.Maui.Controls.Shapes.PathGeometry.PathGeometry(Microsoft.Maui.Controls.Shapes.PathFigureCollection figures) -> void
~Microsoft.Maui.Controls.Shapes.PolyBezierSegment.Points.get -> Microsoft.Maui.Controls.PointCollection
~Microsoft.Maui.Controls.Shapes.PolyBezierSegment.Points.set -> void
~Microsoft.Maui.Controls.Shapes.PolyBezierSegment.PolyBezierSegment(Microsoft.Maui.Controls.PointCollection points) -> void
~Microsoft.Maui.Controls.Shapes.Polygon.Points.get -> Microsoft.Maui.Controls.PointCollection
~Microsoft.Maui.Controls.Shapes.Polygon.Points.set -> void
~Microsoft.Maui.Controls.Shapes.Polygon.Polygon(Microsoft.Maui.Controls.PointCollection points) -> void
~Microsoft.Maui.Controls.Shapes.Polyline.Points.get -> Microsoft.Maui.Controls.PointCollection
~Microsoft.Maui.Controls.Shapes.Polyline.Points.set -> void
~Microsoft.Maui.Controls.Shapes.Polyline.Polyline(Microsoft.Maui.Controls.PointCollection points) -> void
~Microsoft.Maui.Controls.Shapes.PolyLineSegment.Points.get -> Microsoft.Maui.Controls.PointCollection
~Microsoft.Maui.Controls.Shapes.PolyLineSegment.Points.set -> void
~Microsoft.Maui.Controls.Shapes.PolyLineSegment.PolyLineSegment(Microsoft.Maui.Controls.PointCollection points) -> void
~Microsoft.Maui.Controls.Shapes.PolyQuadraticBezierSegment.Points.get -> Microsoft.Maui.Controls.PointCollection
~Microsoft.Maui.Controls.Shapes.PolyQuadraticBezierSegment.Points.set -> void
~Microsoft.Maui.Controls.Shapes.PolyQuadraticBezierSegment.PolyQuadraticBezierSegment(Microsoft.Maui.Controls.PointCollection points) -> void
~Microsoft.Maui.Controls.Shapes.TransformGroup.Children.get -> Microsoft.Maui.Controls.Shapes.TransformCollection
~Microsoft.Maui.Controls.Shapes.TransformGroup.Children.set -> void
~Microsoft.Maui.Controls.Shell.CurrentItem.get -> Microsoft.Maui.Controls.ShellItem
~Microsoft.Maui.Controls.Shell.CurrentItem.set -> void
~Microsoft.Maui.Controls.Shell.CurrentPage.get -> Microsoft.Maui.Controls.Page
~Microsoft.Maui.Controls.Shell.CurrentState.get -> Microsoft.Maui.Controls.ShellNavigationState
~Microsoft.Maui.Controls.Shell.FlyoutBackdrop.get -> Microsoft.Maui.Controls.Brush
~Microsoft.Maui.Controls.Shell.FlyoutBackdrop.set -> void
~Microsoft.Maui.Controls.Shell.FlyoutBackground.get -> Microsoft.Maui.Controls.Brush
~Microsoft.Maui.Controls.Shell.FlyoutBackground.set -> void
~Microsoft.Maui.Controls.Shell.FlyoutBackgroundColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.Shell.FlyoutBackgroundColor.set -> void
~Microsoft.Maui.Controls.Shell.FlyoutBackgroundImage.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.Shell.FlyoutBackgroundImage.set -> void
~Microsoft.Maui.Controls.Shell.FlyoutContent.get -> object
~Microsoft.Maui.Controls.Shell.FlyoutContent.set -> void
~Microsoft.Maui.Controls.Shell.FlyoutContentTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.Shell.FlyoutContentTemplate.set -> void
~Microsoft.Maui.Controls.Shell.FlyoutFooter.get -> object
~Microsoft.Maui.Controls.Shell.FlyoutFooter.set -> void
~Microsoft.Maui.Controls.Shell.FlyoutFooterTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.Shell.FlyoutFooterTemplate.set -> void
~Microsoft.Maui.Controls.Shell.FlyoutHeader.get -> object
~Microsoft.Maui.Controls.Shell.FlyoutHeader.set -> void
~Microsoft.Maui.Controls.Shell.FlyoutHeaderTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.Shell.FlyoutHeaderTemplate.set -> void
~Microsoft.Maui.Controls.Shell.FlyoutIcon.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.Shell.FlyoutIcon.set -> void
~Microsoft.Maui.Controls.Shell.FlyoutItems.get -> System.Collections.IEnumerable
~Microsoft.Maui.Controls.Shell.GoToAsync(Microsoft.Maui.Controls.ShellNavigationState state, bool animate, Microsoft.Maui.Controls.ShellNavigationQueryParameters shellNavigationQueryParameters) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.Shell.GoToAsync(Microsoft.Maui.Controls.ShellNavigationState state, bool animate, System.Collections.Generic.IDictionary<string, object> parameters) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.Shell.GoToAsync(Microsoft.Maui.Controls.ShellNavigationState state, bool animate) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.Shell.GoToAsync(Microsoft.Maui.Controls.ShellNavigationState state, Microsoft.Maui.Controls.ShellNavigationQueryParameters shellNavigationQueryParameters) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.Shell.GoToAsync(Microsoft.Maui.Controls.ShellNavigationState state, System.Collections.Generic.IDictionary<string, object> parameters) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.Shell.GoToAsync(Microsoft.Maui.Controls.ShellNavigationState state) -> System.Threading.Tasks.Task
~Microsoft.Maui.Controls.Shell.Items.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.ShellItem>
~Microsoft.Maui.Controls.Shell.ItemTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.Shell.ItemTemplate.set -> void
~Microsoft.Maui.Controls.Shell.MenuItemTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.Shell.MenuItemTemplate.set -> void
~Microsoft.Maui.Controls.ShellAppearance.BackgroundColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.ShellAppearance.DisabledColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.ShellAppearance.FlyoutBackdrop.get -> Microsoft.Maui.Controls.Brush
~Microsoft.Maui.Controls.ShellAppearance.ForegroundColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.ShellAppearance.Ingest(Microsoft.Maui.Controls.Element pivot) -> bool
~Microsoft.Maui.Controls.ShellAppearance.TabBarBackgroundColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.ShellAppearance.TabBarDisabledColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.ShellAppearance.TabBarForegroundColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.ShellAppearance.TabBarTitleColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.ShellAppearance.TabBarUnselectedColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.ShellAppearance.TitleColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.ShellAppearance.UnselectedColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.ShellContent.Content.get -> object
~Microsoft.Maui.Controls.ShellContent.Content.set -> void
~Microsoft.Maui.Controls.ShellContent.ContentTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.ShellContent.ContentTemplate.set -> void
~Microsoft.Maui.Controls.ShellContent.MenuItems.get -> Microsoft.Maui.Controls.MenuItemCollection
~Microsoft.Maui.Controls.ShellItem.CurrentItem.get -> Microsoft.Maui.Controls.ShellSection
~Microsoft.Maui.Controls.ShellItem.CurrentItem.set -> void
~Microsoft.Maui.Controls.ShellItem.Items.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.ShellSection>
~Microsoft.Maui.Controls.ShellItem.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.ShellItem>
~Microsoft.Maui.Controls.ShellNavigatedEventArgs.Current.get -> Microsoft.Maui.Controls.ShellNavigationState
~Microsoft.Maui.Controls.ShellNavigatedEventArgs.Previous.get -> Microsoft.Maui.Controls.ShellNavigationState
~Microsoft.Maui.Controls.ShellNavigatedEventArgs.ShellNavigatedEventArgs(Microsoft.Maui.Controls.ShellNavigationState previous, Microsoft.Maui.Controls.ShellNavigationState current, Microsoft.Maui.Controls.ShellNavigationSource source) -> void
~Microsoft.Maui.Controls.ShellNavigatingEventArgs.Current.get -> Microsoft.Maui.Controls.ShellNavigationState
~Microsoft.Maui.Controls.ShellNavigatingEventArgs.GetDeferral() -> Microsoft.Maui.Controls.ShellNavigatingDeferral
~Microsoft.Maui.Controls.ShellNavigatingEventArgs.ShellNavigatingEventArgs(Microsoft.Maui.Controls.ShellNavigationState current, Microsoft.Maui.Controls.ShellNavigationState target, Microsoft.Maui.Controls.ShellNavigationSource source, bool canCancel) -> void
~Microsoft.Maui.Controls.ShellNavigatingEventArgs.Target.get -> Microsoft.Maui.Controls.ShellNavigationState
~Microsoft.Maui.Controls.ShellNavigationState.Location.get -> System.Uri
~Microsoft.Maui.Controls.ShellNavigationState.ShellNavigationState(string location) -> void
~Microsoft.Maui.Controls.ShellNavigationState.ShellNavigationState(System.Uri location) -> void
~Microsoft.Maui.Controls.ShellSection.CurrentItem.get -> Microsoft.Maui.Controls.ShellContent
~Microsoft.Maui.Controls.ShellSection.CurrentItem.set -> void
~Microsoft.Maui.Controls.ShellSection.Items.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.ShellContent>
~Microsoft.Maui.Controls.ShellSection.Stack.get -> System.Collections.Generic.IReadOnlyList<Microsoft.Maui.Controls.Page>
~Microsoft.Maui.Controls.Slider.DragCompletedCommand.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.Slider.DragCompletedCommand.set -> void
~Microsoft.Maui.Controls.Slider.DragStartedCommand.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.Slider.DragStartedCommand.set -> void
~Microsoft.Maui.Controls.Slider.MaximumTrackColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.Slider.MaximumTrackColor.set -> void
~Microsoft.Maui.Controls.Slider.MinimumTrackColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.Slider.MinimumTrackColor.set -> void
~Microsoft.Maui.Controls.Slider.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.Slider>
~Microsoft.Maui.Controls.Slider.ThumbColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.Slider.ThumbColor.set -> void
~Microsoft.Maui.Controls.Slider.ThumbImageSource.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.Slider.ThumbImageSource.set -> void
~Microsoft.Maui.Controls.SolidColorBrush.SolidColorBrush(Microsoft.Maui.Graphics.Color color) -> void
~Microsoft.Maui.Controls.Span.BackgroundColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.Span.BackgroundColor.set -> void
~Microsoft.Maui.Controls.Span.FontFamily.get -> string
~Microsoft.Maui.Controls.Span.FontFamily.set -> void
~Microsoft.Maui.Controls.Span.Style.get -> Microsoft.Maui.Controls.Style
~Microsoft.Maui.Controls.Span.Style.set -> void
~Microsoft.Maui.Controls.Span.Text.get -> string
~Microsoft.Maui.Controls.Span.Text.set -> void
~Microsoft.Maui.Controls.Span.TextColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.Span.TextColor.set -> void
~Microsoft.Maui.Controls.StackLayoutManager.StackLayoutManager(Microsoft.Maui.Controls.StackLayout stackLayout) -> void
~Microsoft.Maui.Controls.Stepper.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.Stepper>
~Microsoft.Maui.Controls.StructuredItemsView.Footer.get -> object
~Microsoft.Maui.Controls.StructuredItemsView.Footer.set -> void
~Microsoft.Maui.Controls.StructuredItemsView.FooterTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.StructuredItemsView.FooterTemplate.set -> void
~Microsoft.Maui.Controls.StructuredItemsView.Header.get -> object
~Microsoft.Maui.Controls.StructuredItemsView.Header.set -> void
~Microsoft.Maui.Controls.StructuredItemsView.HeaderTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~Microsoft.Maui.Controls.StructuredItemsView.HeaderTemplate.set -> void
~Microsoft.Maui.Controls.StructuredItemsView.ItemsLayout.get -> Microsoft.Maui.Controls.IItemsLayout
~Microsoft.Maui.Controls.StructuredItemsView.ItemsLayout.set -> void
~Microsoft.Maui.Controls.Style.BasedOn.get -> Microsoft.Maui.Controls.Style
~Microsoft.Maui.Controls.Style.BasedOn.set -> void
~Microsoft.Maui.Controls.Style.BaseResourceKey.get -> string
~Microsoft.Maui.Controls.Style.BaseResourceKey.set -> void
~Microsoft.Maui.Controls.Style.Behaviors.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.Behavior>
~Microsoft.Maui.Controls.Style.Class.get -> string
~Microsoft.Maui.Controls.Style.Class.set -> void
~Microsoft.Maui.Controls.Style.Setters.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.Setter>
~Microsoft.Maui.Controls.Style.Style(System.Type targetType) -> void
~Microsoft.Maui.Controls.Style.TargetType.get -> System.Type
~Microsoft.Maui.Controls.Style.Triggers.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.TriggerBase>
~Microsoft.Maui.Controls.SwipedEventArgs.Parameter.get -> object
~Microsoft.Maui.Controls.SwipedEventArgs.SwipedEventArgs(object parameter, Microsoft.Maui.SwipeDirection direction) -> void
~Microsoft.Maui.Controls.SwipeGestureRecognizer.Command.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.SwipeGestureRecognizer.Command.set -> void
~Microsoft.Maui.Controls.SwipeGestureRecognizer.CommandParameter.get -> object
~Microsoft.Maui.Controls.SwipeGestureRecognizer.CommandParameter.set -> void
~Microsoft.Maui.Controls.SwipeGestureRecognizer.SendSwiped(Microsoft.Maui.Controls.View sender, Microsoft.Maui.SwipeDirection direction) -> void
~Microsoft.Maui.Controls.SwipeItem.BackgroundColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.SwipeItem.BackgroundColor.set -> void
~Microsoft.Maui.Controls.SwipeItems.Add(Microsoft.Maui.Controls.ISwipeItem item) -> void
~Microsoft.Maui.Controls.SwipeItems.Contains(Microsoft.Maui.Controls.ISwipeItem item) -> bool
~Microsoft.Maui.Controls.SwipeItems.CopyTo(Microsoft.Maui.Controls.ISwipeItem[] array, int arrayIndex) -> void
~Microsoft.Maui.Controls.SwipeItems.GetEnumerator() -> System.Collections.Generic.IEnumerator<Microsoft.Maui.Controls.ISwipeItem>
~Microsoft.Maui.Controls.SwipeItems.IndexOf(Microsoft.Maui.Controls.ISwipeItem item) -> int
~Microsoft.Maui.Controls.SwipeItems.Insert(int index, Microsoft.Maui.Controls.ISwipeItem item) -> void
~Microsoft.Maui.Controls.SwipeItems.Remove(Microsoft.Maui.Controls.ISwipeItem item) -> bool
~Microsoft.Maui.Controls.SwipeItems.SwipeItems(System.Collections.Generic.IEnumerable<Microsoft.Maui.Controls.ISwipeItem> swipeItems) -> void
~Microsoft.Maui.Controls.SwipeItems.this[int index].get -> Microsoft.Maui.Controls.ISwipeItem
~Microsoft.Maui.Controls.SwipeItems.this[int index].set -> void
~Microsoft.Maui.Controls.SwipeItemView.Command.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.SwipeItemView.Command.set -> void
~Microsoft.Maui.Controls.SwipeItemView.CommandParameter.get -> object
~Microsoft.Maui.Controls.SwipeItemView.CommandParameter.set -> void
~Microsoft.Maui.Controls.SwipeView.BottomItems.get -> Microsoft.Maui.Controls.SwipeItems
~Microsoft.Maui.Controls.SwipeView.BottomItems.set -> void
~Microsoft.Maui.Controls.SwipeView.LeftItems.get -> Microsoft.Maui.Controls.SwipeItems
~Microsoft.Maui.Controls.SwipeView.LeftItems.set -> void
~Microsoft.Maui.Controls.SwipeView.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.SwipeView>
~Microsoft.Maui.Controls.SwipeView.RightItems.get -> Microsoft.Maui.Controls.SwipeItems
~Microsoft.Maui.Controls.SwipeView.RightItems.set -> void
~Microsoft.Maui.Controls.SwipeView.TopItems.get -> Microsoft.Maui.Controls.SwipeItems
~Microsoft.Maui.Controls.SwipeView.TopItems.set -> void
~Microsoft.Maui.Controls.Switch.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.Switch>
~Microsoft.Maui.Controls.Switch.OnColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.Switch.OnColor.set -> void
~Microsoft.Maui.Controls.Switch.ThumbColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.Switch.ThumbColor.set -> void
~Microsoft.Maui.Controls.SwitchCell.OnColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.SwitchCell.OnColor.set -> void
~Microsoft.Maui.Controls.SwitchCell.Text.get -> string
~Microsoft.Maui.Controls.SwitchCell.Text.set -> void
~Microsoft.Maui.Controls.TabbedPage.BarBackground.get -> Microsoft.Maui.Controls.Brush
~Microsoft.Maui.Controls.TabbedPage.BarBackground.set -> void
~Microsoft.Maui.Controls.TabbedPage.BarBackgroundColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.TabbedPage.BarBackgroundColor.set -> void
~Microsoft.Maui.Controls.TabbedPage.BarTextColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.TabbedPage.BarTextColor.set -> void
~Microsoft.Maui.Controls.TabbedPage.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.TabbedPage>
~Microsoft.Maui.Controls.TabbedPage.SelectedTabColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.TabbedPage.SelectedTabColor.set -> void
~Microsoft.Maui.Controls.TabbedPage.UnselectedTabColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.TabbedPage.UnselectedTabColor.set -> void
~Microsoft.Maui.Controls.TableRoot.TableRoot(string title) -> void
~Microsoft.Maui.Controls.TableSection.TableSection(string title) -> void
~Microsoft.Maui.Controls.TableSectionBase.TableSectionBase(string title) -> void
~Microsoft.Maui.Controls.TableSectionBase.TextColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.TableSectionBase.TextColor.set -> void
~Microsoft.Maui.Controls.TableSectionBase.Title.get -> string
~Microsoft.Maui.Controls.TableSectionBase.Title.set -> void
~Microsoft.Maui.Controls.TableSectionBase<T>
~Microsoft.Maui.Controls.TableSectionBase<T>.Add(System.Collections.Generic.IEnumerable<T> items) -> void
~Microsoft.Maui.Controls.TableSectionBase<T>.Add(T item) -> void
~Microsoft.Maui.Controls.TableSectionBase<T>.Contains(T item) -> bool
~Microsoft.Maui.Controls.TableSectionBase<T>.CopyTo(T[] array, int arrayIndex) -> void
~Microsoft.Maui.Controls.TableSectionBase<T>.GetEnumerator() -> System.Collections.Generic.IEnumerator<T>
~Microsoft.Maui.Controls.TableSectionBase<T>.IndexOf(T item) -> int
~Microsoft.Maui.Controls.TableSectionBase<T>.Insert(int index, T item) -> void
~Microsoft.Maui.Controls.TableSectionBase<T>.Remove(T item) -> bool
~Microsoft.Maui.Controls.TableSectionBase<T>.TableSectionBase(string title) -> void
~Microsoft.Maui.Controls.TableSectionBase<T>.this[int index].get -> T
~Microsoft.Maui.Controls.TableSectionBase<T>.this[int index].set -> void
~Microsoft.Maui.Controls.TableView.Model.get -> Microsoft.Maui.Controls.Internals.TableModel
~Microsoft.Maui.Controls.TableView.Model.set -> void
~Microsoft.Maui.Controls.TableView.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.TableView>
~Microsoft.Maui.Controls.TableView.Root.get -> Microsoft.Maui.Controls.TableRoot
~Microsoft.Maui.Controls.TableView.Root.set -> void
~Microsoft.Maui.Controls.TableView.TableView(Microsoft.Maui.Controls.TableRoot root) -> void
~Microsoft.Maui.Controls.TemplateBinding.Converter.get -> Microsoft.Maui.Controls.IValueConverter
~Microsoft.Maui.Controls.TemplateBinding.Converter.set -> void
~Microsoft.Maui.Controls.TemplateBinding.ConverterParameter.get -> object
~Microsoft.Maui.Controls.TemplateBinding.ConverterParameter.set -> void
~Microsoft.Maui.Controls.TemplateBinding.Path.get -> string
~Microsoft.Maui.Controls.TemplateBinding.Path.set -> void
~Microsoft.Maui.Controls.TemplateBinding.TemplateBinding(string path, Microsoft.Maui.Controls.BindingMode mode = Microsoft.Maui.Controls.BindingMode.Default, Microsoft.Maui.Controls.IValueConverter converter = null, object converterParameter = null, string stringFormat = null) -> void
~Microsoft.Maui.Controls.TemplatedPage.ControlTemplate.get -> Microsoft.Maui.Controls.ControlTemplate
~Microsoft.Maui.Controls.TemplatedPage.ControlTemplate.set -> void
~Microsoft.Maui.Controls.TemplatedPage.GetTemplateChild(string name) -> object
~Microsoft.Maui.Controls.TemplatedView.ControlTemplate.get -> Microsoft.Maui.Controls.ControlTemplate
~Microsoft.Maui.Controls.TemplatedView.ControlTemplate.set -> void
~Microsoft.Maui.Controls.TemplatedView.GetTemplateChild(string name) -> object
~Microsoft.Maui.Controls.TextCell.Command.get -> System.Windows.Input.ICommand
~Microsoft.Maui.Controls.TextCell.Command.set -> void
~Microsoft.Maui.Controls.TextCell.CommandParameter.get -> object
~Microsoft.Maui.Controls.TextCell.CommandParameter.set -> void
~Microsoft.Maui.Controls.TextCell.Detail.get -> string
~Microsoft.Maui.Controls.TextCell.Detail.set -> void
~Microsoft.Maui.Controls.TextCell.DetailColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.TextCell.DetailColor.set -> void
~Microsoft.Maui.Controls.TextCell.Text.get -> string
~Microsoft.Maui.Controls.TextCell.Text.set -> void
~Microsoft.Maui.Controls.TextCell.TextColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.TextCell.TextColor.set -> void
~Microsoft.Maui.Controls.TextChangedEventArgs.NewTextValue.get -> string
~Microsoft.Maui.Controls.TextChangedEventArgs.OldTextValue.get -> string
~Microsoft.Maui.Controls.TextChangedEventArgs.TextChangedEventArgs(string oldTextValue, string newTextValue) -> void
~Microsoft.Maui.Controls.TimePicker.FontFamily.get -> string
~Microsoft.Maui.Controls.TimePicker.FontFamily.set -> void
~Microsoft.Maui.Controls.TimePicker.Format.get -> string
~Microsoft.Maui.Controls.TimePicker.Format.set -> void
~Microsoft.Maui.Controls.TimePicker.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.TimePicker>
~Microsoft.Maui.Controls.TimePicker.TextColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.TimePicker.TextColor.set -> void
~Microsoft.Maui.Controls.Toolbar.BackButtonTitle.get -> string
~Microsoft.Maui.Controls.Toolbar.BackButtonTitle.set -> void
~Microsoft.Maui.Controls.Toolbar.BarBackground.get -> Microsoft.Maui.Controls.Brush
~Microsoft.Maui.Controls.Toolbar.BarBackground.set -> void
~Microsoft.Maui.Controls.Toolbar.Handler.get -> Microsoft.Maui.IElementHandler
~Microsoft.Maui.Controls.Toolbar.Handler.set -> void
~Microsoft.Maui.Controls.Toolbar.Parent.get -> Microsoft.Maui.IElement
~Microsoft.Maui.Controls.Toolbar.TitleIcon.get -> Microsoft.Maui.Controls.ImageSource
~Microsoft.Maui.Controls.Toolbar.TitleIcon.set -> void
~Microsoft.Maui.Controls.Toolbar.Toolbar(Microsoft.Maui.IElement parent) -> void
~Microsoft.Maui.Controls.Toolbar.ToolbarItems.get -> System.Collections.Generic.IEnumerable<Microsoft.Maui.Controls.ToolbarItem>
~Microsoft.Maui.Controls.Toolbar.ToolbarItems.set -> void
~Microsoft.Maui.Controls.ToolbarItem.ToolbarItem(string name, string icon, System.Action activated, Microsoft.Maui.Controls.ToolbarItemOrder order = Microsoft.Maui.Controls.ToolbarItemOrder.Default, int priority = 0) -> void
~Microsoft.Maui.Controls.TouchEventArgs.Touches.get -> Microsoft.Maui.Graphics.PointF[]
~Microsoft.Maui.Controls.TouchEventArgs.TouchEventArgs(Microsoft.Maui.Graphics.PointF[] points, bool isInsideBounds) -> void
~Microsoft.Maui.Controls.Trigger.Property.get -> Microsoft.Maui.Controls.BindableProperty
~Microsoft.Maui.Controls.Trigger.Property.set -> void
~Microsoft.Maui.Controls.Trigger.Setters.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.Setter>
~Microsoft.Maui.Controls.Trigger.Trigger(System.Type targetType) -> void
~Microsoft.Maui.Controls.Trigger.Value.get -> object
~Microsoft.Maui.Controls.Trigger.Value.set -> void
~Microsoft.Maui.Controls.TriggerAction<T>
~Microsoft.Maui.Controls.TriggerBase.EnterActions.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.TriggerAction>
~Microsoft.Maui.Controls.TriggerBase.ExitActions.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.TriggerAction>
~Microsoft.Maui.Controls.TriggerBase.TargetType.get -> System.Type
~Microsoft.Maui.Controls.UnsolvableConstraintsException.UnsolvableConstraintsException(string message, System.Exception innerException) -> void
~Microsoft.Maui.Controls.UnsolvableConstraintsException.UnsolvableConstraintsException(string message) -> void
~Microsoft.Maui.Controls.UnsolvableConstraintsException.UnsolvableConstraintsException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
~Microsoft.Maui.Controls.UriImageSource.Uri.get -> System.Uri
~Microsoft.Maui.Controls.UriImageSource.Uri.set -> void
~Microsoft.Maui.Controls.UrlWebViewSource.Url.get -> string
~Microsoft.Maui.Controls.UrlWebViewSource.Url.set -> void
~Microsoft.Maui.Controls.View.GestureController.get -> Microsoft.Maui.Controls.Internals.IGestureController
~Microsoft.Maui.Controls.View.GestureRecognizers.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.IGestureRecognizer>
~Microsoft.Maui.Controls.ViewCell.View.get -> Microsoft.Maui.Controls.View
~Microsoft.Maui.Controls.ViewCell.View.set -> void
~Microsoft.Maui.Controls.VisualAttribute.VisualAttribute(string key, System.Type visual) -> void
~Microsoft.Maui.Controls.VisualElement.Background.get -> Microsoft.Maui.Controls.Brush
~Microsoft.Maui.Controls.VisualElement.Background.set -> void
~Microsoft.Maui.Controls.VisualElement.BackgroundColor.get -> Microsoft.Maui.Graphics.Color
~Microsoft.Maui.Controls.VisualElement.BackgroundColor.set -> void
~Microsoft.Maui.Controls.VisualElement.Behaviors.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.Behavior>
~Microsoft.Maui.Controls.VisualElement.Clip.get -> Microsoft.Maui.Controls.Shapes.Geometry
~Microsoft.Maui.Controls.VisualElement.Clip.set -> void
~Microsoft.Maui.Controls.VisualElement.Resources.get -> Microsoft.Maui.Controls.ResourceDictionary
~Microsoft.Maui.Controls.VisualElement.Resources.set -> void
~Microsoft.Maui.Controls.VisualElement.Triggers.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.TriggerBase>
~Microsoft.Maui.Controls.VisualElement.Visual.get -> Microsoft.Maui.Controls.IVisual
~Microsoft.Maui.Controls.VisualElement.Visual.set -> void
~Microsoft.Maui.Controls.VisualElement.Window.get -> Microsoft.Maui.Controls.Window
~Microsoft.Maui.Controls.VisualState.Name.get -> string
~Microsoft.Maui.Controls.VisualState.Name.set -> void
~Microsoft.Maui.Controls.VisualState.Setters.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.Setter>
~Microsoft.Maui.Controls.VisualState.StateTriggers.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.StateTriggerBase>
~Microsoft.Maui.Controls.VisualState.TargetType.get -> System.Type
~Microsoft.Maui.Controls.VisualState.TargetType.set -> void
~Microsoft.Maui.Controls.VisualStateGroup.CurrentState.get -> Microsoft.Maui.Controls.VisualState
~Microsoft.Maui.Controls.VisualStateGroup.Name.get -> string
~Microsoft.Maui.Controls.VisualStateGroup.Name.set -> void
~Microsoft.Maui.Controls.VisualStateGroup.States.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.VisualState>
~Microsoft.Maui.Controls.VisualStateGroup.TargetType.get -> System.Type
~Microsoft.Maui.Controls.VisualStateGroup.TargetType.set -> void
~Microsoft.Maui.Controls.VisualStateGroupList.Add(Microsoft.Maui.Controls.VisualStateGroup item) -> void
~Microsoft.Maui.Controls.VisualStateGroupList.Contains(Microsoft.Maui.Controls.VisualStateGroup item) -> bool
~Microsoft.Maui.Controls.VisualStateGroupList.CopyTo(Microsoft.Maui.Controls.VisualStateGroup[] array, int arrayIndex) -> void
~Microsoft.Maui.Controls.VisualStateGroupList.GetEnumerator() -> System.Collections.Generic.IEnumerator<Microsoft.Maui.Controls.VisualStateGroup>
~Microsoft.Maui.Controls.VisualStateGroupList.IndexOf(Microsoft.Maui.Controls.VisualStateGroup item) -> int
~Microsoft.Maui.Controls.VisualStateGroupList.Insert(int index, Microsoft.Maui.Controls.VisualStateGroup item) -> void
~Microsoft.Maui.Controls.VisualStateGroupList.Remove(Microsoft.Maui.Controls.VisualStateGroup item) -> bool
~Microsoft.Maui.Controls.VisualStateGroupList.this[int index].get -> Microsoft.Maui.Controls.VisualStateGroup
~Microsoft.Maui.Controls.VisualStateGroupList.this[int index].set -> void
~Microsoft.Maui.Controls.WebNavigatedEventArgs.WebNavigatedEventArgs(Microsoft.Maui.WebNavigationEvent navigationEvent, Microsoft.Maui.Controls.WebViewSource source, string url, Microsoft.Maui.WebNavigationResult result) -> void
~Microsoft.Maui.Controls.WebNavigatingEventArgs.WebNavigatingEventArgs(Microsoft.Maui.WebNavigationEvent navigationEvent, Microsoft.Maui.Controls.WebViewSource source, string url) -> void
~Microsoft.Maui.Controls.WebNavigationEventArgs.Source.get -> Microsoft.Maui.Controls.WebViewSource
~Microsoft.Maui.Controls.WebNavigationEventArgs.Url.get -> string
~Microsoft.Maui.Controls.WebNavigationEventArgs.WebNavigationEventArgs(Microsoft.Maui.WebNavigationEvent navigationEvent, Microsoft.Maui.Controls.WebViewSource source, string url) -> void
~Microsoft.Maui.Controls.WebView.Cookies.get -> System.Net.CookieContainer
~Microsoft.Maui.Controls.WebView.Cookies.set -> void
~Microsoft.Maui.Controls.WebView.Eval(string script) -> void
~Microsoft.Maui.Controls.WebView.EvaluateJavaScriptAsync(string script) -> System.Threading.Tasks.Task<string>
~Microsoft.Maui.Controls.WebView.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.WebView>
~Microsoft.Maui.Controls.WebView.OnSourceChanged(object sender, System.EventArgs e) -> void
~Microsoft.Maui.Controls.WebView.Source.get -> Microsoft.Maui.Controls.WebViewSource
~Microsoft.Maui.Controls.WebView.Source.set -> void
~Microsoft.Maui.Controls.WebView.UserAgent.get -> string
~Microsoft.Maui.Controls.WebView.UserAgent.set -> void
~Microsoft.Maui.Controls.Xaml.Diagnostics.BindingBaseErrorEventArgs.Binding.get -> Microsoft.Maui.Controls.BindingBase
~Microsoft.Maui.Controls.Xaml.Diagnostics.BindingBaseErrorEventArgs.ErrorCode.get -> string
~Microsoft.Maui.Controls.Xaml.Diagnostics.BindingBaseErrorEventArgs.Message.get -> string
~Microsoft.Maui.Controls.Xaml.Diagnostics.BindingBaseErrorEventArgs.MessageArgs.get -> object[]
~Microsoft.Maui.Controls.Xaml.Diagnostics.BindingBaseErrorEventArgs.XamlSourceInfo.get -> Microsoft.Maui.SourceInfo
~Microsoft.Maui.Controls.Xaml.Diagnostics.BindingErrorEventArgs.Source.get -> object
~Microsoft.Maui.Controls.Xaml.Diagnostics.BindingErrorEventArgs.Target.get -> Microsoft.Maui.Controls.BindableObject
~Microsoft.Maui.Controls.Xaml.Diagnostics.BindingErrorEventArgs.TargetProperty.get -> Microsoft.Maui.Controls.BindableProperty
~Microsoft.Maui.Controls.Xaml.IMarkupExtension.ProvideValue(System.IServiceProvider serviceProvider) -> object
~Microsoft.Maui.Controls.Xaml.IMarkupExtension<T>.ProvideValue(System.IServiceProvider serviceProvider) -> T
~Microsoft.Maui.Controls.Xaml.Internals.INativeBindingService.TrySetBinding(object target, Microsoft.Maui.Controls.BindableProperty property, Microsoft.Maui.Controls.BindingBase binding) -> bool
~Microsoft.Maui.Controls.Xaml.Internals.INativeBindingService.TrySetBinding(object target, string propertyName, Microsoft.Maui.Controls.BindingBase binding) -> bool
~Microsoft.Maui.Controls.Xaml.Internals.INativeBindingService.TrySetValue(object target, Microsoft.Maui.Controls.BindableProperty property, object value) -> bool
~Microsoft.Maui.Controls.Xaml.Internals.INativeValueConverterService.ConvertTo(object value, System.Type toType, out object platformValue) -> bool
~Microsoft.Maui.Controls.Xaml.IProvideValueTarget.TargetObject.get -> object
~Microsoft.Maui.Controls.Xaml.IProvideValueTarget.TargetProperty.get -> object
~Microsoft.Maui.Controls.Xaml.IReferenceProvider.FindByName(string name) -> object
~Microsoft.Maui.Controls.Xaml.IRootObjectProvider.RootObject.get -> object
~Microsoft.Maui.Controls.Xaml.IValueProvider.ProvideValue(System.IServiceProvider serviceProvider) -> object
~Microsoft.Maui.Controls.Xaml.IXamlTypeResolver.Resolve(string qualifiedTypeName, System.IServiceProvider serviceProvider = null) -> System.Type
~Microsoft.Maui.Controls.Xaml.IXamlTypeResolver.TryResolve(string qualifiedTypeName, out System.Type type) -> bool
~Microsoft.Maui.Controls.Xaml.IXmlLineInfoProvider.XmlLineInfo.get -> System.Xml.IXmlLineInfo
~Microsoft.Maui.Controls.Xaml.XamlParseException.XamlParseException(string message, System.Exception innerException) -> void
~Microsoft.Maui.Controls.Xaml.XamlParseException.XamlParseException(string message, System.Xml.IXmlLineInfo xmlInfo, System.Exception innerException = null) -> void
~Microsoft.Maui.Controls.Xaml.XamlParseException.XamlParseException(string message) -> void
~Microsoft.Maui.Controls.Xaml.XamlParseException.XamlParseException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) -> void
~Microsoft.Maui.Controls.Xaml.XamlParseException.XmlInfo.get -> System.Xml.IXmlLineInfo
~Microsoft.Maui.Controls.Xaml.XamlResourceIdAttribute.Path.get -> string
~Microsoft.Maui.Controls.Xaml.XamlResourceIdAttribute.Path.set -> void
~Microsoft.Maui.Controls.Xaml.XamlResourceIdAttribute.ResourceId.get -> string
~Microsoft.Maui.Controls.Xaml.XamlResourceIdAttribute.ResourceId.set -> void
~Microsoft.Maui.Controls.Xaml.XamlResourceIdAttribute.Type.get -> System.Type
~Microsoft.Maui.Controls.Xaml.XamlResourceIdAttribute.Type.set -> void
~Microsoft.Maui.Controls.Xaml.XamlResourceIdAttribute.XamlResourceIdAttribute(string resourceId, string path, System.Type type) -> void
~Microsoft.Maui.Controls.XmlnsDefinitionAttribute.AssemblyName.get -> string
~Microsoft.Maui.Controls.XmlnsDefinitionAttribute.AssemblyName.set -> void
~Microsoft.Maui.Controls.XmlnsDefinitionAttribute.ClrNamespace.get -> string
~Microsoft.Maui.Controls.XmlnsDefinitionAttribute.XmlNamespace.get -> string
~Microsoft.Maui.Controls.XmlnsDefinitionAttribute.XmlnsDefinitionAttribute(string xmlNamespace, string clrNamespace) -> void
~Microsoft.Maui.Controls.XmlnsPrefixAttribute.Prefix.get -> string
~Microsoft.Maui.Controls.XmlnsPrefixAttribute.XmlNamespace.get -> string
~Microsoft.Maui.Controls.XmlnsPrefixAttribute.XmlnsPrefixAttribute(string xmlNamespace, string prefix) -> void
~override Microsoft.Maui.Controls.AbsoluteLayout.CreateLayoutManager() -> Microsoft.Maui.Layouts.ILayoutManager
~override Microsoft.Maui.Controls.AbsoluteLayout.OnAdd(int index, Microsoft.Maui.IView view) -> void
~override Microsoft.Maui.Controls.AbsoluteLayout.OnInsert(int index, Microsoft.Maui.IView view) -> void
~override Microsoft.Maui.Controls.AbsoluteLayout.OnRemove(int index, Microsoft.Maui.IView view) -> void
~override Microsoft.Maui.Controls.AbsoluteLayout.OnUpdate(int index, Microsoft.Maui.IView view, Microsoft.Maui.IView oldView) -> void
~override Microsoft.Maui.Controls.Accelerator.Equals(object obj) -> bool
~override Microsoft.Maui.Controls.Accelerator.ToString() -> string
~override Microsoft.Maui.Controls.AcceleratorTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.AcceleratorTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.AcceleratorTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.AcceleratorTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.AppLinkEntry.ToString() -> string
~override Microsoft.Maui.Controls.BaseShellItem.OnPropertyChanged(string propertyName = null) -> void
~override Microsoft.Maui.Controls.Behavior<T>.OnAttachedTo(Microsoft.Maui.Controls.BindableObject bindable) -> void
~override Microsoft.Maui.Controls.Behavior<T>.OnDetachingFrom(Microsoft.Maui.Controls.BindableObject bindable) -> void
~override Microsoft.Maui.Controls.BindablePropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.BindablePropertyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.BindablePropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.BindablePropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.BoundsTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.BoundsTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.BoundsTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.BoundsTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.BrushTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.BrushTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.BrushTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.BrushTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.Button.ButtonContentLayout.ToString() -> string
~override Microsoft.Maui.Controls.Button.ButtonContentTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.Button.ButtonContentTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.Button.ButtonContentTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.Button.ButtonContentTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.Button.OnPropertyChanged(string propertyName = null) -> void
~override Microsoft.Maui.Controls.CarouselLayoutTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.CarouselLayoutTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.CarouselLayoutTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.CarouselLayoutTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.Cell.OnPropertyChanging(string propertyName = null) -> void
~override Microsoft.Maui.Controls.ColumnDefinitionCollectionTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.ColumnDefinitionCollectionTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.ColumnDefinitionCollectionTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.ColumnDefinitionCollectionTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.Compatibility.AbsoluteLayout.OnChildAdded(Microsoft.Maui.Controls.Element child) -> void
~override Microsoft.Maui.Controls.Compatibility.AbsoluteLayout.OnChildRemoved(Microsoft.Maui.Controls.Element child, int oldLogicalIndex) -> void
~override Microsoft.Maui.Controls.Compatibility.ConstraintTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.Compatibility.ConstraintTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.Compatibility.ConstraintTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.Compatibility.ConstraintTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.Compatibility.FlexLayout.OnAdded(Microsoft.Maui.Controls.View view) -> void
~override Microsoft.Maui.Controls.Compatibility.FlexLayout.OnRemoved(Microsoft.Maui.Controls.View view) -> void
~override Microsoft.Maui.Controls.Compatibility.Grid.OnAdded(Microsoft.Maui.Controls.View view) -> void
~override Microsoft.Maui.Controls.Compatibility.Grid.OnRemoved(Microsoft.Maui.Controls.View view) -> void
~override Microsoft.Maui.Controls.Compatibility.Layout<T>.OnChildAdded(Microsoft.Maui.Controls.Element child) -> void
~override Microsoft.Maui.Controls.Compatibility.Layout<T>.OnChildRemoved(Microsoft.Maui.Controls.Element child, int oldLogicalIndex) -> void
~override Microsoft.Maui.Controls.Compatibility.RelativeLayout.OnAdded(Microsoft.Maui.Controls.View view) -> void
~override Microsoft.Maui.Controls.Compatibility.RelativeLayout.OnRemoved(Microsoft.Maui.Controls.View view) -> void
~override Microsoft.Maui.Controls.DoubleCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.DoubleCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.DoubleCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.DoubleCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.Editor.OnTextChanged(string oldValue, string newValue) -> void
~override Microsoft.Maui.Controls.Element.OnPropertyChanged(string propertyName = null) -> void
~override Microsoft.Maui.Controls.FileImageSource.Cancel() -> System.Threading.Tasks.Task<bool>
~override Microsoft.Maui.Controls.FileImageSource.ToString() -> string
~override Microsoft.Maui.Controls.FileImageSourceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.FileImageSourceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.FileImageSourceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.FileImageSourceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.FlexLayout.CreateLayoutManager() -> Microsoft.Maui.Layouts.ILayoutManager
~override Microsoft.Maui.Controls.FlexLayout.OnAdd(int index, Microsoft.Maui.IView view) -> void
~override Microsoft.Maui.Controls.FlexLayout.OnInsert(int index, Microsoft.Maui.IView view) -> void
~override Microsoft.Maui.Controls.FlexLayout.OnRemove(int index, Microsoft.Maui.IView view) -> void
~override Microsoft.Maui.Controls.FlexLayout.OnUpdate(int index, Microsoft.Maui.IView view, Microsoft.Maui.IView oldView) -> void
~override Microsoft.Maui.Controls.FlowDirectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.FlowDirectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.FlowDirectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.FlowDirectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.FontAttributesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.FontAttributesConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.FontAttributesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.FontAttributesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.FontSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.FontSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.FontSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.FontSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.FormattedString.ToString() -> string
~override Microsoft.Maui.Controls.GradientStop.Equals(object obj) -> bool
~override Microsoft.Maui.Controls.Grid.CreateLayoutManager() -> Microsoft.Maui.Layouts.ILayoutManager
~override Microsoft.Maui.Controls.Grid.OnAdd(int index, Microsoft.Maui.IView view) -> void
~override Microsoft.Maui.Controls.Grid.OnInsert(int index, Microsoft.Maui.IView view) -> void
~override Microsoft.Maui.Controls.Grid.OnRemove(int index, Microsoft.Maui.IView view) -> void
~override Microsoft.Maui.Controls.Grid.OnUpdate(int index, Microsoft.Maui.IView view, Microsoft.Maui.IView oldView) -> void
~override Microsoft.Maui.Controls.GridLengthTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.GridLengthTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.GridLengthTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.GridLengthTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.Handlers.Compatibility.CellRenderer.CreatePlatformElement() -> Android.Views.View
~override Microsoft.Maui.Controls.Handlers.Compatibility.CellRenderer.DisconnectHandler(Android.Views.View platformView) -> void
~override Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellEditText.OnKeyPreIme(Android.Views.Keycode keyCode, Android.Views.KeyEvent e) -> bool
~override Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellRenderer.GetCellCore(Microsoft.Maui.Controls.Cell item, Android.Views.View convertView, Android.Views.ViewGroup parent, Android.Content.Context context) -> Android.Views.View
~override Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellRenderer.OnCellPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e) -> void
~override Microsoft.Maui.Controls.Handlers.Compatibility.ImageCellRenderer.GetCellCore(Microsoft.Maui.Controls.Cell item, Android.Views.View convertView, Android.Views.ViewGroup parent, Android.Content.Context context) -> Android.Views.View
~override Microsoft.Maui.Controls.Handlers.Compatibility.ImageCellRenderer.OnCellPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs args) -> void
~override Microsoft.Maui.Controls.Handlers.Compatibility.ListViewRenderer.CreateNativeControl() -> Android.Widget.ListView
~override Microsoft.Maui.Controls.Handlers.Compatibility.ListViewRenderer.OnElementChanged(Microsoft.Maui.Controls.Platform.ElementChangedEventArgs<Microsoft.Maui.Controls.ListView> e) -> void
~override Microsoft.Maui.Controls.Handlers.Compatibility.ListViewRenderer.OnElementPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e) -> void
~override Microsoft.Maui.Controls.Handlers.Compatibility.SwitchCellRenderer.GetCellCore(Microsoft.Maui.Controls.Cell item, Android.Views.View convertView, Android.Views.ViewGroup parent, Android.Content.Context context) -> Android.Views.View
~override Microsoft.Maui.Controls.Handlers.Compatibility.SwitchCellRenderer.OnCellPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs args) -> void
~override Microsoft.Maui.Controls.Handlers.Compatibility.TableViewModelRenderer.GetCellForPosition(int position) -> Microsoft.Maui.Controls.Cell
~override Microsoft.Maui.Controls.Handlers.Compatibility.TableViewModelRenderer.GetView(int position, Android.Views.View convertView, Android.Views.ViewGroup parent) -> Android.Views.View
~override Microsoft.Maui.Controls.Handlers.Compatibility.TableViewModelRenderer.HandleItemClick(Android.Widget.AdapterView parent, Android.Views.View nview, int position, long id) -> void
~override Microsoft.Maui.Controls.Handlers.Compatibility.TableViewModelRenderer.this[int position].get -> object
~override Microsoft.Maui.Controls.Handlers.Compatibility.TableViewRenderer.CreateNativeControl() -> Android.Widget.ListView
~override Microsoft.Maui.Controls.Handlers.Compatibility.TableViewRenderer.OnElementChanged(Microsoft.Maui.Controls.Platform.ElementChangedEventArgs<Microsoft.Maui.Controls.TableView> e) -> void
~override Microsoft.Maui.Controls.Handlers.Compatibility.TextCellRenderer.GetCellCore(Microsoft.Maui.Controls.Cell item, Android.Views.View convertView, Android.Views.ViewGroup parent, Android.Content.Context context) -> Android.Views.View
~override Microsoft.Maui.Controls.Handlers.Compatibility.TextCellRenderer.OnCellPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs args) -> void
~override Microsoft.Maui.Controls.Handlers.Compatibility.ViewCellRenderer.DisconnectHandler(Android.Views.View platformView) -> void
~override Microsoft.Maui.Controls.Handlers.Compatibility.ViewCellRenderer.GetCellCore(Microsoft.Maui.Controls.Cell item, Android.Views.View convertView, Android.Views.ViewGroup parent, Android.Content.Context context) -> Android.Views.View
~override Microsoft.Maui.Controls.Handlers.Items.CarouselViewAdapter<TItemsView, TItemsViewSource>.OnBindViewHolder(AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder holder, int position) -> void
~override Microsoft.Maui.Controls.Handlers.Items.CarouselViewHandler.CreateAdapter() -> Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<Microsoft.Maui.Controls.CarouselView, Microsoft.Maui.Controls.Handlers.Items.IItemsViewSource>
~override Microsoft.Maui.Controls.Handlers.Items.CarouselViewHandler.CreatePlatformView() -> AndroidX.RecyclerView.Widget.RecyclerView
~override Microsoft.Maui.Controls.Handlers.Items.CarouselViewHandler.GetItemsLayout() -> Microsoft.Maui.Controls.IItemsLayout
~override Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.OnBindViewHolder(AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder holder, int position) -> void
~override Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.OnCreateViewHolder(Android.Views.ViewGroup parent, int viewType) -> AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder
~override Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.OnViewRecycled(Java.Lang.Object holder) -> void
~override Microsoft.Maui.Controls.Handlers.Items.GroupableItemsViewAdapter<TItemsView, TItemsViewSource>.OnBindViewHolder(AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder holder, int position) -> void
~override Microsoft.Maui.Controls.Handlers.Items.GroupableItemsViewAdapter<TItemsView, TItemsViewSource>.OnCreateViewHolder(Android.Views.ViewGroup parent, int viewType) -> AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder
~override Microsoft.Maui.Controls.Handlers.Items.GroupableItemsViewHandler<TItemsView>.CreatePlatformView() -> AndroidX.RecyclerView.Widget.RecyclerView
~override Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<TItemsView, TItemsViewSource>.OnBindViewHolder(AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder holder, int position) -> void
~override Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<TItemsView, TItemsViewSource>.OnCreateViewHolder(Android.Views.ViewGroup parent, int viewType) -> AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder
~override Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<TItemsView, TItemsViewSource>.OnViewRecycled(Java.Lang.Object holder) -> void
~override Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>.ConnectHandler(AndroidX.RecyclerView.Widget.RecyclerView platformView) -> void
~override Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>.CreatePlatformView() -> AndroidX.RecyclerView.Widget.RecyclerView
~override Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>.DisconnectHandler(AndroidX.RecyclerView.Widget.RecyclerView platformView) -> void
~override Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView.CreateScrollListener() -> Microsoft.Maui.Controls.Handlers.Items.RecyclerViewScrollListener<Microsoft.Maui.Controls.CarouselView, Microsoft.Maui.Controls.Handlers.Items.IItemsViewSource>
~override Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView.CreateSpacingDecoration(Microsoft.Maui.Controls.IItemsLayout itemsLayout) -> AndroidX.RecyclerView.Widget.RecyclerView.ItemDecoration
~override Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView.DetermineTargetPosition(Microsoft.Maui.Controls.ScrollToRequestEventArgs args) -> int
~override Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView.OnInterceptTouchEvent(Android.Views.MotionEvent ev) -> bool
~override Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView.OnTouchEvent(Android.Views.MotionEvent e) -> bool
~override Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView.ScrollTo(Microsoft.Maui.Controls.ScrollToRequestEventArgs args) -> void
~override Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView.SetUpNewElement(Microsoft.Maui.Controls.CarouselView newElement) -> void
~override Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView.TearDownOldElement(Microsoft.Maui.Controls.CarouselView oldElement) -> void
~override Microsoft.Maui.Controls.Handlers.Items.RecyclerViewScrollListener<TItemsView, TItemsViewSource>.OnScrolled(AndroidX.RecyclerView.Widget.RecyclerView recyclerView, int dx, int dy) -> void
~override Microsoft.Maui.Controls.Handlers.Items.ReorderableItemsViewHandler<TItemsView>.CreateAdapter() -> Microsoft.Maui.Controls.Handlers.Items.ReorderableItemsViewAdapter<TItemsView, Microsoft.Maui.Controls.Handlers.Items.IGroupableItemsViewSource>
~override Microsoft.Maui.Controls.Handlers.Items.SelectableItemsViewAdapter<TItemsView, TItemsSource>.OnBindViewHolder(AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder holder, int position) -> void
~override Microsoft.Maui.Controls.Handlers.Items.SelectableItemsViewAdapter<TItemsView, TItemsSource>.OnViewRecycled(Java.Lang.Object holder) -> void
~override Microsoft.Maui.Controls.Handlers.Items.SelectableItemsViewHandler<TItemsView>.CreateAdapter() -> Microsoft.Maui.Controls.Handlers.Items.SelectableItemsViewAdapter<TItemsView, Microsoft.Maui.Controls.Handlers.Items.IItemsViewSource>
~override Microsoft.Maui.Controls.Handlers.Items.SimpleItemTouchHelperCallback.GetMovementFlags(AndroidX.RecyclerView.Widget.RecyclerView recyclerView, AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder viewHolder) -> int
~override Microsoft.Maui.Controls.Handlers.Items.SimpleItemTouchHelperCallback.OnMove(AndroidX.RecyclerView.Widget.RecyclerView recyclerView, AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder viewHolder, AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder target) -> bool
~override Microsoft.Maui.Controls.Handlers.Items.SimpleItemTouchHelperCallback.OnSwiped(AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder viewHolder, int direction) -> void
~override Microsoft.Maui.Controls.Handlers.Items.SpacingItemDecoration.GetItemOffsets(Android.Graphics.Rect outRect, Android.Views.View view, AndroidX.RecyclerView.Widget.RecyclerView parent, AndroidX.RecyclerView.Widget.RecyclerView.State state) -> void
~override Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewAdapter<TItemsView, TItemsViewSource>.BindTemplatedItemViewHolder(Microsoft.Maui.Controls.Handlers.Items.TemplatedItemViewHolder templatedItemViewHolder, object context) -> void
~override Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewAdapter<TItemsView, TItemsViewSource>.ItemsViewPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs property) -> void
~override Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewAdapter<TItemsView, TItemsViewSource>.OnBindViewHolder(AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder holder, int position) -> void
~override Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewAdapter<TItemsView, TItemsViewSource>.OnCreateViewHolder(Android.Views.ViewGroup parent, int viewType) -> AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder
~override Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewHandler<TItemsView>.CreateAdapter() -> Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewAdapter<TItemsView, Microsoft.Maui.Controls.Handlers.Items.IItemsViewSource>
~override Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewHandler<TItemsView>.GetItemsLayout() -> Microsoft.Maui.Controls.IItemsLayout
~override Microsoft.Maui.Controls.Handlers.PolygonHandler.ConnectHandler(Microsoft.Maui.Platform.MauiShapeView nativeView) -> void
~override Microsoft.Maui.Controls.Handlers.PolygonHandler.DisconnectHandler(Microsoft.Maui.Platform.MauiShapeView nativeView) -> void
~override Microsoft.Maui.Controls.Handlers.PolylineHandler.ConnectHandler(Microsoft.Maui.Platform.MauiShapeView nativeView) -> void
~override Microsoft.Maui.Controls.Handlers.PolylineHandler.DisconnectHandler(Microsoft.Maui.Platform.MauiShapeView nativeView) -> void
~override Microsoft.Maui.Controls.HorizontalStackLayout.CreateLayoutManager() -> Microsoft.Maui.Layouts.ILayoutManager
~override Microsoft.Maui.Controls.HtmlWebViewSource.Load(Microsoft.Maui.IWebViewDelegate renderer) -> void
~override Microsoft.Maui.Controls.ImageButton.OnPropertyChanged(string propertyName = null) -> void
~override Microsoft.Maui.Controls.ImageSourceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.ImageSourceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.ImageSourceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.ImageSourceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.ItemsLayoutTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.ItemsLayoutTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.ItemsLayoutTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.ItemsLayoutTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.Label.GetChildElements(Microsoft.Maui.Graphics.Point point) -> System.Collections.Generic.IList<Microsoft.Maui.Controls.GestureElement>
~override Microsoft.Maui.Controls.LayoutOptions.Equals(object obj) -> bool
~override Microsoft.Maui.Controls.LayoutOptionsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.LayoutOptionsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.LayoutOptionsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.LayoutOptionsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.LayoutOptionsConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext context) -> System.ComponentModel.TypeConverter.StandardValuesCollection
~override Microsoft.Maui.Controls.LayoutOptionsConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext context) -> bool
~override Microsoft.Maui.Controls.LayoutOptionsConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext context) -> bool
~override Microsoft.Maui.Controls.ListStringTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.ListStringTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.ListStringTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.ListStringTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.ListView.CreateDefault(object item) -> Microsoft.Maui.Controls.Cell
~override Microsoft.Maui.Controls.ListView.SetupContent(Microsoft.Maui.Controls.Cell content, int index) -> void
~override Microsoft.Maui.Controls.ListView.UnhookContent(Microsoft.Maui.Controls.Cell content) -> void
~override Microsoft.Maui.Controls.ListView.ValidateItemTemplate(Microsoft.Maui.Controls.DataTemplate template) -> bool
~override Microsoft.Maui.Controls.MultiPage<T>.OnChildAdded(Microsoft.Maui.Controls.Element child) -> void
~override Microsoft.Maui.Controls.MultiPage<T>.OnPropertyChanged(string propertyName = null) -> void
~override Microsoft.Maui.Controls.Platform.ColorChangeRevealDrawable.Draw(Android.Graphics.Canvas canvas) -> void
~override Microsoft.Maui.Controls.Platform.Compatibility.CustomFrameLayout.OnApplyWindowInsets(Android.Views.WindowInsets insets) -> Android.Views.WindowInsets
~override Microsoft.Maui.Controls.Platform.Compatibility.ShellContentFragment.OnCreateAnimation(int transit, bool enter, int nextAnim) -> Android.Views.Animations.Animation
~override Microsoft.Maui.Controls.Platform.Compatibility.ShellContentFragment.OnCreateView(Android.Views.LayoutInflater inflater, Android.Views.ViewGroup container, Android.OS.Bundle savedInstanceState) -> Android.Views.View
~override Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.OnBindViewHolder(AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder holder, int position) -> void
~override Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.OnCreateViewHolder(Android.Views.ViewGroup parent, int viewType) -> AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder
~override Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.OnViewRecycled(Java.Lang.Object holder) -> void
~override Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRenderer.DrawChild(Android.Graphics.Canvas canvas, Android.Views.View child, long drawingTime) -> bool
~override Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRenderer.OnInterceptTouchEvent(Android.Views.MotionEvent ev) -> bool
~override Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.GetNavigationTarget() -> Android.Views.ViewGroup
~override Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.OnCreateView(Android.Views.LayoutInflater inflater, Android.Views.ViewGroup container, Android.OS.Bundle savedInstanceState) -> Android.Views.View
~override Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.OnDisplayedPageChanged(Microsoft.Maui.Controls.Page newPage, Microsoft.Maui.Controls.Page oldPage) -> void
~override Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.OnShellItemsChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) -> void
~override Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.OnShellSectionPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e) -> void
~override Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchViewAdapter.GetItem(int position) -> Java.Lang.Object
~override Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchViewAdapter.GetView(int position, Android.Views.View convertView, Android.Views.ViewGroup parent) -> Android.Views.View
~override Microsoft.Maui.Controls.Platform.Compatibility.ShellSectionRenderer.OnCreateView(Android.Views.LayoutInflater inflater, Android.Views.ViewGroup container, Android.OS.Bundle savedInstanceState) -> Android.Views.View
~override Microsoft.Maui.Controls.Platform.GenericAnimatorListener.OnAnimationCancel(Android.Animation.Animator animation) -> void
~override Microsoft.Maui.Controls.Platform.GenericAnimatorListener.OnAnimationEnd(Android.Animation.Animator animation) -> void
~override Microsoft.Maui.Controls.Platform.GenericAnimatorListener.OnAnimationRepeat(Android.Animation.Animator animation) -> void
~override Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.OnDraw(Android.Graphics.Drawables.Shapes.Shape shape, Android.Graphics.Canvas canvas, Android.Graphics.Paint paint) -> void
~override Microsoft.Maui.Controls.ReferenceTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.ReferenceTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.ReferenceTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.ReferenceTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.RefreshView.OnPropertyChanged(string propertyName = null) -> void
~override Microsoft.Maui.Controls.Region.Equals(object obj) -> bool
~override Microsoft.Maui.Controls.ResourceDictionary.RDSourceTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.ResourceDictionary.RDSourceTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.ResourceDictionary.RDSourceTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.ResourceDictionary.RDSourceTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.RowDefinitionCollectionTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.RowDefinitionCollectionTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.RowDefinitionCollectionTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.RowDefinitionCollectionTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.Shapes.Ellipse.GetPath() -> Microsoft.Maui.Graphics.PathF
~override Microsoft.Maui.Controls.Shapes.EllipseGeometry.AppendPath(Microsoft.Maui.Graphics.PathF path) -> void
~override Microsoft.Maui.Controls.Shapes.GeometryGroup.AppendPath(Microsoft.Maui.Graphics.PathF path) -> void
~override Microsoft.Maui.Controls.Shapes.Line.GetPath() -> Microsoft.Maui.Graphics.PathF
~override Microsoft.Maui.Controls.Shapes.LineGeometry.AppendPath(Microsoft.Maui.Graphics.PathF path) -> void
~override Microsoft.Maui.Controls.Shapes.Matrix.Equals(object obj) -> bool
~override Microsoft.Maui.Controls.Shapes.MatrixTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.Shapes.MatrixTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.Shapes.MatrixTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.Shapes.MatrixTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.Shapes.Path.GetPath() -> Microsoft.Maui.Graphics.PathF
~override Microsoft.Maui.Controls.Shapes.PathFigureCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.Shapes.PathFigureCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.Shapes.PathFigureCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.Shapes.PathFigureCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.Shapes.PathGeometry.AppendPath(Microsoft.Maui.Graphics.PathF path) -> void
~override Microsoft.Maui.Controls.Shapes.PathGeometryConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.Shapes.PathGeometryConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.Shapes.PathGeometryConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.Shapes.PathGeometryConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.Shapes.PointCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.Shapes.PointCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.Shapes.PointCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.Shapes.PointCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.Shapes.Polygon.GetPath() -> Microsoft.Maui.Graphics.PathF
~override Microsoft.Maui.Controls.Shapes.Polyline.GetPath() -> Microsoft.Maui.Graphics.PathF
~override Microsoft.Maui.Controls.Shapes.Rectangle.GetPath() -> Microsoft.Maui.Graphics.PathF
~override Microsoft.Maui.Controls.Shapes.RectangleGeometry.AppendPath(Microsoft.Maui.Graphics.PathF path) -> void
~override Microsoft.Maui.Controls.Shapes.RoundRectangle.GetPath() -> Microsoft.Maui.Graphics.PathF
~override Microsoft.Maui.Controls.Shapes.RoundRectangleGeometry.AppendPath(Microsoft.Maui.Graphics.PathF path) -> void
~override Microsoft.Maui.Controls.Shapes.StrokeShapeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.Shapes.StrokeShapeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.Shapes.TransformTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.Shapes.TransformTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.Shapes.TransformTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.Shapes.TransformTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.Shell.OnPropertyChanged(string propertyName = null) -> void
~override Microsoft.Maui.Controls.ShellAppearance.Equals(object obj) -> bool
~override Microsoft.Maui.Controls.ShellContent.OnChildAdded(Microsoft.Maui.Controls.Element child) -> void
~override Microsoft.Maui.Controls.ShellContent.OnChildRemoved(Microsoft.Maui.Controls.Element child, int oldLogicalIndex) -> void
~override Microsoft.Maui.Controls.ShellItem.OnChildAdded(Microsoft.Maui.Controls.Element child) -> void
~override Microsoft.Maui.Controls.ShellItem.OnChildRemoved(Microsoft.Maui.Controls.Element child, int oldLogicalIndex) -> void
~override Microsoft.Maui.Controls.ShellSection.OnChildAdded(Microsoft.Maui.Controls.Element child) -> void
~override Microsoft.Maui.Controls.ShellSection.OnChildRemoved(Microsoft.Maui.Controls.Element child, int oldLogicalIndex) -> void
~override Microsoft.Maui.Controls.SolidColorBrush.Equals(object obj) -> bool
~override Microsoft.Maui.Controls.StackLayout.CreateLayoutManager() -> Microsoft.Maui.Layouts.ILayoutManager
~override Microsoft.Maui.Controls.StreamImageSource.OnPropertyChanged(string propertyName) -> void
~override Microsoft.Maui.Controls.Switch.OnPropertyChanged(string propertyName = null) -> void
~override Microsoft.Maui.Controls.TabbedPage.CreateDefault(object item) -> Microsoft.Maui.Controls.Page
~override Microsoft.Maui.Controls.TemplatedPage.OnChildRemoved(Microsoft.Maui.Controls.Element child, int oldLogicalIndex) -> void
~override Microsoft.Maui.Controls.TemplatedView.OnChildRemoved(Microsoft.Maui.Controls.Element child, int oldLogicalIndex) -> void
~override Microsoft.Maui.Controls.TextAlignmentConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.TextAlignmentConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.TextAlignmentConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.TextAlignmentConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.TextDecorationConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.TextDecorationConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.TextDecorationConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.TextDecorationConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.TriggerAction<T>.Invoke(object sender) -> void
~override Microsoft.Maui.Controls.TypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.TypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.TypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.TypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.UriImageSource.ToString() -> string
~override Microsoft.Maui.Controls.UriTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.UriTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.UriTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.UriTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.UrlWebViewSource.Load(Microsoft.Maui.IWebViewDelegate renderer) -> void
~override Microsoft.Maui.Controls.VerticalStackLayout.CreateLayoutManager() -> Microsoft.Maui.Layouts.ILayoutManager
~override Microsoft.Maui.Controls.VisualElement.OnChildAdded(Microsoft.Maui.Controls.Element child) -> void
~override Microsoft.Maui.Controls.VisualElement.OnChildRemoved(Microsoft.Maui.Controls.Element child, int oldLogicalIndex) -> void
~override Microsoft.Maui.Controls.VisualElement.VisibilityConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.VisualElement.VisibilityConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.VisualElement.VisibilityConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.VisualElement.VisibilityConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.VisualState.Equals(object obj) -> bool
~override Microsoft.Maui.Controls.VisualStateGroup.Equals(object obj) -> bool
~override Microsoft.Maui.Controls.VisualStateGroupList.Equals(object obj) -> bool
~override Microsoft.Maui.Controls.VisualTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.VisualTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.VisualTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.VisualTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Controls.VisualTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext context) -> System.ComponentModel.TypeConverter.StandardValuesCollection
~override Microsoft.Maui.Controls.VisualTypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext context) -> bool
~override Microsoft.Maui.Controls.VisualTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext context) -> bool
~override Microsoft.Maui.Controls.WebView.OnPropertyChanged(string propertyName) -> void
~override Microsoft.Maui.Controls.WebViewSourceTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) -> bool
~override Microsoft.Maui.Controls.WebViewSourceTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) -> bool
~override Microsoft.Maui.Controls.WebViewSourceTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) -> object
~override Microsoft.Maui.Controls.WebViewSourceTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) -> object
~override Microsoft.Maui.Foldable.FoldEventArgs.ToString() -> string
~readonly Microsoft.Maui.Controls.Handlers.Compatibility.TableViewModelRenderer.Context -> Android.Content.Context
~readonly Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.ItemsView -> Microsoft.Maui.Controls.ItemsView
~readonly Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<TItemsView, TItemsViewSource>.ItemsView -> TItemsView
~static Microsoft.Maui.Controls.AbsoluteLayout.GetLayoutBounds(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.Graphics.Rect
~static Microsoft.Maui.Controls.AbsoluteLayout.GetLayoutFlags(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.Layouts.AbsoluteLayoutFlags
~static Microsoft.Maui.Controls.AbsoluteLayout.SetLayoutBounds(Microsoft.Maui.Controls.BindableObject bindable, Microsoft.Maui.Graphics.Rect bounds) -> void
~static Microsoft.Maui.Controls.AbsoluteLayout.SetLayoutFlags(Microsoft.Maui.Controls.BindableObject bindable, Microsoft.Maui.Layouts.AbsoluteLayoutFlags flags) -> void
~static Microsoft.Maui.Controls.Accelerator.FromString(string text) -> Microsoft.Maui.Controls.Accelerator
~static Microsoft.Maui.Controls.Accelerator.implicit operator Microsoft.Maui.Controls.Accelerator(string accelerator) -> Microsoft.Maui.Controls.Accelerator
~static Microsoft.Maui.Controls.AnimationExtensions.AbortAnimation(this Microsoft.Maui.Controls.IAnimatable self, string handle) -> bool
~static Microsoft.Maui.Controls.AnimationExtensions.Add(this Microsoft.Maui.Animations.IAnimationManager animationManager, System.Action<double> step) -> int
~static Microsoft.Maui.Controls.AnimationExtensions.Animate(this Microsoft.Maui.Controls.IAnimatable self, string name, Microsoft.Maui.Controls.Animation animation, uint rate = 16, uint length = 250, Microsoft.Maui.Easing easing = null, System.Action<double, bool> finished = null, System.Func<bool> repeat = null) -> void
~static Microsoft.Maui.Controls.AnimationExtensions.Animate(this Microsoft.Maui.Controls.IAnimatable self, string name, System.Action<double> callback, double start, double end, uint rate = 16, uint length = 250, Microsoft.Maui.Easing easing = null, System.Action<double, bool> finished = null, System.Func<bool> repeat = null) -> void
~static Microsoft.Maui.Controls.AnimationExtensions.Animate(this Microsoft.Maui.Controls.IAnimatable self, string name, System.Action<double> callback, uint rate = 16, uint length = 250, Microsoft.Maui.Easing easing = null, System.Action<double, bool> finished = null, System.Func<bool> repeat = null) -> void
~static Microsoft.Maui.Controls.AnimationExtensions.Animate<T>(this Microsoft.Maui.Controls.IAnimatable self, string name, System.Func<double, T> transform, System.Action<T> callback, uint rate = 16, uint length = 250, Microsoft.Maui.Easing easing = null, System.Action<T, bool> finished = null, System.Func<bool> repeat = null, Microsoft.Maui.Animations.IAnimationManager animationManager = null) -> void
~static Microsoft.Maui.Controls.AnimationExtensions.AnimateKinetic(this Microsoft.Maui.Controls.IAnimatable self, string name, System.Func<double, double, bool> callback, double velocity, double drag, System.Action finished = null, Microsoft.Maui.Animations.IAnimationManager animationManager = null) -> void
~static Microsoft.Maui.Controls.AnimationExtensions.AnimationIsRunning(this Microsoft.Maui.Controls.IAnimatable self, string handle) -> bool
~static Microsoft.Maui.Controls.AnimationExtensions.Batch(this Microsoft.Maui.Controls.IAnimatable self) -> System.IDisposable
~static Microsoft.Maui.Controls.AnimationExtensions.Insert(this Microsoft.Maui.Animations.IAnimationManager animationManager, System.Func<long, bool> step) -> int
~static Microsoft.Maui.Controls.AnimationExtensions.Interpolate(double start, double end = 1, double reverseVal = 0, bool reverse = false) -> System.Func<double, double>
~static Microsoft.Maui.Controls.AnimationExtensions.Remove(this Microsoft.Maui.Animations.IAnimationManager animationManager, int tickerId) -> void
~static Microsoft.Maui.Controls.Application.ControlsApplicationMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.IApplication, Microsoft.Maui.Handlers.ApplicationHandler>
~static Microsoft.Maui.Controls.Application.MapWindowSoftInputModeAdjust(Microsoft.Maui.Handlers.ApplicationHandler handler, Microsoft.Maui.Controls.Application application) -> void
~static Microsoft.Maui.Controls.AppLinkEntry.FromUri(System.Uri uri) -> Microsoft.Maui.Controls.AppLinkEntry
~static Microsoft.Maui.Controls.AutomationProperties.GetExcludedWithChildren(Microsoft.Maui.Controls.BindableObject bindable) -> bool?
~static Microsoft.Maui.Controls.AutomationProperties.GetHelpText(Microsoft.Maui.Controls.BindableObject bindable) -> string
~static Microsoft.Maui.Controls.AutomationProperties.GetIsInAccessibleTree(Microsoft.Maui.Controls.BindableObject bindable) -> bool?
~static Microsoft.Maui.Controls.AutomationProperties.GetLabeledBy(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.Controls.VisualElement
~static Microsoft.Maui.Controls.AutomationProperties.GetName(Microsoft.Maui.Controls.BindableObject bindable) -> string
~static Microsoft.Maui.Controls.AutomationProperties.SetExcludedWithChildren(Microsoft.Maui.Controls.BindableObject bindable, bool? value) -> void
~static Microsoft.Maui.Controls.AutomationProperties.SetHelpText(Microsoft.Maui.Controls.BindableObject bindable, string value) -> void
~static Microsoft.Maui.Controls.AutomationProperties.SetIsInAccessibleTree(Microsoft.Maui.Controls.BindableObject bindable, bool? value) -> void
~static Microsoft.Maui.Controls.AutomationProperties.SetLabeledBy(Microsoft.Maui.Controls.BindableObject bindable, Microsoft.Maui.Controls.VisualElement value) -> void
~static Microsoft.Maui.Controls.AutomationProperties.SetName(Microsoft.Maui.Controls.BindableObject bindable, string value) -> void
~static Microsoft.Maui.Controls.BindableLayout.GetEmptyView(Microsoft.Maui.Controls.BindableObject b) -> object
~static Microsoft.Maui.Controls.BindableLayout.GetEmptyViewTemplate(Microsoft.Maui.Controls.BindableObject b) -> Microsoft.Maui.Controls.DataTemplate
~static Microsoft.Maui.Controls.BindableLayout.GetItemsSource(Microsoft.Maui.Controls.BindableObject b) -> System.Collections.IEnumerable
~static Microsoft.Maui.Controls.BindableLayout.GetItemTemplate(Microsoft.Maui.Controls.BindableObject b) -> Microsoft.Maui.Controls.DataTemplate
~static Microsoft.Maui.Controls.BindableLayout.GetItemTemplateSelector(Microsoft.Maui.Controls.BindableObject b) -> Microsoft.Maui.Controls.DataTemplateSelector
~static Microsoft.Maui.Controls.BindableLayout.SetEmptyView(Microsoft.Maui.Controls.BindableObject b, object value) -> void
~static Microsoft.Maui.Controls.BindableLayout.SetEmptyViewTemplate(Microsoft.Maui.Controls.BindableObject b, Microsoft.Maui.Controls.DataTemplate value) -> void
~static Microsoft.Maui.Controls.BindableLayout.SetItemsSource(Microsoft.Maui.Controls.BindableObject b, System.Collections.IEnumerable value) -> void
~static Microsoft.Maui.Controls.BindableLayout.SetItemTemplate(Microsoft.Maui.Controls.BindableObject b, Microsoft.Maui.Controls.DataTemplate value) -> void
~static Microsoft.Maui.Controls.BindableLayout.SetItemTemplateSelector(Microsoft.Maui.Controls.BindableObject b, Microsoft.Maui.Controls.DataTemplateSelector value) -> void
~static Microsoft.Maui.Controls.BindableObject.SetInheritedBindingContext(Microsoft.Maui.Controls.BindableObject bindable, object value) -> void
~static Microsoft.Maui.Controls.BindableObjectExtensions.GetPropertyIfSet<T>(this Microsoft.Maui.Controls.BindableObject bindableObject, Microsoft.Maui.Controls.BindableProperty bindableProperty, T returnIfNotSet) -> T
~static Microsoft.Maui.Controls.BindableObjectExtensions.SetAppTheme<T>(this Microsoft.Maui.Controls.BindableObject self, Microsoft.Maui.Controls.BindableProperty targetProperty, T light, T dark) -> void
~static Microsoft.Maui.Controls.BindableObjectExtensions.SetAppThemeColor(this Microsoft.Maui.Controls.BindableObject self, Microsoft.Maui.Controls.BindableProperty targetProperty, Microsoft.Maui.Graphics.Color light, Microsoft.Maui.Graphics.Color dark) -> void
~static Microsoft.Maui.Controls.BindableObjectExtensions.SetBinding(this Microsoft.Maui.Controls.BindableObject self, Microsoft.Maui.Controls.BindableProperty targetProperty, string path, Microsoft.Maui.Controls.BindingMode mode = Microsoft.Maui.Controls.BindingMode.Default, Microsoft.Maui.Controls.IValueConverter converter = null, string stringFormat = null) -> void
~static Microsoft.Maui.Controls.BindableProperty.Create(string propertyName, System.Type returnType, System.Type declaringType, object defaultValue = null, Microsoft.Maui.Controls.BindingMode defaultBindingMode = Microsoft.Maui.Controls.BindingMode.OneWay, Microsoft.Maui.Controls.BindableProperty.ValidateValueDelegate validateValue = null, Microsoft.Maui.Controls.BindableProperty.BindingPropertyChangedDelegate propertyChanged = null, Microsoft.Maui.Controls.BindableProperty.BindingPropertyChangingDelegate propertyChanging = null, Microsoft.Maui.Controls.BindableProperty.CoerceValueDelegate coerceValue = null, Microsoft.Maui.Controls.BindableProperty.CreateDefaultValueDelegate defaultValueCreator = null) -> Microsoft.Maui.Controls.BindableProperty
~static Microsoft.Maui.Controls.BindableProperty.CreateAttached(string propertyName, System.Type returnType, System.Type declaringType, object defaultValue, Microsoft.Maui.Controls.BindingMode defaultBindingMode = Microsoft.Maui.Controls.BindingMode.OneWay, Microsoft.Maui.Controls.BindableProperty.ValidateValueDelegate validateValue = null, Microsoft.Maui.Controls.BindableProperty.BindingPropertyChangedDelegate propertyChanged = null, Microsoft.Maui.Controls.BindableProperty.BindingPropertyChangingDelegate propertyChanging = null, Microsoft.Maui.Controls.BindableProperty.CoerceValueDelegate coerceValue = null, Microsoft.Maui.Controls.BindableProperty.CreateDefaultValueDelegate defaultValueCreator = null) -> Microsoft.Maui.Controls.BindableProperty
~static Microsoft.Maui.Controls.BindableProperty.CreateAttachedReadOnly(string propertyName, System.Type returnType, System.Type declaringType, object defaultValue, Microsoft.Maui.Controls.BindingMode defaultBindingMode = Microsoft.Maui.Controls.BindingMode.OneWayToSource, Microsoft.Maui.Controls.BindableProperty.ValidateValueDelegate validateValue = null, Microsoft.Maui.Controls.BindableProperty.BindingPropertyChangedDelegate propertyChanged = null, Microsoft.Maui.Controls.BindableProperty.BindingPropertyChangingDelegate propertyChanging = null, Microsoft.Maui.Controls.BindableProperty.CoerceValueDelegate coerceValue = null, Microsoft.Maui.Controls.BindableProperty.CreateDefaultValueDelegate defaultValueCreator = null) -> Microsoft.Maui.Controls.BindablePropertyKey
~static Microsoft.Maui.Controls.BindableProperty.CreateReadOnly(string propertyName, System.Type returnType, System.Type declaringType, object defaultValue, Microsoft.Maui.Controls.BindingMode defaultBindingMode = Microsoft.Maui.Controls.BindingMode.OneWayToSource, Microsoft.Maui.Controls.BindableProperty.ValidateValueDelegate validateValue = null, Microsoft.Maui.Controls.BindableProperty.BindingPropertyChangedDelegate propertyChanged = null, Microsoft.Maui.Controls.BindableProperty.BindingPropertyChangingDelegate propertyChanging = null, Microsoft.Maui.Controls.BindableProperty.CoerceValueDelegate coerceValue = null, Microsoft.Maui.Controls.BindableProperty.CreateDefaultValueDelegate defaultValueCreator = null) -> Microsoft.Maui.Controls.BindablePropertyKey
~static Microsoft.Maui.Controls.BindingBase.DisableCollectionSynchronization(System.Collections.IEnumerable collection) -> void
~static Microsoft.Maui.Controls.BindingBase.EnableCollectionSynchronization(System.Collections.IEnumerable collection, object context, Microsoft.Maui.Controls.CollectionSynchronizationCallback callback) -> void
~static Microsoft.Maui.Controls.BoundsConstraint.FromExpression(System.Linq.Expressions.Expression<System.Func<Microsoft.Maui.Graphics.Rect>> expression, System.Collections.Generic.IEnumerable<Microsoft.Maui.Controls.View> parents = null) -> Microsoft.Maui.Controls.BoundsConstraint
~static Microsoft.Maui.Controls.Brush.AliceBlue.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.AntiqueWhite.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Aqua.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Aquamarine.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Azure.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Beige.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Bisque.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Black.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.BlanchedAlmond.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Blue.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.BlueViolet.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Brown.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.BurlyWood.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.CadetBlue.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Chartreuse.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Chocolate.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Coral.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.CornflowerBlue.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Cornsilk.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Crimson.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Cyan.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.DarkBlue.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.DarkCyan.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.DarkGoldenrod.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.DarkGray.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.DarkGreen.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.DarkKhaki.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.DarkMagenta.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.DarkOliveGreen.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.DarkOrange.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.DarkOrchid.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.DarkRed.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.DarkSalmon.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.DarkSeaGreen.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.DarkSlateBlue.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.DarkSlateGray.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.DarkTurquoise.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.DarkViolet.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.DeepPink.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.DeepSkyBlue.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Default.get -> Microsoft.Maui.Controls.Brush
~static Microsoft.Maui.Controls.Brush.DimGray.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.DodgerBlue.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Firebrick.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.FloralWhite.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.ForestGreen.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Fuchsia.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Gainsboro.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.GhostWhite.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Gold.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Goldenrod.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Gray.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Green.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.GreenYellow.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Honeydew.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.HotPink.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.implicit operator Microsoft.Maui.Controls.Brush(Microsoft.Maui.Graphics.Color color) -> Microsoft.Maui.Controls.Brush
~static Microsoft.Maui.Controls.Brush.implicit operator Microsoft.Maui.Controls.Brush(Microsoft.Maui.Graphics.Paint paint) -> Microsoft.Maui.Controls.Brush
~static Microsoft.Maui.Controls.Brush.implicit operator Microsoft.Maui.Graphics.Paint(Microsoft.Maui.Controls.Brush brush) -> Microsoft.Maui.Graphics.Paint
~static Microsoft.Maui.Controls.Brush.IndianRed.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Indigo.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.IsNullOrEmpty(Microsoft.Maui.Controls.Brush brush) -> bool
~static Microsoft.Maui.Controls.Brush.Ivory.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Khaki.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Lavender.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.LavenderBlush.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.LawnGreen.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.LemonChiffon.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.LightBlue.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.LightCoral.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.LightCyan.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.LightGoldenrodYellow.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.LightGray.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.LightGreen.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.LightPink.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.LightSalmon.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.LightSeaGreen.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.LightSkyBlue.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.LightSlateGray.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.LightSteelBlue.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.LightYellow.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Lime.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.LimeGreen.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Linen.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Magenta.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Maroon.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.MediumAquamarine.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.MediumBlue.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.MediumOrchid.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.MediumPurple.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.MediumSeaGreen.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.MediumSlateBlue.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.MediumSpringGreen.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.MediumTurquoise.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.MediumVioletRed.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.MidnightBlue.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.MintCream.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.MistyRose.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Moccasin.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.NavajoWhite.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Navy.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.OldLace.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Olive.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.OliveDrab.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Orange.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.OrangeRed.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Orchid.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.PaleGoldenrod.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.PaleGreen.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.PaleTurquoise.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.PaleVioletRed.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.PapayaWhip.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.PeachPuff.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Peru.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Pink.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Plum.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.PowderBlue.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Purple.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Red.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.RosyBrown.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.RoyalBlue.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.SaddleBrown.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Salmon.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.SandyBrown.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.SeaGreen.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.SeaShell.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Sienna.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Silver.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.SkyBlue.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.SlateBlue.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.SlateGray.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Snow.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.SpringGreen.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.SteelBlue.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Tan.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Teal.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Thistle.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Tomato.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Transparent.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Turquoise.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Violet.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Wheat.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.White.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.WhiteSmoke.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.Yellow.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Brush.YellowGreen.get -> Microsoft.Maui.Controls.SolidColorBrush
~static Microsoft.Maui.Controls.Button.ControlsButtonMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.IButton, Microsoft.Maui.Handlers.ButtonHandler>
~static Microsoft.Maui.Controls.Button.MapContentLayout(Microsoft.Maui.Handlers.ButtonHandler handler, Microsoft.Maui.Controls.Button button) -> void
~static Microsoft.Maui.Controls.Button.MapContentLayout(Microsoft.Maui.Handlers.IButtonHandler handler, Microsoft.Maui.Controls.Button button) -> void
~static Microsoft.Maui.Controls.Button.MapLineBreakMode(Microsoft.Maui.Handlers.IButtonHandler handler, Microsoft.Maui.Controls.Button button) -> void
~static Microsoft.Maui.Controls.Button.MapText(Microsoft.Maui.Handlers.ButtonHandler handler, Microsoft.Maui.Controls.Button button) -> void
~static Microsoft.Maui.Controls.Button.MapText(Microsoft.Maui.Handlers.IButtonHandler handler, Microsoft.Maui.Controls.Button button) -> void
~static Microsoft.Maui.Controls.Compatibility.AbsoluteLayout.GetLayoutBounds(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.Graphics.Rect
~static Microsoft.Maui.Controls.Compatibility.AbsoluteLayout.GetLayoutFlags(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.Layouts.AbsoluteLayoutFlags
~static Microsoft.Maui.Controls.Compatibility.AbsoluteLayout.SetLayoutBounds(Microsoft.Maui.Controls.BindableObject bindable, Microsoft.Maui.Graphics.Rect bounds) -> void
~static Microsoft.Maui.Controls.Compatibility.AbsoluteLayout.SetLayoutFlags(Microsoft.Maui.Controls.BindableObject bindable, Microsoft.Maui.Layouts.AbsoluteLayoutFlags flags) -> void
~static Microsoft.Maui.Controls.Compatibility.Constraint.Constant(double size) -> Microsoft.Maui.Controls.Compatibility.Constraint
~static Microsoft.Maui.Controls.Compatibility.Constraint.FromExpression(System.Linq.Expressions.Expression<System.Func<double>> expression) -> Microsoft.Maui.Controls.Compatibility.Constraint
~static Microsoft.Maui.Controls.Compatibility.Constraint.RelativeToParent(System.Func<Microsoft.Maui.Controls.Compatibility.RelativeLayout, double> measure) -> Microsoft.Maui.Controls.Compatibility.Constraint
~static Microsoft.Maui.Controls.Compatibility.Constraint.RelativeToView(Microsoft.Maui.Controls.View view, System.Func<Microsoft.Maui.Controls.Compatibility.RelativeLayout, Microsoft.Maui.Controls.View, double> measure) -> Microsoft.Maui.Controls.Compatibility.Constraint
~static Microsoft.Maui.Controls.Compatibility.FlexLayout.GetAlignSelf(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.Layouts.FlexAlignSelf
~static Microsoft.Maui.Controls.Compatibility.FlexLayout.GetBasis(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.Layouts.FlexBasis
~static Microsoft.Maui.Controls.Compatibility.FlexLayout.GetGrow(Microsoft.Maui.Controls.BindableObject bindable) -> float
~static Microsoft.Maui.Controls.Compatibility.FlexLayout.GetOrder(Microsoft.Maui.Controls.BindableObject bindable) -> int
~static Microsoft.Maui.Controls.Compatibility.FlexLayout.GetShrink(Microsoft.Maui.Controls.BindableObject bindable) -> float
~static Microsoft.Maui.Controls.Compatibility.FlexLayout.SetAlignSelf(Microsoft.Maui.Controls.BindableObject bindable, Microsoft.Maui.Layouts.FlexAlignSelf value) -> void
~static Microsoft.Maui.Controls.Compatibility.FlexLayout.SetBasis(Microsoft.Maui.Controls.BindableObject bindable, Microsoft.Maui.Layouts.FlexBasis value) -> void
~static Microsoft.Maui.Controls.Compatibility.FlexLayout.SetGrow(Microsoft.Maui.Controls.BindableObject bindable, float value) -> void
~static Microsoft.Maui.Controls.Compatibility.FlexLayout.SetOrder(Microsoft.Maui.Controls.BindableObject bindable, int value) -> void
~static Microsoft.Maui.Controls.Compatibility.FlexLayout.SetShrink(Microsoft.Maui.Controls.BindableObject bindable, float value) -> void
~static Microsoft.Maui.Controls.Compatibility.Grid.GetColumn(Microsoft.Maui.Controls.BindableObject bindable) -> int
~static Microsoft.Maui.Controls.Compatibility.Grid.GetColumnSpan(Microsoft.Maui.Controls.BindableObject bindable) -> int
~static Microsoft.Maui.Controls.Compatibility.Grid.GetRow(Microsoft.Maui.Controls.BindableObject bindable) -> int
~static Microsoft.Maui.Controls.Compatibility.Grid.GetRowSpan(Microsoft.Maui.Controls.BindableObject bindable) -> int
~static Microsoft.Maui.Controls.Compatibility.Grid.SetColumn(Microsoft.Maui.Controls.BindableObject bindable, int value) -> void
~static Microsoft.Maui.Controls.Compatibility.Grid.SetColumnSpan(Microsoft.Maui.Controls.BindableObject bindable, int value) -> void
~static Microsoft.Maui.Controls.Compatibility.Grid.SetRow(Microsoft.Maui.Controls.BindableObject bindable, int value) -> void
~static Microsoft.Maui.Controls.Compatibility.Grid.SetRowSpan(Microsoft.Maui.Controls.BindableObject bindable, int value) -> void
~static Microsoft.Maui.Controls.Compatibility.Layout.LayoutChildIntoBoundingRegion(Microsoft.Maui.Controls.VisualElement child, Microsoft.Maui.Graphics.Rect region) -> void
~static Microsoft.Maui.Controls.Compatibility.Platform.Android.CanvasExtensions.ClipShape(this Android.Graphics.Canvas canvas, Android.Content.Context context, Microsoft.Maui.Controls.VisualElement element) -> void
~static Microsoft.Maui.Controls.Compatibility.Platform.Android.GeometryExtensions.ToAPath(this Microsoft.Maui.Controls.Shapes.Geometry geometry, Android.Content.Context context) -> Android.Graphics.Path
~static Microsoft.Maui.Controls.Compatibility.RelativeLayout.GetBoundsConstraint(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.Controls.BoundsConstraint
~static Microsoft.Maui.Controls.Compatibility.RelativeLayout.GetHeightConstraint(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.Controls.Compatibility.Constraint
~static Microsoft.Maui.Controls.Compatibility.RelativeLayout.GetWidthConstraint(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.Controls.Compatibility.Constraint
~static Microsoft.Maui.Controls.Compatibility.RelativeLayout.GetXConstraint(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.Controls.Compatibility.Constraint
~static Microsoft.Maui.Controls.Compatibility.RelativeLayout.GetYConstraint(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.Controls.Compatibility.Constraint
~static Microsoft.Maui.Controls.Compatibility.RelativeLayout.SetBoundsConstraint(Microsoft.Maui.Controls.BindableObject bindable, Microsoft.Maui.Controls.BoundsConstraint value) -> void
~static Microsoft.Maui.Controls.Compatibility.RelativeLayout.SetHeightConstraint(Microsoft.Maui.Controls.BindableObject bindable, Microsoft.Maui.Controls.Compatibility.Constraint value) -> void
~static Microsoft.Maui.Controls.Compatibility.RelativeLayout.SetWidthConstraint(Microsoft.Maui.Controls.BindableObject bindable, Microsoft.Maui.Controls.Compatibility.Constraint value) -> void
~static Microsoft.Maui.Controls.Compatibility.RelativeLayout.SetXConstraint(Microsoft.Maui.Controls.BindableObject bindable, Microsoft.Maui.Controls.Compatibility.Constraint value) -> void
~static Microsoft.Maui.Controls.Compatibility.RelativeLayout.SetYConstraint(Microsoft.Maui.Controls.BindableObject bindable, Microsoft.Maui.Controls.Compatibility.Constraint value) -> void
~static Microsoft.Maui.Controls.CompressedLayout.GetHeadlessOffset(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.Graphics.Point
~static Microsoft.Maui.Controls.CompressedLayout.GetIsHeadless(Microsoft.Maui.Controls.BindableObject bindable) -> bool
~static Microsoft.Maui.Controls.CompressedLayout.SetIsHeadless(Microsoft.Maui.Controls.BindableObject bindable, bool value) -> void
~static Microsoft.Maui.Controls.Configuration<TPlatform, TElement>.Create(TElement element) -> Microsoft.Maui.Controls.Configuration<TPlatform, TElement>
~static Microsoft.Maui.Controls.ContentPresenter.ContentProperty -> Microsoft.Maui.Controls.BindableProperty
~static Microsoft.Maui.Controls.ControlsColorExtensions.IsDefault(this Microsoft.Maui.Graphics.Color color) -> bool
~static Microsoft.Maui.Controls.ControlsColorExtensions.IsNotDefault(this Microsoft.Maui.Graphics.Color color) -> bool
~static Microsoft.Maui.Controls.DatePicker.ControlsDatePickerMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.IDatePicker, Microsoft.Maui.Handlers.DatePickerHandler>
~static Microsoft.Maui.Controls.DependencyService.Get<T>(Microsoft.Maui.Controls.DependencyFetchTarget fetchTarget = Microsoft.Maui.Controls.DependencyFetchTarget.GlobalInstance) -> T
~static Microsoft.Maui.Controls.DependencyService.Register(System.Reflection.Assembly[] assemblies) -> void
~static Microsoft.Maui.Controls.DependencyService.Register<T, TImpl>() -> void
~static Microsoft.Maui.Controls.DependencyService.Register<T>() -> void
~static Microsoft.Maui.Controls.DependencyService.RegisterSingleton<T>(T instance) -> void
~static Microsoft.Maui.Controls.DependencyService.Resolve<T>(Microsoft.Maui.Controls.DependencyFetchTarget fallbackFetchTarget = Microsoft.Maui.Controls.DependencyFetchTarget.GlobalInstance) -> T
~static Microsoft.Maui.Controls.Device.BeginInvokeOnMainThread(System.Action action) -> void
~static Microsoft.Maui.Controls.Device.DefaultRendererAssembly.get -> System.Reflection.Assembly
~static Microsoft.Maui.Controls.Device.DefaultRendererAssembly.set -> void
~static Microsoft.Maui.Controls.Device.GetMainThreadSynchronizationContextAsync() -> System.Threading.Tasks.Task<System.Threading.SynchronizationContext>
~static Microsoft.Maui.Controls.Device.GetNamedSize(Microsoft.Maui.Controls.NamedSize size, Microsoft.Maui.Controls.Element targetElement) -> double
~static Microsoft.Maui.Controls.Device.GetNamedSize(Microsoft.Maui.Controls.NamedSize size, System.Type targetElementType, bool useOldSizes) -> double
~static Microsoft.Maui.Controls.Device.GetNamedSize(Microsoft.Maui.Controls.NamedSize size, System.Type targetElementType) -> double
~static Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync(System.Action action) -> System.Threading.Tasks.Task
~static Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync(System.Func<System.Threading.Tasks.Task> funcTask) -> System.Threading.Tasks.Task
~static Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync<T>(System.Func<System.Threading.Tasks.Task<T>> funcTask) -> System.Threading.Tasks.Task<T>
~static Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync<T>(System.Func<T> func) -> System.Threading.Tasks.Task<T>
~static Microsoft.Maui.Controls.Device.RuntimePlatform.get -> string
~static Microsoft.Maui.Controls.Device.StartTimer(System.TimeSpan interval, System.Func<bool> callback) -> void
~static Microsoft.Maui.Controls.DoubleCollection.implicit operator Microsoft.Maui.Controls.DoubleCollection(double[] d) -> Microsoft.Maui.Controls.DoubleCollection
~static Microsoft.Maui.Controls.DoubleCollection.implicit operator Microsoft.Maui.Controls.DoubleCollection(float[] f) -> Microsoft.Maui.Controls.DoubleCollection
~static Microsoft.Maui.Controls.Editor.ControlsEditorMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.IEditor, Microsoft.Maui.Handlers.EditorHandler>
~static Microsoft.Maui.Controls.Editor.MapText(Microsoft.Maui.Handlers.EditorHandler handler, Microsoft.Maui.Controls.Editor editor) -> void
~static Microsoft.Maui.Controls.Editor.MapText(Microsoft.Maui.Handlers.IEditorHandler handler, Microsoft.Maui.Controls.Editor editor) -> void
~static Microsoft.Maui.Controls.Effect.Resolve(string name) -> Microsoft.Maui.Controls.Effect
~static Microsoft.Maui.Controls.EffectiveVisualExtensions.IsDefault(this Microsoft.Maui.Controls.IVisual visual) -> bool
~static Microsoft.Maui.Controls.EffectiveVisualExtensions.IsMatchParent(this Microsoft.Maui.Controls.IVisual visual) -> bool
~static Microsoft.Maui.Controls.EffectiveVisualExtensions.IsMaterial(this Microsoft.Maui.Controls.IVisual visual) -> bool
~static Microsoft.Maui.Controls.Element.ControlsElementMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.IElement, Microsoft.Maui.IElementHandler>
~static Microsoft.Maui.Controls.Entry.ControlsEntryMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.IEntry, Microsoft.Maui.Handlers.EntryHandler>
~static Microsoft.Maui.Controls.Entry.MapImeOptions(Microsoft.Maui.Handlers.EntryHandler handler, Microsoft.Maui.Controls.Entry entry) -> void
~static Microsoft.Maui.Controls.Entry.MapImeOptions(Microsoft.Maui.Handlers.IEntryHandler handler, Microsoft.Maui.Controls.Entry entry) -> void
~static Microsoft.Maui.Controls.Entry.MapText(Microsoft.Maui.Handlers.EntryHandler handler, Microsoft.Maui.Controls.Entry entry) -> void
~static Microsoft.Maui.Controls.Entry.MapText(Microsoft.Maui.Handlers.IEntryHandler handler, Microsoft.Maui.Controls.Entry entry) -> void
~static Microsoft.Maui.Controls.FileImageSource.implicit operator Microsoft.Maui.Controls.FileImageSource(string file) -> Microsoft.Maui.Controls.FileImageSource
~static Microsoft.Maui.Controls.FileImageSource.implicit operator string(Microsoft.Maui.Controls.FileImageSource file) -> string
~static Microsoft.Maui.Controls.FlexLayout.GetAlignSelf(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.Layouts.FlexAlignSelf
~static Microsoft.Maui.Controls.FlexLayout.GetBasis(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.Layouts.FlexBasis
~static Microsoft.Maui.Controls.FlexLayout.GetGrow(Microsoft.Maui.Controls.BindableObject bindable) -> float
~static Microsoft.Maui.Controls.FlexLayout.GetOrder(Microsoft.Maui.Controls.BindableObject bindable) -> int
~static Microsoft.Maui.Controls.FlexLayout.GetShrink(Microsoft.Maui.Controls.BindableObject bindable) -> float
~static Microsoft.Maui.Controls.FlexLayout.SetAlignSelf(Microsoft.Maui.Controls.BindableObject bindable, Microsoft.Maui.Layouts.FlexAlignSelf value) -> void
~static Microsoft.Maui.Controls.FlexLayout.SetBasis(Microsoft.Maui.Controls.BindableObject bindable, Microsoft.Maui.Layouts.FlexBasis value) -> void
~static Microsoft.Maui.Controls.FlexLayout.SetGrow(Microsoft.Maui.Controls.BindableObject bindable, float value) -> void
~static Microsoft.Maui.Controls.FlexLayout.SetOrder(Microsoft.Maui.Controls.BindableObject bindable, int value) -> void
~static Microsoft.Maui.Controls.FlexLayout.SetShrink(Microsoft.Maui.Controls.BindableObject bindable, float value) -> void
~static Microsoft.Maui.Controls.FlyoutBase.GetContextFlyout(Microsoft.Maui.Controls.BindableObject b) -> Microsoft.Maui.Controls.FlyoutBase
~static Microsoft.Maui.Controls.FlyoutBase.SetContextFlyout(Microsoft.Maui.Controls.BindableObject b, Microsoft.Maui.Controls.FlyoutBase value) -> void
~static Microsoft.Maui.Controls.FlyoutItem.GetIsVisible(Microsoft.Maui.Controls.BindableObject obj) -> bool
~static Microsoft.Maui.Controls.FlyoutItem.SetIsVisible(Microsoft.Maui.Controls.BindableObject obj, bool isVisible) -> void
~static Microsoft.Maui.Controls.FormattedString.explicit operator string(Microsoft.Maui.Controls.FormattedString formatted) -> string
~static Microsoft.Maui.Controls.FormattedString.implicit operator Microsoft.Maui.Controls.FormattedString(string text) -> Microsoft.Maui.Controls.FormattedString
~static Microsoft.Maui.Controls.Grid.GetColumn(Microsoft.Maui.Controls.BindableObject bindable) -> int
~static Microsoft.Maui.Controls.Grid.GetColumnSpan(Microsoft.Maui.Controls.BindableObject bindable) -> int
~static Microsoft.Maui.Controls.Grid.GetRow(Microsoft.Maui.Controls.BindableObject bindable) -> int
~static Microsoft.Maui.Controls.Grid.GetRowSpan(Microsoft.Maui.Controls.BindableObject bindable) -> int
~static Microsoft.Maui.Controls.Grid.SetColumn(Microsoft.Maui.Controls.BindableObject bindable, int value) -> void
~static Microsoft.Maui.Controls.Grid.SetColumnSpan(Microsoft.Maui.Controls.BindableObject bindable, int value) -> void
~static Microsoft.Maui.Controls.Grid.SetRow(Microsoft.Maui.Controls.BindableObject bindable, int value) -> void
~static Microsoft.Maui.Controls.Grid.SetRowSpan(Microsoft.Maui.Controls.BindableObject bindable, int value) -> void
~static Microsoft.Maui.Controls.GridExtensions.Add(this Microsoft.Maui.Controls.Grid grid, Microsoft.Maui.IView view, int column = 0, int row = 0) -> void
~static Microsoft.Maui.Controls.GridExtensions.Add(this Microsoft.Maui.Controls.Grid grid, Microsoft.Maui.IView view, int left, int right, int top, int bottom) -> void
~static Microsoft.Maui.Controls.GridExtensions.AddWithSpan(this Microsoft.Maui.Controls.Grid grid, Microsoft.Maui.IView view, int row = 0, int column = 0, int rowSpan = 1, int columnSpan = 1) -> void
~static Microsoft.Maui.Controls.Handlers.Compatibility.CellFactory.GetCell(Microsoft.Maui.Controls.Cell item, Android.Views.View convertView, Android.Views.ViewGroup parent, Android.Content.Context context, Microsoft.Maui.Controls.View view) -> Android.Views.View
~static Microsoft.Maui.Controls.Handlers.Compatibility.CellRenderer.CommandMapper -> Microsoft.Maui.CommandMapper<Microsoft.Maui.Controls.Cell, Microsoft.Maui.Controls.Handlers.Compatibility.CellRenderer>
~static Microsoft.Maui.Controls.Handlers.Compatibility.CellRenderer.Mapper -> Microsoft.Maui.PropertyMapper<Microsoft.Maui.Controls.Cell, Microsoft.Maui.Controls.Handlers.Compatibility.CellRenderer>
~static Microsoft.Maui.Controls.Handlers.Compatibility.ListViewRenderer.CommandMapper -> Microsoft.Maui.CommandMapper<Microsoft.Maui.Controls.ListView, Microsoft.Maui.Controls.Handlers.Compatibility.ListViewRenderer>
~static Microsoft.Maui.Controls.Handlers.Compatibility.ListViewRenderer.Mapper -> Microsoft.Maui.PropertyMapper<Microsoft.Maui.Controls.ListView, Microsoft.Maui.Controls.Handlers.Compatibility.ListViewRenderer>
~static Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.CommandMapper -> Microsoft.Maui.CommandMapper<Microsoft.Maui.Controls.Shell, Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer>
~static Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.DefaultBackgroundColor.get -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.Mapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.Controls.Shell, Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer>
~static Microsoft.Maui.Controls.Handlers.Compatibility.TableViewRenderer.CommandMapper -> Microsoft.Maui.CommandMapper<Microsoft.Maui.Controls.TableView, Microsoft.Maui.Controls.Handlers.Compatibility.TableViewRenderer>
~static Microsoft.Maui.Controls.Handlers.Compatibility.TableViewRenderer.Mapper -> Microsoft.Maui.PropertyMapper<Microsoft.Maui.Controls.TableView, Microsoft.Maui.Controls.Handlers.Compatibility.TableViewRenderer>
~static Microsoft.Maui.Controls.Handlers.Items.CarouselViewHandler.MapCurrentItem(Microsoft.Maui.Controls.Handlers.Items.CarouselViewHandler handler, Microsoft.Maui.Controls.CarouselView carouselView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.CarouselViewHandler.MapIsBounceEnabled(Microsoft.Maui.Controls.Handlers.Items.CarouselViewHandler handler, Microsoft.Maui.Controls.CarouselView carouselView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.CarouselViewHandler.MapIsSwipeEnabled(Microsoft.Maui.Controls.Handlers.Items.CarouselViewHandler handler, Microsoft.Maui.Controls.CarouselView carouselView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.CarouselViewHandler.MapPeekAreaInsets(Microsoft.Maui.Controls.Handlers.Items.CarouselViewHandler handler, Microsoft.Maui.Controls.CarouselView carouselView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.CarouselViewHandler.Mapper -> Microsoft.Maui.PropertyMapper<Microsoft.Maui.Controls.CarouselView, Microsoft.Maui.Controls.Handlers.Items.CarouselViewHandler>
~static Microsoft.Maui.Controls.Handlers.Items.CarouselViewHandler.MapPosition(Microsoft.Maui.Controls.Handlers.Items.CarouselViewHandler handler, Microsoft.Maui.Controls.CarouselView carouselView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.CollectionViewHandler.Mapper -> Microsoft.Maui.PropertyMapper<Microsoft.Maui.Controls.CollectionView, Microsoft.Maui.Controls.Handlers.Items.CollectionViewHandler>
~static Microsoft.Maui.Controls.Handlers.Items.GroupableItemsViewHandler<TItemsView>.GroupableItemsViewMapper -> Microsoft.Maui.PropertyMapper<TItemsView, Microsoft.Maui.Controls.Handlers.Items.GroupableItemsViewHandler<TItemsView>>
~static Microsoft.Maui.Controls.Handlers.Items.GroupableItemsViewHandler<TItemsView>.MapIsGrouped(Microsoft.Maui.Controls.Handlers.Items.GroupableItemsViewHandler<TItemsView> handler, Microsoft.Maui.Controls.GroupableItemsView itemsView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>.ItemsViewMapper -> Microsoft.Maui.PropertyMapper<TItemsView, Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>>
~static Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>.MapEmptyView(Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView> handler, Microsoft.Maui.Controls.ItemsView itemsView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>.MapEmptyViewTemplate(Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView> handler, Microsoft.Maui.Controls.ItemsView itemsView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>.MapFlowDirection(Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView> handler, Microsoft.Maui.Controls.ItemsView itemsView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>.MapHorizontalScrollBarVisibility(Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView> handler, Microsoft.Maui.Controls.ItemsView itemsView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>.MapIsVisible(Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView> handler, Microsoft.Maui.Controls.ItemsView itemsView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>.MapItemsSource(Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView> handler, Microsoft.Maui.Controls.ItemsView itemsView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>.MapItemsUpdatingScrollMode(Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView> handler, Microsoft.Maui.Controls.ItemsView itemsView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>.MapItemTemplate(Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView> handler, Microsoft.Maui.Controls.ItemsView itemsView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>.MapVerticalScrollBarVisibility(Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView> handler, Microsoft.Maui.Controls.ItemsView itemsView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.ReorderableItemsViewHandler<TItemsView>.MapCanReorderItems(Microsoft.Maui.Controls.Handlers.Items.ReorderableItemsViewHandler<TItemsView> handler, Microsoft.Maui.Controls.ReorderableItemsView itemsView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.ReorderableItemsViewHandler<TItemsView>.ReorderableItemsViewMapper -> Microsoft.Maui.PropertyMapper<TItemsView, Microsoft.Maui.Controls.Handlers.Items.ReorderableItemsViewHandler<TItemsView>>
~static Microsoft.Maui.Controls.Handlers.Items.SelectableItemsViewHandler<TItemsView>.MapSelectedItem(Microsoft.Maui.Controls.Handlers.Items.SelectableItemsViewHandler<TItemsView> handler, Microsoft.Maui.Controls.SelectableItemsView itemsView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.SelectableItemsViewHandler<TItemsView>.MapSelectedItems(Microsoft.Maui.Controls.Handlers.Items.SelectableItemsViewHandler<TItemsView> handler, Microsoft.Maui.Controls.SelectableItemsView itemsView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.SelectableItemsViewHandler<TItemsView>.MapSelectionMode(Microsoft.Maui.Controls.Handlers.Items.SelectableItemsViewHandler<TItemsView> handler, Microsoft.Maui.Controls.SelectableItemsView itemsView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.SelectableItemsViewHandler<TItemsView>.SelectableItemsViewMapper -> Microsoft.Maui.PropertyMapper<TItemsView, Microsoft.Maui.Controls.Handlers.Items.SelectableItemsViewHandler<TItemsView>>
~static Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewHandler<TItemsView>.MapFooterTemplate(Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewHandler<TItemsView> handler, Microsoft.Maui.Controls.StructuredItemsView itemsView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewHandler<TItemsView>.MapHeaderTemplate(Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewHandler<TItemsView> handler, Microsoft.Maui.Controls.StructuredItemsView itemsView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewHandler<TItemsView>.MapItemSizingStrategy(Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewHandler<TItemsView> handler, Microsoft.Maui.Controls.StructuredItemsView itemsView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewHandler<TItemsView>.MapItemsLayout(Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewHandler<TItemsView> handler, Microsoft.Maui.Controls.StructuredItemsView itemsView) -> void
~static Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewHandler<TItemsView>.StructuredItemsViewMapper -> Microsoft.Maui.PropertyMapper<TItemsView, Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewHandler<TItemsView>>
~static Microsoft.Maui.Controls.Handlers.LineHandler.Mapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.Controls.Shapes.Line, Microsoft.Maui.Handlers.IShapeViewHandler>
~static Microsoft.Maui.Controls.Handlers.LineHandler.MapX1(Microsoft.Maui.Handlers.IShapeViewHandler handler, Microsoft.Maui.Controls.Shapes.Line line) -> void
~static Microsoft.Maui.Controls.Handlers.LineHandler.MapX2(Microsoft.Maui.Handlers.IShapeViewHandler handler, Microsoft.Maui.Controls.Shapes.Line line) -> void
~static Microsoft.Maui.Controls.Handlers.LineHandler.MapY1(Microsoft.Maui.Handlers.IShapeViewHandler handler, Microsoft.Maui.Controls.Shapes.Line line) -> void
~static Microsoft.Maui.Controls.Handlers.LineHandler.MapY2(Microsoft.Maui.Handlers.IShapeViewHandler handler, Microsoft.Maui.Controls.Shapes.Line line) -> void
~static Microsoft.Maui.Controls.Handlers.PathHandler.MapData(Microsoft.Maui.Handlers.IShapeViewHandler handler, Microsoft.Maui.Controls.Shapes.Path path) -> void
~static Microsoft.Maui.Controls.Handlers.PathHandler.Mapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.Controls.Shapes.Path, Microsoft.Maui.Handlers.IShapeViewHandler>
~static Microsoft.Maui.Controls.Handlers.PathHandler.MapRenderTransform(Microsoft.Maui.Handlers.IShapeViewHandler handler, Microsoft.Maui.Controls.Shapes.Path path) -> void
~static Microsoft.Maui.Controls.Handlers.PathHandler.MapShape(Microsoft.Maui.Handlers.IShapeViewHandler handler, Microsoft.Maui.Controls.Shapes.Path path) -> void
~static Microsoft.Maui.Controls.Handlers.PolygonHandler.MapFillRule(Microsoft.Maui.Handlers.IShapeViewHandler handler, Microsoft.Maui.Controls.Shapes.Polygon polygon) -> void
~static Microsoft.Maui.Controls.Handlers.PolygonHandler.Mapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.Controls.Shapes.Polygon, Microsoft.Maui.Handlers.IShapeViewHandler>
~static Microsoft.Maui.Controls.Handlers.PolygonHandler.MapPoints(Microsoft.Maui.Handlers.IShapeViewHandler handler, Microsoft.Maui.Controls.Shapes.Polygon polygon) -> void
~static Microsoft.Maui.Controls.Handlers.PolygonHandler.MapShape(Microsoft.Maui.Handlers.IShapeViewHandler handler, Microsoft.Maui.Controls.Shapes.Polygon polygon) -> void
~static Microsoft.Maui.Controls.Handlers.PolylineHandler.MapFillRule(Microsoft.Maui.Handlers.IShapeViewHandler handler, Microsoft.Maui.Controls.Shapes.Polyline polyline) -> void
~static Microsoft.Maui.Controls.Handlers.PolylineHandler.Mapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.Controls.Shapes.Polyline, Microsoft.Maui.Handlers.IShapeViewHandler>
~static Microsoft.Maui.Controls.Handlers.PolylineHandler.MapPoints(Microsoft.Maui.Handlers.IShapeViewHandler handler, Microsoft.Maui.Controls.Shapes.Polyline polyline) -> void
~static Microsoft.Maui.Controls.Handlers.PolylineHandler.MapShape(Microsoft.Maui.Handlers.IShapeViewHandler handler, Microsoft.Maui.Controls.Shapes.Polyline polyline) -> void
~static Microsoft.Maui.Controls.Handlers.RectangleHandler.Mapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.Controls.Shapes.Rectangle, Microsoft.Maui.Handlers.IShapeViewHandler>
~static Microsoft.Maui.Controls.Handlers.RectangleHandler.MapRadiusX(Microsoft.Maui.Handlers.IShapeViewHandler handler, Microsoft.Maui.Controls.Shapes.Rectangle rectangle) -> void
~static Microsoft.Maui.Controls.Handlers.RectangleHandler.MapRadiusY(Microsoft.Maui.Handlers.IShapeViewHandler handler, Microsoft.Maui.Controls.Shapes.Rectangle rectangle) -> void
~static Microsoft.Maui.Controls.Handlers.RoundRectangleHandler.MapCornerRadius(Microsoft.Maui.Handlers.IShapeViewHandler handler, Microsoft.Maui.Controls.Shapes.RoundRectangle roundRectangle) -> void
~static Microsoft.Maui.Controls.Handlers.RoundRectangleHandler.Mapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.Controls.Shapes.RoundRectangle, Microsoft.Maui.Handlers.IShapeViewHandler>
~static Microsoft.Maui.Controls.Hosting.AppHostBuilderExtensions.ConfigureEffects(this Microsoft.Maui.Hosting.MauiAppBuilder builder, System.Action<Microsoft.Maui.Controls.Hosting.IEffectsBuilder> configureDelegate) -> Microsoft.Maui.Hosting.MauiAppBuilder
~static Microsoft.Maui.Controls.ImageSource.FromFile(string file) -> Microsoft.Maui.Controls.ImageSource
~static Microsoft.Maui.Controls.ImageSource.FromResource(string resource, System.Reflection.Assembly sourceAssembly = null) -> Microsoft.Maui.Controls.ImageSource
~static Microsoft.Maui.Controls.ImageSource.FromResource(string resource, System.Type resolvingType) -> Microsoft.Maui.Controls.ImageSource
~static Microsoft.Maui.Controls.ImageSource.FromStream(System.Func<System.IO.Stream> stream) -> Microsoft.Maui.Controls.ImageSource
~static Microsoft.Maui.Controls.ImageSource.FromStream(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<System.IO.Stream>> stream) -> Microsoft.Maui.Controls.ImageSource
~static Microsoft.Maui.Controls.ImageSource.FromUri(System.Uri uri) -> Microsoft.Maui.Controls.ImageSource
~static Microsoft.Maui.Controls.ImageSource.implicit operator Microsoft.Maui.Controls.ImageSource(string source) -> Microsoft.Maui.Controls.ImageSource
~static Microsoft.Maui.Controls.ImageSource.implicit operator Microsoft.Maui.Controls.ImageSource(System.Uri uri) -> Microsoft.Maui.Controls.ImageSource
~static Microsoft.Maui.Controls.ImageSource.IsNullOrEmpty(Microsoft.Maui.Controls.ImageSource imageSource) -> bool
~static Microsoft.Maui.Controls.Internals.AsyncValue<T>.Null.get -> Microsoft.Maui.Controls.Internals.AsyncValue<T>
~static Microsoft.Maui.Controls.Internals.AsyncValueExtensions.AsAsyncValue<T>(this System.Threading.Tasks.Task<T> valueTask, T defaultValue = default(T)) -> Microsoft.Maui.Controls.Internals.AsyncValue<T>
~static Microsoft.Maui.Controls.Internals.CellExtensions.GetGroup<TView, TItem>(this TItem cell) -> Microsoft.Maui.Controls.ITemplatedItemsList<TItem>
~static Microsoft.Maui.Controls.Internals.CellExtensions.GetGroupHeaderContent<TView, TItem>(this TItem cell) -> TItem
~static Microsoft.Maui.Controls.Internals.CellExtensions.GetIndex<TView, TItem>(this TItem cell) -> int
~static Microsoft.Maui.Controls.Internals.CellExtensions.GetIsGroupHeader<TView, TItem>(this TItem cell) -> bool
~static Microsoft.Maui.Controls.Internals.CellExtensions.GetPath(this Microsoft.Maui.Controls.Cell cell) -> System.Tuple<int, int>
~static Microsoft.Maui.Controls.Internals.CellExtensions.SetIsGroupHeader<TView, TItem>(this TItem cell, bool value) -> void
~static Microsoft.Maui.Controls.Internals.ContentPageEx.Data -> System.Collections.Generic.List<Microsoft.Maui.Controls.Internals.ProfileDatum>
~static Microsoft.Maui.Controls.Internals.ContentPageEx.LoadProfile(this Microsoft.Maui.Controls.ContentPage page) -> void
~static Microsoft.Maui.Controls.Internals.DataTemplateExtensions.CreateContent(this Microsoft.Maui.Controls.DataTemplate self, object item, Microsoft.Maui.Controls.BindableObject container) -> object
~static Microsoft.Maui.Controls.Internals.DataTemplateExtensions.SelectDataTemplate(this Microsoft.Maui.Controls.DataTemplate self, object item, Microsoft.Maui.Controls.BindableObject container) -> Microsoft.Maui.Controls.DataTemplate
~static Microsoft.Maui.Controls.Internals.DependencyResolver.ResolveUsing(System.Func<System.Type, object[], object> resolver) -> void
~static Microsoft.Maui.Controls.Internals.DependencyResolver.ResolveUsing(System.Func<System.Type, object> resolver) -> void
~static Microsoft.Maui.Controls.Internals.EffectUtilities.RegisterEffectControlProvider(Microsoft.Maui.Controls.IEffectControlProvider self, Microsoft.Maui.Controls.IElementController oldElement, Microsoft.Maui.Controls.IElementController newElement) -> void
~static Microsoft.Maui.Controls.Internals.EffectUtilities.UnregisterEffectControlProvider(Microsoft.Maui.Controls.IEffectControlProvider self, Microsoft.Maui.Controls.IElementController element) -> void
~static Microsoft.Maui.Controls.Internals.ExpressionSearch.Default.get -> Microsoft.Maui.Controls.Internals.IExpressionSearch
~static Microsoft.Maui.Controls.Internals.ExpressionSearch.Default.set -> void
~static Microsoft.Maui.Controls.Internals.GIFBitmap.CreateBitmapAsync(Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader stream, Microsoft.Maui.Controls.Internals.GIFHeader header, Microsoft.Maui.Controls.Internals.GIFBitmapDecoder decoder, Microsoft.Maui.Controls.Internals.GIFBitmap previousBitmap, bool ignoreImageData = false) -> System.Threading.Tasks.Task<Microsoft.Maui.Controls.Internals.GIFBitmap>
~static Microsoft.Maui.Controls.Internals.GIFColorTable.CreateColorTableAsync(Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader stream, short size) -> System.Threading.Tasks.Task<Microsoft.Maui.Controls.Internals.GIFColorTable>
~static Microsoft.Maui.Controls.Internals.GIFHeader.CreateHeaderAsync(Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader stream, bool skipTypeIdentifier = false) -> System.Threading.Tasks.Task<Microsoft.Maui.Controls.Internals.GIFHeader>
~static Microsoft.Maui.Controls.Internals.NameScope.GetNameScope(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.Controls.Internals.INameScope
~static Microsoft.Maui.Controls.Internals.NameScope.SetNameScope(Microsoft.Maui.Controls.BindableObject bindable, Microsoft.Maui.Controls.Internals.INameScope value) -> void
~static Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsExtensions.Apply(this System.Collections.Specialized.NotifyCollectionChangedEventArgs self, System.Action<object, int, bool> insert, System.Action<object, int> removeAt, System.Action reset) -> System.Collections.Specialized.NotifyCollectionChangedAction
~static Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsExtensions.Apply<TFrom>(this System.Collections.Specialized.NotifyCollectionChangedEventArgs self, System.Collections.Generic.IList<TFrom> from, System.Collections.Generic.IList<object> to) -> void
~static Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsExtensions.WithCount(this System.Collections.Specialized.NotifyCollectionChangedEventArgs e, int count) -> Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx
~static Microsoft.Maui.Controls.Internals.PageExtensions.AncestorToRoot(this Microsoft.Maui.Controls.Page page) -> Microsoft.Maui.Controls.Page
~static Microsoft.Maui.Controls.Internals.Performance.Provider.get -> Microsoft.Maui.Controls.Internals.IPerformanceProvider
~static Microsoft.Maui.Controls.Internals.Performance.SetProvider(Microsoft.Maui.Controls.Internals.IPerformanceProvider instance) -> void
~static Microsoft.Maui.Controls.Internals.Performance.Start(out string reference, string tag = null, string path = null, string member = null) -> void
~static Microsoft.Maui.Controls.Internals.Performance.Start(string reference, string tag = null, string path = null, string member = null) -> void
~static Microsoft.Maui.Controls.Internals.Performance.Stop(string reference, string tag = null, string path = null, string member = null) -> void
~static Microsoft.Maui.Controls.Internals.Profile.Data -> System.Collections.Generic.List<Microsoft.Maui.Controls.Internals.Profile.Datum>
~static Microsoft.Maui.Controls.Internals.Profile.FrameBegin(string name = "", int line = 0) -> void
~static Microsoft.Maui.Controls.Internals.Profile.FrameEnd(string name = "") -> void
~static Microsoft.Maui.Controls.Internals.Profile.FramePartition(string id, int line = 0) -> void
~static Microsoft.Maui.Controls.Internals.PropertyPropagationExtensions.PropagatePropertyChanged(string propertyName, Microsoft.Maui.Controls.Element target, Microsoft.Maui.Controls.Element source) -> void
~static Microsoft.Maui.Controls.Internals.Registrar.ExtraAssemblies.get -> System.Collections.Generic.IEnumerable<System.Reflection.Assembly>
~static Microsoft.Maui.Controls.Internals.Registrar.ExtraAssemblies.set -> void
~static Microsoft.Maui.Controls.Internals.Registrar.RegisterAll(System.Type[] attrTypes, Microsoft.Maui.Controls.InitializationFlags flags, Microsoft.Maui.IFontRegistrar fontRegistrar = null) -> void
~static Microsoft.Maui.Controls.Internals.Registrar.RegisterAll(System.Type[] attrTypes, Microsoft.Maui.IFontRegistrar fontRegistrar = null) -> void
~static Microsoft.Maui.Controls.Internals.Registrar.Registered.get -> Microsoft.Maui.Controls.Internals.Registrar<Microsoft.Maui.Controls.IRegisterable>
~static Microsoft.Maui.Controls.Internals.Registrar.RegisterEffect(string resolutionName, string id, System.Type effectType) -> void
~static Microsoft.Maui.Controls.Internals.Registrar.RegisterEffects(string resolutionName, Microsoft.Maui.Controls.ExportEffectAttribute[] effectAttributes) -> void
~static Microsoft.Maui.Controls.Internals.Registrar.RegisterRenderers(Microsoft.Maui.Controls.HandlerAttribute[] attributes) -> void
~static Microsoft.Maui.Controls.Internals.Registrar.RegisterRendererToHandlerShim(System.Func<object, Microsoft.Maui.IViewHandler> handlerShim) -> void
~static Microsoft.Maui.Controls.Internals.ResourceLoader.ResourceProvider2.get -> System.Func<Microsoft.Maui.Controls.Internals.ResourceLoader.ResourceLoadingQuery, Microsoft.Maui.Controls.Internals.ResourceLoader.ResourceLoadingResponse>
~static Microsoft.Maui.Controls.Internals.TextTransformUtilites.GetTransformedText(string source, Microsoft.Maui.TextTransform textTransform) -> string
~static Microsoft.Maui.Controls.Internals.TextTransformUtilites.SetPlainText(Microsoft.Maui.Controls.InputView inputView, string platformText) -> void
~static Microsoft.Maui.Controls.KnownColor.Accent.get -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.KnownColor.Default.get -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.KnownColor.SetAccent(Microsoft.Maui.Graphics.Color value) -> void
~static Microsoft.Maui.Controls.KnownColor.Transparent.get -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.Label.ControlsLabelMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.ILabel, Microsoft.Maui.Handlers.LabelHandler>
~static Microsoft.Maui.Controls.Label.MapLineBreakMode(Microsoft.Maui.Handlers.ILabelHandler handler, Microsoft.Maui.Controls.Label label) -> void
~static Microsoft.Maui.Controls.Label.MapLineBreakMode(Microsoft.Maui.Handlers.LabelHandler handler, Microsoft.Maui.Controls.Label label) -> void
~static Microsoft.Maui.Controls.Label.MapMaxLines(Microsoft.Maui.Handlers.ILabelHandler handler, Microsoft.Maui.Controls.Label label) -> void
~static Microsoft.Maui.Controls.Label.MapText(Microsoft.Maui.Handlers.ILabelHandler handler, Microsoft.Maui.Controls.Label label) -> void
~static Microsoft.Maui.Controls.Label.MapText(Microsoft.Maui.Handlers.LabelHandler handler, Microsoft.Maui.Controls.Label label) -> void
~static Microsoft.Maui.Controls.Label.MapTextType(Microsoft.Maui.Handlers.ILabelHandler handler, Microsoft.Maui.Controls.Label label) -> void
~static Microsoft.Maui.Controls.Label.MapTextType(Microsoft.Maui.Handlers.LabelHandler handler, Microsoft.Maui.Controls.Label label) -> void
~static Microsoft.Maui.Controls.Layout.ControlsLayoutMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.IView, Microsoft.Maui.IViewHandler>
~static Microsoft.Maui.Controls.Layout.MapInputTransparent(Microsoft.Maui.Handlers.LayoutHandler handler, Microsoft.Maui.Controls.Layout layout) -> void
~static Microsoft.Maui.Controls.Layout.MapInputTransparent(Microsoft.Maui.ILayoutHandler handler, Microsoft.Maui.Controls.Layout layout) -> void
~static Microsoft.Maui.Controls.MenuItem.GetAccelerator(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.Controls.Accelerator
~static Microsoft.Maui.Controls.MenuItem.SetAccelerator(Microsoft.Maui.Controls.BindableObject bindable, Microsoft.Maui.Controls.Accelerator value) -> void
~static Microsoft.Maui.Controls.MessagingCenter.Instance.get -> Microsoft.Maui.Controls.IMessagingCenter
~static Microsoft.Maui.Controls.MessagingCenter.Send<TSender, TArgs>(TSender sender, string message, TArgs args) -> void
~static Microsoft.Maui.Controls.MessagingCenter.Send<TSender>(TSender sender, string message) -> void
~static Microsoft.Maui.Controls.MessagingCenter.Subscribe<TSender, TArgs>(object subscriber, string message, System.Action<TSender, TArgs> callback, TSender source = null) -> void
~static Microsoft.Maui.Controls.MessagingCenter.Subscribe<TSender>(object subscriber, string message, System.Action<TSender> callback, TSender source = null) -> void
~static Microsoft.Maui.Controls.MessagingCenter.Unsubscribe<TSender, TArgs>(object subscriber, string message) -> void
~static Microsoft.Maui.Controls.MessagingCenter.Unsubscribe<TSender>(object subscriber, string message) -> void
~static Microsoft.Maui.Controls.MultiPage<T>.GetIndex(T page) -> int
~static Microsoft.Maui.Controls.MultiPage<T>.SetIndex(Microsoft.Maui.Controls.Page page, int index) -> void
~static Microsoft.Maui.Controls.NameScopeExtensions.FindByName<T>(this Microsoft.Maui.Controls.Element element, string name) -> T
~static Microsoft.Maui.Controls.NavigationPage.ControlsNavigationPageMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.IStackNavigationView, Microsoft.Maui.Handlers.NavigationViewHandler>
~static Microsoft.Maui.Controls.NavigationPage.GetBackButtonTitle(Microsoft.Maui.Controls.BindableObject page) -> string
~static Microsoft.Maui.Controls.NavigationPage.GetHasBackButton(Microsoft.Maui.Controls.Page page) -> bool
~static Microsoft.Maui.Controls.NavigationPage.GetHasNavigationBar(Microsoft.Maui.Controls.BindableObject page) -> bool
~static Microsoft.Maui.Controls.NavigationPage.GetIconColor(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.NavigationPage.GetTitleIconImageSource(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.Controls.ImageSource
~static Microsoft.Maui.Controls.NavigationPage.GetTitleView(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.Controls.View
~static Microsoft.Maui.Controls.NavigationPage.SetBackButtonTitle(Microsoft.Maui.Controls.BindableObject page, string value) -> void
~static Microsoft.Maui.Controls.NavigationPage.SetHasBackButton(Microsoft.Maui.Controls.Page page, bool value) -> void
~static Microsoft.Maui.Controls.NavigationPage.SetHasNavigationBar(Microsoft.Maui.Controls.BindableObject page, bool value) -> void
~static Microsoft.Maui.Controls.NavigationPage.SetIconColor(Microsoft.Maui.Controls.BindableObject bindable, Microsoft.Maui.Graphics.Color value) -> void
~static Microsoft.Maui.Controls.NavigationPage.SetTitleIconImageSource(Microsoft.Maui.Controls.BindableObject bindable, Microsoft.Maui.Controls.ImageSource value) -> void
~static Microsoft.Maui.Controls.NavigationPage.SetTitleView(Microsoft.Maui.Controls.BindableObject bindable, Microsoft.Maui.Controls.View value) -> void
~static Microsoft.Maui.Controls.OnIdiom<T>.implicit operator T(Microsoft.Maui.Controls.OnIdiom<T> onIdiom) -> T
~static Microsoft.Maui.Controls.OnPlatform<T>.implicit operator T(Microsoft.Maui.Controls.OnPlatform<T> onPlatform) -> T
~static Microsoft.Maui.Controls.PanGestureRecognizer.CurrentId.get -> Microsoft.Maui.Controls.Internals.AutoId
~static Microsoft.Maui.Controls.Picker.ControlsPickerMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.IPicker, Microsoft.Maui.Handlers.PickerHandler>
~static Microsoft.Maui.Controls.Platform.ApplicationExtensions.UpdateWindowSoftInputModeAdjust(this Android.App.Application platformView, Microsoft.Maui.Controls.Application application) -> void
~static Microsoft.Maui.Controls.Platform.BottomNavigationViewUtils.CreateItemBackgroundDrawable() -> Android.Graphics.Drawables.Drawable
~static Microsoft.Maui.Controls.Platform.BottomNavigationViewUtils.CreateMoreBottomSheet(System.Action<int, Google.Android.Material.BottomSheet.BottomSheetDialog> selectCallback, Microsoft.Maui.IMauiContext mauiContext, System.Collections.Generic.List<(string title, Microsoft.Maui.Controls.ImageSource icon, bool tabEnabled)> items) -> Google.Android.Material.BottomSheet.BottomSheetDialog
~static Microsoft.Maui.Controls.Platform.BottomNavigationViewUtils.SetShiftMode(this Google.Android.Material.BottomNavigation.BottomNavigationView bottomNavigationView, bool enableShiftMode, bool enableItemShiftMode) -> void
~static Microsoft.Maui.Controls.Platform.BrushExtensions.UpdateBackground(this Android.Graphics.Drawables.GradientDrawable gradientDrawable, Microsoft.Maui.Controls.Brush brush, int height, int width) -> void
~static Microsoft.Maui.Controls.Platform.BrushExtensions.UpdateBackground(this Android.Graphics.Paint paint, Microsoft.Maui.Controls.Brush brush, int height, int width) -> void
~static Microsoft.Maui.Controls.Platform.BrushExtensions.UpdateBackground(this Android.Views.View view, Microsoft.Maui.Controls.Brush brush) -> void
~static Microsoft.Maui.Controls.Platform.BrushExtensions.UseGradients(this Android.Graphics.Drawables.GradientDrawable gradientDrawable) -> bool
~static Microsoft.Maui.Controls.Platform.ButtonExtensions.UpdateContentLayout(this Google.Android.Material.Button.MaterialButton materialButton, Microsoft.Maui.Controls.Button button) -> void
~static Microsoft.Maui.Controls.Platform.ButtonExtensions.UpdateLineBreakMode(this AndroidX.AppCompat.Widget.AppCompatButton nativeControl, Microsoft.Maui.Controls.Button button) -> void
~static Microsoft.Maui.Controls.Platform.ButtonExtensions.UpdateText(this Google.Android.Material.Button.MaterialButton platformButton, Microsoft.Maui.Controls.Button button) -> void
~static Microsoft.Maui.Controls.Platform.EditTextExtensions.UpdateImeOptions(this Android.Widget.EditText editText, Microsoft.Maui.Controls.Entry entry) -> void
~static Microsoft.Maui.Controls.Platform.EditTextExtensions.UpdateText(this Android.Widget.EditText editText, Microsoft.Maui.Controls.InputView inputView) -> void
~static Microsoft.Maui.Controls.Platform.ElevationHelper.SetElevation(Android.Views.View view, float? elevation) -> void
~static Microsoft.Maui.Controls.Platform.ElevationHelper.SetElevation(Android.Views.View view, Microsoft.Maui.Controls.VisualElement element) -> void
~static Microsoft.Maui.Controls.Platform.PlatformConfigurationExtensions.OnThisPlatform<T>(this T element) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, T>
~static Microsoft.Maui.Controls.Platform.RecyclerViewExtensions.UpdateSelection(this AndroidX.RecyclerView.Widget.RecyclerView recyclerView, Microsoft.Maui.Controls.SelectableItemsView selectableItemsView) -> void
~static Microsoft.Maui.Controls.Platform.SearchViewExtensions.UpdateText(this AndroidX.AppCompat.Widget.SearchView searchView, Microsoft.Maui.Controls.InputView inputView) -> void
~static Microsoft.Maui.Controls.Platform.TextViewExtensions.UpdateLineBreakMode(this Android.Widget.TextView textView, Microsoft.Maui.Controls.Label label) -> void
~static Microsoft.Maui.Controls.Platform.TextViewExtensions.UpdateMaxLines(this Android.Widget.TextView textView, Microsoft.Maui.Controls.Label label) -> void
~static Microsoft.Maui.Controls.Platform.TextViewExtensions.UpdateText(this Android.Widget.TextView textView, Microsoft.Maui.Controls.Label label) -> void
~static Microsoft.Maui.Controls.Platform.ViewExtensions.EnsureId(this Android.Views.View view) -> void
~static Microsoft.Maui.Controls.Platform.ViewExtensions.SetBackground(this Android.Views.View view, Android.Graphics.Drawables.Drawable drawable) -> void
~static Microsoft.Maui.Controls.Platform.ViewExtensions.SetElevation(this Android.Views.View view, float value) -> bool
~static Microsoft.Maui.Controls.Platform.WebViewExtensions.UpdateDisplayZoomControls(this Android.Webkit.WebView platformView, Microsoft.Maui.Controls.WebView webView) -> void
~static Microsoft.Maui.Controls.Platform.WebViewExtensions.UpdateEnableZoomControls(this Android.Webkit.WebView platformView, Microsoft.Maui.Controls.WebView webView) -> void
~static Microsoft.Maui.Controls.Platform.WebViewExtensions.UpdateMixedContentMode(this Android.Webkit.WebView platformView, Microsoft.Maui.Controls.WebView webView) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.GetSendAppearingEventOnResume(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.GetSendAppearingEventOnResume(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Application> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.GetSendDisappearingEventOnPause(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.GetSendDisappearingEventOnPause(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Application> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.GetShouldPreserveKeyboardOnResume(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.GetShouldPreserveKeyboardOnResume(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Application> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.SendAppearingEventOnResume(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Application> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Application>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.SendDisappearingEventOnPause(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Application> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Application>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.SetSendAppearingEventOnResume(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.SetSendDisappearingEventOnPause(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.SetShouldPreserveKeyboardOnResume(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.ShouldPreserveKeyboardOnResume(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Application> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Application>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.NavigationPage.GetBarHeight(Microsoft.Maui.Controls.BindableObject element) -> int
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.NavigationPage.GetBarHeight(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.NavigationPage> config) -> int
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.NavigationPage.SetBarHeight(Microsoft.Maui.Controls.BindableObject element, int value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.NavigationPage.SetBarHeight(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.NavigationPage> config, int value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.NavigationPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Application.GetWindowSoftInputModeAdjust(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WindowSoftInputModeAdjust
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Application.GetWindowSoftInputModeAdjust(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Application> config) -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WindowSoftInputModeAdjust
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Application.SetWindowSoftInputModeAdjust(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WindowSoftInputModeAdjust value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Application.UseWindowSoftInputModeAdjust(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Application> config, Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WindowSoftInputModeAdjust value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Application>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button.GetUseDefaultPadding(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button.GetUseDefaultShadow(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button.SetUseDefaultPadding(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button.SetUseDefaultPadding(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Button> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Button>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button.SetUseDefaultShadow(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button.SetUseDefaultShadow(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Button> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Button>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button.UseDefaultPadding(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Button> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button.UseDefaultShadow(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Button> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Entry.GetImeOptions(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Entry.ImeOptions(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Entry> config) -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Entry.SetImeOptions(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Entry.SetImeOptions(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Entry> config, Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Entry>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.GetIsShadowEnabled(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.GetIsShadowEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.ImageButton> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.GetShadowColor(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.GetShadowColor(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.ImageButton> config) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.GetShadowOffset(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Graphics.Size
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.GetShadowOffset(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.ImageButton> config) -> Microsoft.Maui.Graphics.Size
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.GetShadowRadius(Microsoft.Maui.Controls.BindableObject element) -> double
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.GetShadowRadius(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.ImageButton> config) -> double
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.SetIsShadowEnabled(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.SetIsShadowEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.ImageButton> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.ImageButton>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.SetShadowColor(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Graphics.Color value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.SetShadowColor(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.ImageButton> config, Microsoft.Maui.Graphics.Color value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.ImageButton>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.SetShadowOffset(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Graphics.Size value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.SetShadowOffset(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.ImageButton> config, Microsoft.Maui.Graphics.Size value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.ImageButton>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.SetShadowRadius(Microsoft.Maui.Controls.BindableObject element, double value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.SetShadowRadius(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.ImageButton> config, double value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.ImageButton>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ListView.GetIsFastScrollEnabled(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ListView.IsFastScrollEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.ListView> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ListView.SetIsFastScrollEnabled(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ListView.SetIsFastScrollEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.ListView> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.ListView>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.SwipeView.GetSwipeTransitionMode(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.SwipeTransitionMode
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.SwipeView.GetSwipeTransitionMode(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.SwipeView> config) -> Microsoft.Maui.SwipeTransitionMode
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.SwipeView.SetSwipeTransitionMode(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.SwipeTransitionMode value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.SwipeView.SetSwipeTransitionMode(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.SwipeView> config, Microsoft.Maui.SwipeTransitionMode value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.SwipeView>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.DisableSmoothScroll(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage> config) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.DisableSwipePaging(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage> config) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.EnableSmoothScroll(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage> config) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.EnableSwipePaging(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage> config) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.GetIsSmoothScrollEnabled(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.GetIsSwipePagingEnabled(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.GetMaxItemCount(Microsoft.Maui.Controls.BindableObject element) -> int
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.GetMaxItemCount(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage> config) -> int
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.GetOffscreenPageLimit(Microsoft.Maui.Controls.BindableObject element) -> int
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.GetToolbarPlacement(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ToolbarPlacement
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.GetToolbarPlacement(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage> config) -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ToolbarPlacement
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.IsSmoothScrollEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.IsSwipePagingEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.OffscreenPageLimit(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage> config) -> int
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.SetIsSmoothScrollEnabled(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.SetIsSmoothScrollEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.SetIsSwipePagingEnabled(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.SetIsSwipePagingEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.SetOffscreenPageLimit(Microsoft.Maui.Controls.BindableObject element, int value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.SetOffscreenPageLimit(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage> config, int value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.SetToolbarPlacement(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ToolbarPlacement value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.SetToolbarPlacement(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage> config, Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ToolbarPlacement value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.TabbedPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ViewCell.GetIsContextActionsLegacyModeEnabled(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ViewCell.GetIsContextActionsLegacyModeEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Cell> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ViewCell.SetIsContextActionsLegacyModeEnabled(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ViewCell.SetIsContextActionsLegacyModeEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Cell> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.Cell>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement.GetElevation(Microsoft.Maui.Controls.VisualElement element) -> float?
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement.GetElevation(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.VisualElement> config) -> float?
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement.GetIsLegacyColorModeEnabled(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement.GetIsLegacyColorModeEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.VisualElement> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement.SetElevation(Microsoft.Maui.Controls.VisualElement element, float? value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement.SetElevation(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.VisualElement> config, float? value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement.SetIsLegacyColorModeEnabled(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement.SetIsLegacyColorModeEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.VisualElement> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.DisplayZoomControls(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.WebView> config, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.EnableZoomControls(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.WebView> config, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.GetDisplayZoomControls(Microsoft.Maui.Controls.WebView element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.GetEnableZoomControls(Microsoft.Maui.Controls.WebView element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.GetMixedContentMode(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.MixedContentHandling
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.MixedContentMode(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.WebView> config) -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.MixedContentHandling
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.SetDisplayZoomControls(Microsoft.Maui.Controls.WebView element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.SetDisplayZoomControls(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.WebView> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.WebView>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.SetEnableZoomControls(Microsoft.Maui.Controls.WebView element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.SetEnableZoomControls(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.WebView> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.WebView>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.SetMixedContentMode(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.MixedContentHandling value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.SetMixedContentMode(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.WebView> config, Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.MixedContentHandling value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.WebView>
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.ZoomControlsDisplayed(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.WebView> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.ZoomControlsEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Android, Microsoft.Maui.Controls.WebView> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.BoxView.GetHasCornerRadius(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.BoxView.GetHasCornerRadius(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.GTK, Microsoft.Maui.Controls.BoxView> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.BoxView.SetHasCornerRadius(Microsoft.Maui.Controls.BindableObject element, bool tabPosition) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.BoxView.SetHasCornerRadius(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.GTK, Microsoft.Maui.Controls.BoxView> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.GTK, Microsoft.Maui.Controls.BoxView>
~static Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.NavigationPage.GetBackButtonIcon(Microsoft.Maui.Controls.BindableObject element) -> string
~static Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.NavigationPage.GetBackButtonIcon(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.GTK, Microsoft.Maui.Controls.NavigationPage> config) -> string
~static Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.NavigationPage.SetBackButtonIcon(Microsoft.Maui.Controls.BindableObject element, string backButtonIcon) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.NavigationPage.SetBackButtonIcon(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.GTK, Microsoft.Maui.Controls.NavigationPage> config, string value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.GTK, Microsoft.Maui.Controls.NavigationPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabbedPage.GetTabPosition(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabPosition
~static Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabbedPage.GetTabPosition(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.GTK, Microsoft.Maui.Controls.TabbedPage> config) -> Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabPosition
~static Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabbedPage.SetTabPosition(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabPosition tabPosition) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabbedPage.SetTabPosition(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.GTK, Microsoft.Maui.Controls.TabbedPage> config, Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabPosition value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.GTK, Microsoft.Maui.Controls.TabbedPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.GetEnableAccessibilityScalingForNamedFontSizes(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.GetEnableAccessibilityScalingForNamedFontSizes(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Application> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.GetHandleControlUpdatesOnMainThread(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.GetHandleControlUpdatesOnMainThread(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Application> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.GetPanGestureRecognizerShouldRecognizeSimultaneously(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.GetPanGestureRecognizerShouldRecognizeSimultaneously(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Application> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.SetEnableAccessibilityScalingForNamedFontSizes(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.SetEnableAccessibilityScalingForNamedFontSizes(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Application> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Application>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.SetHandleControlUpdatesOnMainThread(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.SetHandleControlUpdatesOnMainThread(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Application> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Application>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.SetPanGestureRecognizerShouldRecognizeSimultaneously(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.SetPanGestureRecognizerShouldRecognizeSimultaneously(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Application> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Application>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Cell.DefaultBackgroundColor(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Cell> config) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Cell.GetDefaultBackgroundColor(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Cell.SetDefaultBackgroundColor(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Graphics.Color value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Cell.SetDefaultBackgroundColor(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Cell> config, Microsoft.Maui.Graphics.Color value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Cell>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.DatePicker.GetUpdateMode(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.DatePicker.SetUpdateMode(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.DatePicker.SetUpdateMode(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.DatePicker> config, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.DatePicker>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.DatePicker.UpdateMode(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.DatePicker> config) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.AdjustsFontSizeToFitWidth(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Entry> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.DisableAdjustsFontSizeToFitWidth(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Entry> config) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Entry>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.EnableAdjustsFontSizeToFitWidth(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Entry> config) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Entry>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.GetAdjustsFontSizeToFitWidth(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.GetCursorColor(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.GetCursorColor(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Entry> config) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.SetAdjustsFontSizeToFitWidth(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.SetAdjustsFontSizeToFitWidth(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Entry> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Entry>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.SetCursorColor(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Graphics.Color value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.SetCursorColor(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Entry> config, Microsoft.Maui.Graphics.Color value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Entry>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.FlyoutPage.GetApplyShadow(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.FlyoutPage.GetApplyShadow(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.FlyoutPage> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.FlyoutPage.SetApplyShadow(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.FlyoutPage.SetApplyShadow(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.FlyoutPage> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.FlyoutPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.GetGroupHeaderStyle(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.GroupHeaderStyle
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.GetGroupHeaderStyle(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.ListView> config) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.GroupHeaderStyle
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.GetRowAnimationsEnabled(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.GetSeparatorStyle(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SeparatorStyle
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.GetSeparatorStyle(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.ListView> config) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SeparatorStyle
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.RowAnimationsEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.ListView> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.SetGroupHeaderStyle(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.GroupHeaderStyle value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.SetGroupHeaderStyle(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.ListView> config, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.GroupHeaderStyle value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.ListView>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.SetRowAnimationsEnabled(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.SetRowAnimationsEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.ListView> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.ListView>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.SetSeparatorStyle(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SeparatorStyle value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.SetSeparatorStyle(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.ListView> config, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SeparatorStyle value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.ListView>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.DisableTranslucentNavigationBar(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.NavigationPage> config) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.NavigationPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.EnableTranslucentNavigationBar(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.NavigationPage> config) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.NavigationPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.GetHideNavigationBarSeparator(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.GetIsNavigationBarTranslucent(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.GetPrefersLargeTitles(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.GetStatusBarTextColorMode(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarTextColorMode
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.GetStatusBarTextColorMode(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.NavigationPage> config) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarTextColorMode
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.HideNavigationBarSeparator(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.NavigationPage> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.IsNavigationBarTranslucent(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.NavigationPage> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.PrefersLargeTitles(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.NavigationPage> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.SetHideNavigationBarSeparator(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.SetHideNavigationBarSeparator(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.NavigationPage> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.NavigationPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.SetIsNavigationBarTranslucent(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.SetIsNavigationBarTranslucent(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.NavigationPage> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.NavigationPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.SetPrefersLargeTitles(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.SetPrefersLargeTitles(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.NavigationPage> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.NavigationPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.SetStatusBarTextColorMode(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarTextColorMode value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.SetStatusBarTextColorMode(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.NavigationPage> config, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarTextColorMode value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.NavigationPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.GetLargeTitleDisplay(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.LargeTitleDisplayMode
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.GetModalPresentationStyle(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.GetPreferredStatusBarUpdateAnimation(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIStatusBarAnimation
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.GetPrefersHomeIndicatorAutoHidden(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.GetPrefersStatusBarHidden(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarHiddenMode
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.GetSafeAreaInsets(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Thickness
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.GetUseSafeArea(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.LargeTitleDisplay(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page> config) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.LargeTitleDisplayMode
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.ModalPresentationStyle(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page> config) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.PreferredStatusBarUpdateAnimation(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page> config) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIStatusBarAnimation
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.PrefersHomeIndicatorAutoHidden(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.PrefersStatusBarHidden(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page> config) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarHiddenMode
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SafeAreaInsets(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page> config) -> Microsoft.Maui.Thickness
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetLargeTitleDisplay(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.LargeTitleDisplayMode value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetLargeTitleDisplay(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page> config, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.LargeTitleDisplayMode value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetModalPresentationStyle(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page> config, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetPreferredStatusBarUpdateAnimation(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIStatusBarAnimation value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetPreferredStatusBarUpdateAnimation(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page> config, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIStatusBarAnimation value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetPrefersHomeIndicatorAutoHidden(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetPrefersHomeIndicatorAutoHidden(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetPrefersStatusBarHidden(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarHiddenMode value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetPrefersStatusBarHidden(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page> config, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarHiddenMode value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetSafeAreaInsets(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page> config, Microsoft.Maui.Thickness value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetUseSafeArea(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SetUseSafeArea(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.UsingSafeArea(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Page> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Picker.GetUpdateMode(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Picker.SetUpdateMode(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Picker.SetUpdateMode(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Picker> config, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Picker>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Picker.UpdateMode(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Picker> config) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ScrollView.GetShouldDelayContentTouches(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ScrollView.SetShouldDelayContentTouches(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ScrollView.SetShouldDelayContentTouches(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.ScrollView> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.ScrollView>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ScrollView.ShouldDelayContentTouches(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.ScrollView> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SearchBar.GetSearchBarStyle(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UISearchBarStyle
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SearchBar.GetSearchBarStyle(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.SearchBar> config) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UISearchBarStyle
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SearchBar.SetSearchBarStyle(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UISearchBarStyle style) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SearchBar.SetSearchBarStyle(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.SearchBar> config, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UISearchBarStyle style) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.SearchBar>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Slider.GetUpdateOnTap(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Slider.GetUpdateOnTap(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Slider> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Slider.SetUpdateOnTap(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Slider.SetUpdateOnTap(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Slider> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.Slider>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SwipeView.GetSwipeTransitionMode(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.SwipeTransitionMode
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SwipeView.GetSwipeTransitionMode(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.SwipeView> config) -> Microsoft.Maui.SwipeTransitionMode
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SwipeView.SetSwipeTransitionMode(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.SwipeTransitionMode value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SwipeView.SetSwipeTransitionMode(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.SwipeView> config, Microsoft.Maui.SwipeTransitionMode value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.SwipeView>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TabbedPage.GetTranslucencyMode(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TranslucencyMode
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TabbedPage.GetTranslucencyMode(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.TabbedPage> config) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TranslucencyMode
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TabbedPage.SetTranslucencyMode(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TranslucencyMode value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TabbedPage.SetTranslucencyMode(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.TabbedPage> config, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TranslucencyMode value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.TabbedPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TimePicker.GetUpdateMode(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TimePicker.SetUpdateMode(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TimePicker.SetUpdateMode(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.TimePicker> config, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.TimePicker>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TimePicker.UpdateMode(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.TimePicker> config) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.CanBecomeFirstResponder(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetBlurEffect(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.BlurEffectStyle
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetBlurEffect(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement> config) -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.BlurEffectStyle
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetCanBecomeFirstResponder(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetIsLegacyColorModeEnabled(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetIsLegacyColorModeEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetIsShadowEnabled(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetIsShadowEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetShadowColor(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetShadowColor(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement> config) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetShadowOffset(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Graphics.Size
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetShadowOffset(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement> config) -> Microsoft.Maui.Graphics.Size
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetShadowOpacity(Microsoft.Maui.Controls.BindableObject element) -> double
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetShadowOpacity(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement> config) -> double
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetShadowRadius(Microsoft.Maui.Controls.BindableObject element) -> double
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.GetShadowRadius(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement> config) -> double
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetBlurEffect(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.BlurEffectStyle value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetCanBecomeFirstResponder(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetCanBecomeFirstResponder(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetIsLegacyColorModeEnabled(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetIsLegacyColorModeEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetIsShadowEnabled(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetIsShadowEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetShadowColor(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Graphics.Color value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetShadowColor(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement> config, Microsoft.Maui.Graphics.Color value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetShadowOffset(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Graphics.Size value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetShadowOffset(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement> config, Microsoft.Maui.Graphics.Size value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetShadowOpacity(Microsoft.Maui.Controls.BindableObject element, double value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetShadowOpacity(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement> config, double value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetShadowRadius(Microsoft.Maui.Controls.BindableObject element, double value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.SetShadowRadius(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement> config, double value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.UseBlurEffect(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement> config, Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.BlurEffectStyle value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.iOS, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage.GetNavigationTransitionPopStyle(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle
~static Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage.GetNavigationTransitionPopStyle(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.macOS, Microsoft.Maui.Controls.NavigationPage> config) -> Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle
~static Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage.GetNavigationTransitionPushStyle(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle
~static Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage.GetNavigationTransitionPushStyle(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.macOS, Microsoft.Maui.Controls.NavigationPage> config) -> Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle
~static Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage.SetNavigationTransitionPopStyle(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage.SetNavigationTransitionPushStyle(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage.SetNavigationTransitionStyle(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle pushStyle, Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle popStyle) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage.SetNavigationTransitionStyle(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.macOS, Microsoft.Maui.Controls.NavigationPage> config, Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle pushStyle, Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle popStyle) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.macOS, Microsoft.Maui.Controls.NavigationPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.Page.GetTabOrder(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.VisualElement[]
~static Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.Page.GetTabOrder(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.macOS, Microsoft.Maui.Controls.Page> config) -> Microsoft.Maui.Controls.VisualElement[]
~static Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.Page.SetTabOrder(Microsoft.Maui.Controls.BindableObject element, params Microsoft.Maui.Controls.VisualElement[] value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.Page.SetTabOrder(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.macOS, Microsoft.Maui.Controls.Page> config, params Microsoft.Maui.Controls.VisualElement[] value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.macOS, Microsoft.Maui.Controls.Page>
~static Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.TabbedPage.GetTabsStyle(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.TabsStyle
~static Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.TabbedPage.GetTabsStyle(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.macOS, Microsoft.Maui.Controls.TabbedPage> config) -> Microsoft.Maui.Controls.TabsStyle
~static Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.TabbedPage.HideTabs(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.macOS, Microsoft.Maui.Controls.TabbedPage> config) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.macOS, Microsoft.Maui.Controls.TabbedPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.TabbedPage.SetShowTabs(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.macOS, Microsoft.Maui.Controls.TabbedPage> config, Microsoft.Maui.Controls.TabsStyle value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.macOS, Microsoft.Maui.Controls.TabbedPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.TabbedPage.SetTabsStyle(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.TabsStyle value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.TabbedPage.ShowTabs(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.macOS, Microsoft.Maui.Controls.TabbedPage> config) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.macOS, Microsoft.Maui.Controls.TabbedPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.TabbedPage.ShowTabsOnNavigation(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.macOS, Microsoft.Maui.Controls.TabbedPage> config) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.macOS, Microsoft.Maui.Controls.TabbedPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.GetActiveBezelInteractionElement(Microsoft.Maui.Controls.BindableObject application) -> Microsoft.Maui.Controls.Element
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.GetActiveBezelInteractionElement(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Application> config) -> Microsoft.Maui.Controls.Element
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.GetOverlayContent(Microsoft.Maui.Controls.BindableObject application) -> Microsoft.Maui.Controls.View
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.GetOverlayContent(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Application> config) -> Microsoft.Maui.Controls.View
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.GetUseBezelInteraction(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.GetUseBezelInteraction(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Application> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.SetActiveBezelInteractionElement(Microsoft.Maui.Controls.BindableObject application, Microsoft.Maui.Controls.Element value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.SetActiveBezelInteractionElement(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Application> config, Microsoft.Maui.Controls.Element value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Application>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.SetOverlayContent(Microsoft.Maui.Controls.BindableObject application, Microsoft.Maui.Controls.View value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.SetOverlayContent(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Application> config, Microsoft.Maui.Controls.View value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Application>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.SetUseBezelInteraction(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.SetUseBezelInteraction(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Application> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Application>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Entry.GetFontWeight(Microsoft.Maui.Controls.BindableObject element) -> string
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Entry.GetFontWeight(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Entry> config) -> string
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Entry.SetFontWeight(Microsoft.Maui.Controls.BindableObject element, string weight) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Entry.SetFontWeight(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Entry> config, string weight) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Entry>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image.GetBlendColor(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image.GetBlendColor(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Image> config) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image.GetFile(Microsoft.Maui.Controls.BindableObject element) -> string
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image.GetFile(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Image> config) -> string
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image.SetBlendColor(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Graphics.Color color) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image.SetBlendColor(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Image> config, Microsoft.Maui.Graphics.Color color) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Image>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image.SetFile(Microsoft.Maui.Controls.BindableObject element, string file) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image.SetFile(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Image> config, string file) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Image>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ItemsView.GetFocusedItemScrollPosition(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.ScrollToPosition
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ItemsView.GetFocusedItemScrollPosition(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.ItemsView> config) -> Microsoft.Maui.Controls.ScrollToPosition
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ItemsView.SetFocusedItemScrollPosition(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.ScrollToPosition position) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ItemsView.SetFocusedItemScrollPosition(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.ItemsView> config, Microsoft.Maui.Controls.ScrollToPosition position) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.ItemsView>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Label.GetFontWeight(Microsoft.Maui.Controls.BindableObject element) -> string
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Label.GetFontWeight(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Label> config) -> string
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Label.SetFontWeight(Microsoft.Maui.Controls.BindableObject element, string weight) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Label.SetFontWeight(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Label> config, string weight) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Label>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.NavigationPage.GetHasBreadCrumbsBar(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.NavigationPage.HasBreadCrumbsBar(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.NavigationPage> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.NavigationPage.SetHasBreadCrumbsBar(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.NavigationPage.SetHasBreadCrumbsBar(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.NavigationPage> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.NavigationPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Page.GetBreadCrumb(Microsoft.Maui.Controls.BindableObject page) -> string
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Page.GetBreadCrumb(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Page> config) -> string
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Page.SetBreadCrumb(Microsoft.Maui.Controls.BindableObject page, string value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Page.SetBreadCrumb(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Page> config, string value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Page>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ProgressBar.GetPulsingStatus(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ProgressBar.GetPulsingStatus(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.ProgressBar> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ProgressBar.SetPulsingStatus(Microsoft.Maui.Controls.BindableObject element, bool isPulsing) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ProgressBar.SetPulsingStatus(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.ProgressBar> config, bool isPulsing) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.ProgressBar>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ScrollView.GetHorizontalScrollStep(Microsoft.Maui.Controls.BindableObject element) -> int
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ScrollView.GetHorizontalScrollStep(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.ScrollView> config) -> int
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ScrollView.GetVerticalScrollStep(Microsoft.Maui.Controls.BindableObject element) -> int
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ScrollView.GetVerticalScrollStep(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.ScrollView> config) -> int
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ScrollView.SetHorizontalScrollStep(Microsoft.Maui.Controls.BindableObject element, int scrollStep) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ScrollView.SetHorizontalScrollStep(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.ScrollView> config, int scrollStep) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.ScrollView>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ScrollView.SetVerticalScrollStep(Microsoft.Maui.Controls.BindableObject element, int scrollStep) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ScrollView.SetVerticalScrollStep(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.ScrollView> config, int scrollStep) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.ScrollView>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Switch.GetColor(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Switch.GetColor(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Switch> config) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Switch.SetColor(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Graphics.Color color) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Switch.SetColor(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Switch> config, Microsoft.Maui.Graphics.Color color) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.Switch>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusBackView(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.View
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusBackView(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config) -> Microsoft.Maui.Controls.View
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusDirection(Microsoft.Maui.Controls.BindableObject element) -> string
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusDirection(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config) -> string
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusDownView(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.View
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusDownView(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config) -> Microsoft.Maui.Controls.View
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusForwardView(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.View
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusForwardView(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config) -> Microsoft.Maui.Controls.View
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusLeftView(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.View
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusLeftView(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config) -> Microsoft.Maui.Controls.View
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusRightView(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.View
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusRightView(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config) -> Microsoft.Maui.Controls.View
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusUpView(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.View
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetNextFocusUpView(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config) -> Microsoft.Maui.Controls.View
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetStyle(Microsoft.Maui.Controls.BindableObject element) -> string
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetStyle(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config) -> string
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetToolTip(Microsoft.Maui.Controls.BindableObject element) -> string
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.GetToolTip(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config) -> string
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.IsFocusAllowed(Microsoft.Maui.Controls.BindableObject element) -> bool?
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.IsFocusAllowed(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config) -> bool?
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.MoveFocusBack(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.MoveFocusDown(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.MoveFocusForward(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.MoveFocusLeft(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.MoveFocusRight(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.MoveFocusUp(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetFocusAllowed(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetFocusAllowed(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusBackView(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.View value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusBackView(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config, Microsoft.Maui.Controls.View value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusDirection(Microsoft.Maui.Controls.BindableObject element, string value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusDirection(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config, string value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusDownView(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.View value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusDownView(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config, Microsoft.Maui.Controls.View value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusForwardView(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.View value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusForwardView(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config, Microsoft.Maui.Controls.View value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusLeftView(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.View value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusLeftView(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config, Microsoft.Maui.Controls.View value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusRightView(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.View value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusRightView(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config, Microsoft.Maui.Controls.View value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusUpView(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.View value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetNextFocusUpView(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config, Microsoft.Maui.Controls.View value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetStyle(Microsoft.Maui.Controls.BindableObject element, string value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetStyle(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config, string value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetToolTip(Microsoft.Maui.Controls.BindableObject element, string value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.SetToolTip(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement> config, string value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Tizen, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Application.GetImageDirectory(Microsoft.Maui.Controls.BindableObject element) -> string
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Application.GetImageDirectory(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.Application> config) -> string
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Application.SetImageDirectory(Microsoft.Maui.Controls.BindableObject element, string value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Application.SetImageDirectory(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.Application> config, string value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.Application>
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.CollapsedPaneWidth(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.FlyoutPage> config, double value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.FlyoutPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.CollapsedPaneWidth(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.FlyoutPage> config) -> double
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.GetCollapsedPaneWidth(Microsoft.Maui.Controls.BindableObject element) -> double
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.GetCollapseStyle(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.CollapseStyle
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.GetCollapseStyle(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.FlyoutPage> config) -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.CollapseStyle
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.SetCollapsedPaneWidth(Microsoft.Maui.Controls.BindableObject element, double collapsedPaneWidth) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.SetCollapseStyle(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.CollapseStyle collapseStyle) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.SetCollapseStyle(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.FlyoutPage> config, Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.CollapseStyle value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.FlyoutPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.UsePartialCollapse(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.FlyoutPage> config) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.FlyoutPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.InputView.GetDetectReadingOrderFromContent(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.InputView.GetDetectReadingOrderFromContent(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.InputView> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.InputView.SetDetectReadingOrderFromContent(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.InputView.SetDetectReadingOrderFromContent(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.InputView> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.InputView>
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Label.GetDetectReadingOrderFromContent(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Label.GetDetectReadingOrderFromContent(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.Label> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Label.SetDetectReadingOrderFromContent(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Label.SetDetectReadingOrderFromContent(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.Label> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.Label>
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListView.GetSelectionMode(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListViewSelectionMode
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListView.GetSelectionMode(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.ListView> config) -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListViewSelectionMode
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListView.SetSelectionMode(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListViewSelectionMode value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListView.SetSelectionMode(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.ListView> config, Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListViewSelectionMode value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.ListView>
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page.GetToolbarDynamicOverflowEnabled(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page.GetToolbarDynamicOverflowEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.Page> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page.GetToolbarPlacement(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ToolbarPlacement
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page.GetToolbarPlacement(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.Page> config) -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ToolbarPlacement
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page.SetToolbarDynamicOverflowEnabled(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page.SetToolbarDynamicOverflowEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.Page> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.Page>
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page.SetToolbarPlacement(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ToolbarPlacement toolbarPlacement) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page.SetToolbarPlacement(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.Page> config, Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ToolbarPlacement value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.Page>
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.GetRefreshPullDirection(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.RefreshPullDirection
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.GetRefreshPullDirection(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.RefreshView> config) -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.RefreshPullDirection
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.SetRefreshPullDirection(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.RefreshPullDirection value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.SetRefreshPullDirection(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.RefreshView> config, Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.RefreshPullDirection value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.RefreshView>
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.SearchBar.DisableSpellCheck(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.SearchBar> config) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.SearchBar.EnableSpellCheck(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.SearchBar> config) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.SearchBar.GetIsSpellCheckEnabled(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.SearchBar.GetIsSpellCheckEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.SearchBar> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.SearchBar.IsSpellCheckEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.SearchBar> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.SearchBar.SetIsSpellCheckEnabled(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.SearchBar.SetIsSpellCheckEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.SearchBar> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.SearchBar>
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.DisableHeaderIcons(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.TabbedPage> config) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.EnableHeaderIcons(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.TabbedPage> config) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.GetHeaderIconsEnabled(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.GetHeaderIconsEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.TabbedPage> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.GetHeaderIconsSize(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Graphics.Size
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.GetHeaderIconsSize(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.TabbedPage> config) -> Microsoft.Maui.Graphics.Size
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.IsHeaderIconsEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.TabbedPage> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.SetHeaderIconsEnabled(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.SetHeaderIconsEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.TabbedPage> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.TabbedPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.SetHeaderIconsSize(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Graphics.Size value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.SetHeaderIconsSize(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.TabbedPage> config, Microsoft.Maui.Graphics.Size value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.TabbedPage>
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.GetAccessKey(Microsoft.Maui.Controls.BindableObject element) -> string
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.GetAccessKey(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.VisualElement> config) -> string
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.GetAccessKeyHorizontalOffset(Microsoft.Maui.Controls.BindableObject element) -> double
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.GetAccessKeyHorizontalOffset(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.VisualElement> config) -> double
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.GetAccessKeyPlacement(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.AccessKeyPlacement
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.GetAccessKeyPlacement(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.VisualElement> config) -> Microsoft.Maui.Controls.AccessKeyPlacement
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.GetAccessKeyVerticalOffset(Microsoft.Maui.Controls.BindableObject element) -> double
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.GetAccessKeyVerticalOffset(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.VisualElement> config) -> double
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.GetIsLegacyColorModeEnabled(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.GetIsLegacyColorModeEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.VisualElement> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.SetAccessKey(Microsoft.Maui.Controls.BindableObject element, string value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.SetAccessKey(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.VisualElement> config, string value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.SetAccessKeyHorizontalOffset(Microsoft.Maui.Controls.BindableObject element, double value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.SetAccessKeyHorizontalOffset(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.VisualElement> config, double value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.SetAccessKeyPlacement(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.AccessKeyPlacement value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.SetAccessKeyPlacement(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.VisualElement> config, Microsoft.Maui.Controls.AccessKeyPlacement value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.SetAccessKeyVerticalOffset(Microsoft.Maui.Controls.BindableObject element, double value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.SetAccessKeyVerticalOffset(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.VisualElement> config, double value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.SetIsLegacyColorModeEnabled(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.SetIsLegacyColorModeEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.VisualElement> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.VisualElement>
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebView.GetExecutionMode(Microsoft.Maui.Controls.BindableObject element) -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebViewExecutionMode
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebView.GetExecutionMode(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.WebView> config) -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebViewExecutionMode
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebView.GetIsJavaScriptAlertEnabled(Microsoft.Maui.Controls.BindableObject element) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebView.IsJavaScriptAlertEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.WebView> config) -> bool
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebView.SetExecutionMode(Microsoft.Maui.Controls.BindableObject element, Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebViewExecutionMode value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebView.SetExecutionMode(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.WebView> config, Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebViewExecutionMode value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.WebView>
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebView.SetIsJavaScriptAlertEnabled(Microsoft.Maui.Controls.BindableObject element, bool value) -> void
~static Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebView.SetIsJavaScriptAlertEnabled(this Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.WebView> config, bool value) -> Microsoft.Maui.Controls.IPlatformElementConfiguration<Microsoft.Maui.Controls.PlatformConfiguration.Windows, Microsoft.Maui.Controls.WebView>
~static Microsoft.Maui.Controls.PointCollection.implicit operator Microsoft.Maui.Controls.PointCollection(Microsoft.Maui.Graphics.Point[] d) -> Microsoft.Maui.Controls.PointCollection
~static Microsoft.Maui.Controls.RadioButton.ControlsRadioButtonMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.Controls.RadioButton, Microsoft.Maui.Handlers.RadioButtonHandler>
~static Microsoft.Maui.Controls.RadioButton.DefaultTemplate.get -> Microsoft.Maui.Controls.ControlTemplate
~static Microsoft.Maui.Controls.RadioButtonGroup.GetGroupName(Microsoft.Maui.Controls.BindableObject b) -> string
~static Microsoft.Maui.Controls.RadioButtonGroup.GetSelectedValue(Microsoft.Maui.Controls.BindableObject bindableObject) -> object
~static Microsoft.Maui.Controls.RadioButtonGroup.SetGroupName(Microsoft.Maui.Controls.BindableObject bindable, string groupName) -> void
~static Microsoft.Maui.Controls.RadioButtonGroup.SetSelectedValue(Microsoft.Maui.Controls.BindableObject bindable, object selectedValue) -> void
~static Microsoft.Maui.Controls.RefreshView.ControlsRefreshViewMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.IRefreshView, Microsoft.Maui.Handlers.RefreshViewHandler>
~static Microsoft.Maui.Controls.Region.FromLines(double[] lineHeights, double maxWidth, double startX, double endX, double startY) -> Microsoft.Maui.Controls.Region
~static Microsoft.Maui.Controls.Region.FromRectangles(System.Collections.Generic.IEnumerable<Microsoft.Maui.Graphics.Rect> rectangles) -> Microsoft.Maui.Controls.Region
~static Microsoft.Maui.Controls.RelativeBindingSource.Self.get -> Microsoft.Maui.Controls.RelativeBindingSource
~static Microsoft.Maui.Controls.RelativeBindingSource.TemplatedParent.get -> Microsoft.Maui.Controls.RelativeBindingSource
~static Microsoft.Maui.Controls.Routing.FormatRoute(string route) -> string
~static Microsoft.Maui.Controls.Routing.FormatRoute(System.Collections.Generic.List<string> segments) -> string
~static Microsoft.Maui.Controls.Routing.GetOrCreateContent(string route, System.IServiceProvider services = null) -> Microsoft.Maui.Controls.Element
~static Microsoft.Maui.Controls.Routing.GetRoute(Microsoft.Maui.Controls.BindableObject obj) -> string
~static Microsoft.Maui.Controls.Routing.RegisterRoute(string route, Microsoft.Maui.Controls.RouteFactory factory) -> void
~static Microsoft.Maui.Controls.Routing.RegisterRoute(string route, System.Type type) -> void
~static Microsoft.Maui.Controls.Routing.SetRoute(Microsoft.Maui.Controls.Element obj, string value) -> void
~static Microsoft.Maui.Controls.Routing.UnRegisterRoute(string route) -> void
~static Microsoft.Maui.Controls.ScrollView.ControlsScrollViewMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.IScrollView, Microsoft.Maui.Handlers.ScrollViewHandler>
~static Microsoft.Maui.Controls.SearchBar.ControlsSearchBarMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.ISearchBar, Microsoft.Maui.Handlers.SearchBarHandler>
~static Microsoft.Maui.Controls.SearchBar.MapText(Microsoft.Maui.Handlers.ISearchBarHandler handler, Microsoft.Maui.Controls.SearchBar searchBar) -> void
~static Microsoft.Maui.Controls.SearchBar.MapText(Microsoft.Maui.Handlers.SearchBarHandler handler, Microsoft.Maui.Controls.SearchBar searchBar) -> void
~static Microsoft.Maui.Controls.SearchHandler.SelectedItemProperty -> Microsoft.Maui.Controls.BindableProperty
~static Microsoft.Maui.Controls.SemanticProperties.GetDescription(Microsoft.Maui.Controls.BindableObject bindable) -> string
~static Microsoft.Maui.Controls.SemanticProperties.GetHeadingLevel(Microsoft.Maui.Controls.BindableObject bindable) -> Microsoft.Maui.SemanticHeadingLevel
~static Microsoft.Maui.Controls.SemanticProperties.GetHint(Microsoft.Maui.Controls.BindableObject bindable) -> string
~static Microsoft.Maui.Controls.SemanticProperties.SetDescription(Microsoft.Maui.Controls.BindableObject bindable, string value) -> void
~static Microsoft.Maui.Controls.SemanticProperties.SetHeadingLevel(Microsoft.Maui.Controls.BindableObject bindable, Microsoft.Maui.SemanticHeadingLevel value) -> void
~static Microsoft.Maui.Controls.SemanticProperties.SetHint(Microsoft.Maui.Controls.BindableObject bindable, string value) -> void
~static Microsoft.Maui.Controls.SettersExtensions.Add(this System.Collections.Generic.IList<Microsoft.Maui.Controls.Setter> setters, Microsoft.Maui.Controls.BindableProperty property, object value) -> void
~static Microsoft.Maui.Controls.SettersExtensions.AddBinding(this System.Collections.Generic.IList<Microsoft.Maui.Controls.Setter> setters, Microsoft.Maui.Controls.BindableProperty property, Microsoft.Maui.Controls.Binding binding) -> void
~static Microsoft.Maui.Controls.SettersExtensions.AddDynamicResource(this System.Collections.Generic.IList<Microsoft.Maui.Controls.Setter> setters, Microsoft.Maui.Controls.BindableProperty property, string key) -> void
~static Microsoft.Maui.Controls.Shapes.GeometryHelper.FlattenArc(System.Collections.Generic.List<Microsoft.Maui.Graphics.Point> points, Microsoft.Maui.Graphics.Point pt1, Microsoft.Maui.Graphics.Point pt2, double radiusX, double radiusY, double angleRotation, bool isLargeArc, bool isCounterclockwise, double tolerance) -> void
~static Microsoft.Maui.Controls.Shapes.GeometryHelper.FlattenCubicBezier(System.Collections.Generic.List<Microsoft.Maui.Graphics.Point> points, Microsoft.Maui.Graphics.Point ptStart, Microsoft.Maui.Graphics.Point ptCtrl1, Microsoft.Maui.Graphics.Point ptCtrl2, Microsoft.Maui.Graphics.Point ptEnd, double tolerance) -> void
~static Microsoft.Maui.Controls.Shapes.GeometryHelper.FlattenGeometry(Microsoft.Maui.Controls.Shapes.Geometry geoSrc, double tolerance) -> Microsoft.Maui.Controls.Shapes.PathGeometry
~static Microsoft.Maui.Controls.Shapes.GeometryHelper.FlattenGeometry(Microsoft.Maui.Controls.Shapes.PathGeometry pathGeoDst, Microsoft.Maui.Controls.Shapes.Geometry geoSrc, double tolerance, Microsoft.Maui.Controls.Shapes.Matrix matxPrevious) -> void
~static Microsoft.Maui.Controls.Shapes.GeometryHelper.FlattenQuadraticBezier(System.Collections.Generic.List<Microsoft.Maui.Graphics.Point> points, Microsoft.Maui.Graphics.Point ptStart, Microsoft.Maui.Graphics.Point ptCtrl, Microsoft.Maui.Graphics.Point ptEnd, double tolerance) -> void
~static Microsoft.Maui.Controls.Shapes.PathFigureCollectionConverter.ParseStringToPathFigureCollection(Microsoft.Maui.Controls.Shapes.PathFigureCollection pathFigureCollection, string pathString) -> void
~static Microsoft.Maui.Controls.Shapes.Shape.ControlsShapeViewMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.IShapeView, Microsoft.Maui.Handlers.IShapeViewHandler>
~static Microsoft.Maui.Controls.Shapes.Shape.MapStrokeDashArray(Microsoft.Maui.Handlers.IShapeViewHandler handler, Microsoft.Maui.IShapeView shapeView) -> void
~static Microsoft.Maui.Controls.Shell.Current.get -> Microsoft.Maui.Controls.Shell
~static Microsoft.Maui.Controls.Shell.GetBackButtonBehavior(Microsoft.Maui.Controls.BindableObject obj) -> Microsoft.Maui.Controls.BackButtonBehavior
~static Microsoft.Maui.Controls.Shell.GetBackgroundColor(Microsoft.Maui.Controls.BindableObject obj) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.Shell.GetDisabledColor(Microsoft.Maui.Controls.BindableObject obj) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.Shell.GetFlyoutBackdrop(Microsoft.Maui.Controls.BindableObject obj) -> Microsoft.Maui.Controls.Brush
~static Microsoft.Maui.Controls.Shell.GetFlyoutBehavior(Microsoft.Maui.Controls.BindableObject obj) -> Microsoft.Maui.FlyoutBehavior
~static Microsoft.Maui.Controls.Shell.GetFlyoutHeight(Microsoft.Maui.Controls.BindableObject obj) -> double
~static Microsoft.Maui.Controls.Shell.GetFlyoutItemIsVisible(Microsoft.Maui.Controls.BindableObject obj) -> bool
~static Microsoft.Maui.Controls.Shell.GetFlyoutWidth(Microsoft.Maui.Controls.BindableObject obj) -> double
~static Microsoft.Maui.Controls.Shell.GetForegroundColor(Microsoft.Maui.Controls.BindableObject obj) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.Shell.GetItemTemplate(Microsoft.Maui.Controls.BindableObject obj) -> Microsoft.Maui.Controls.DataTemplate
~static Microsoft.Maui.Controls.Shell.GetMenuItemTemplate(Microsoft.Maui.Controls.BindableObject obj) -> Microsoft.Maui.Controls.DataTemplate
~static Microsoft.Maui.Controls.Shell.GetNavBarHasShadow(Microsoft.Maui.Controls.BindableObject obj) -> bool
~static Microsoft.Maui.Controls.Shell.GetNavBarIsVisible(Microsoft.Maui.Controls.BindableObject obj) -> bool
~static Microsoft.Maui.Controls.Shell.GetPresentationMode(Microsoft.Maui.Controls.BindableObject obj) -> Microsoft.Maui.Controls.PresentationMode
~static Microsoft.Maui.Controls.Shell.GetSearchHandler(Microsoft.Maui.Controls.BindableObject obj) -> Microsoft.Maui.Controls.SearchHandler
~static Microsoft.Maui.Controls.Shell.GetTabBarBackgroundColor(Microsoft.Maui.Controls.BindableObject obj) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.Shell.GetTabBarDisabledColor(Microsoft.Maui.Controls.BindableObject obj) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.Shell.GetTabBarForegroundColor(Microsoft.Maui.Controls.BindableObject obj) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.Shell.GetTabBarIsVisible(Microsoft.Maui.Controls.BindableObject obj) -> bool
~static Microsoft.Maui.Controls.Shell.GetTabBarTitleColor(Microsoft.Maui.Controls.BindableObject obj) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.Shell.GetTabBarUnselectedColor(Microsoft.Maui.Controls.BindableObject obj) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.Shell.GetTitleColor(Microsoft.Maui.Controls.BindableObject obj) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.Shell.GetTitleView(Microsoft.Maui.Controls.BindableObject obj) -> Microsoft.Maui.Controls.View
~static Microsoft.Maui.Controls.Shell.GetUnselectedColor(Microsoft.Maui.Controls.BindableObject obj) -> Microsoft.Maui.Graphics.Color
~static Microsoft.Maui.Controls.Shell.SetBackButtonBehavior(Microsoft.Maui.Controls.BindableObject obj, Microsoft.Maui.Controls.BackButtonBehavior behavior) -> void
~static Microsoft.Maui.Controls.Shell.SetBackgroundColor(Microsoft.Maui.Controls.BindableObject obj, Microsoft.Maui.Graphics.Color value) -> void
~static Microsoft.Maui.Controls.Shell.SetDisabledColor(Microsoft.Maui.Controls.BindableObject obj, Microsoft.Maui.Graphics.Color value) -> void
~static Microsoft.Maui.Controls.Shell.SetFlyoutBackdrop(Microsoft.Maui.Controls.BindableObject obj, Microsoft.Maui.Controls.Brush value) -> void
~static Microsoft.Maui.Controls.Shell.SetFlyoutBehavior(Microsoft.Maui.Controls.BindableObject obj, Microsoft.Maui.FlyoutBehavior value) -> void
~static Microsoft.Maui.Controls.Shell.SetFlyoutHeight(Microsoft.Maui.Controls.BindableObject obj, double value) -> void
~static Microsoft.Maui.Controls.Shell.SetFlyoutItemIsVisible(Microsoft.Maui.Controls.BindableObject obj, bool isVisible) -> void
~static Microsoft.Maui.Controls.Shell.SetFlyoutWidth(Microsoft.Maui.Controls.BindableObject obj, double value) -> void
~static Microsoft.Maui.Controls.Shell.SetForegroundColor(Microsoft.Maui.Controls.BindableObject obj, Microsoft.Maui.Graphics.Color value) -> void
~static Microsoft.Maui.Controls.Shell.SetItemTemplate(Microsoft.Maui.Controls.BindableObject obj, Microsoft.Maui.Controls.DataTemplate itemTemplate) -> void
~static Microsoft.Maui.Controls.Shell.SetMenuItemTemplate(Microsoft.Maui.Controls.BindableObject obj, Microsoft.Maui.Controls.DataTemplate menuItemTemplate) -> void
~static Microsoft.Maui.Controls.Shell.SetNavBarHasShadow(Microsoft.Maui.Controls.BindableObject obj, bool value) -> void
~static Microsoft.Maui.Controls.Shell.SetNavBarIsVisible(Microsoft.Maui.Controls.BindableObject obj, bool value) -> void
~static Microsoft.Maui.Controls.Shell.SetPresentationMode(Microsoft.Maui.Controls.BindableObject obj, Microsoft.Maui.Controls.PresentationMode presentationMode) -> void
~static Microsoft.Maui.Controls.Shell.SetSearchHandler(Microsoft.Maui.Controls.BindableObject obj, Microsoft.Maui.Controls.SearchHandler handler) -> void
~static Microsoft.Maui.Controls.Shell.SetTabBarBackgroundColor(Microsoft.Maui.Controls.BindableObject obj, Microsoft.Maui.Graphics.Color value) -> void
~static Microsoft.Maui.Controls.Shell.SetTabBarDisabledColor(Microsoft.Maui.Controls.BindableObject obj, Microsoft.Maui.Graphics.Color value) -> void
~static Microsoft.Maui.Controls.Shell.SetTabBarForegroundColor(Microsoft.Maui.Controls.BindableObject obj, Microsoft.Maui.Graphics.Color value) -> void
~static Microsoft.Maui.Controls.Shell.SetTabBarIsVisible(Microsoft.Maui.Controls.BindableObject obj, bool value) -> void
~static Microsoft.Maui.Controls.Shell.SetTabBarTitleColor(Microsoft.Maui.Controls.BindableObject obj, Microsoft.Maui.Graphics.Color value) -> void
~static Microsoft.Maui.Controls.Shell.SetTabBarUnselectedColor(Microsoft.Maui.Controls.BindableObject obj, Microsoft.Maui.Graphics.Color value) -> void
~static Microsoft.Maui.Controls.Shell.SetTitleColor(Microsoft.Maui.Controls.BindableObject obj, Microsoft.Maui.Graphics.Color value) -> void
~static Microsoft.Maui.Controls.Shell.SetTitleView(Microsoft.Maui.Controls.BindableObject obj, Microsoft.Maui.Controls.View value) -> void
~static Microsoft.Maui.Controls.Shell.SetUnselectedColor(Microsoft.Maui.Controls.BindableObject obj, Microsoft.Maui.Graphics.Color value) -> void
~static Microsoft.Maui.Controls.ShellAppearance.operator !=(Microsoft.Maui.Controls.ShellAppearance appearance1, Microsoft.Maui.Controls.ShellAppearance appearance2) -> bool
~static Microsoft.Maui.Controls.ShellAppearance.operator ==(Microsoft.Maui.Controls.ShellAppearance appearance1, Microsoft.Maui.Controls.ShellAppearance appearance2) -> bool
~static Microsoft.Maui.Controls.ShellContent.implicit operator Microsoft.Maui.Controls.ShellContent(Microsoft.Maui.Controls.TemplatedPage page) -> Microsoft.Maui.Controls.ShellContent
~static Microsoft.Maui.Controls.ShellItem.implicit operator Microsoft.Maui.Controls.ShellItem(Microsoft.Maui.Controls.MenuItem menuItem) -> Microsoft.Maui.Controls.ShellItem
~static Microsoft.Maui.Controls.ShellItem.implicit operator Microsoft.Maui.Controls.ShellItem(Microsoft.Maui.Controls.ShellContent shellContent) -> Microsoft.Maui.Controls.ShellItem
~static Microsoft.Maui.Controls.ShellItem.implicit operator Microsoft.Maui.Controls.ShellItem(Microsoft.Maui.Controls.ShellSection shellSection) -> Microsoft.Maui.Controls.ShellItem
~static Microsoft.Maui.Controls.ShellItem.implicit operator Microsoft.Maui.Controls.ShellItem(Microsoft.Maui.Controls.TemplatedPage page) -> Microsoft.Maui.Controls.ShellItem
~static Microsoft.Maui.Controls.ShellNavigationState.implicit operator Microsoft.Maui.Controls.ShellNavigationState(string value) -> Microsoft.Maui.Controls.ShellNavigationState
~static Microsoft.Maui.Controls.ShellNavigationState.implicit operator Microsoft.Maui.Controls.ShellNavigationState(System.Uri uri) -> Microsoft.Maui.Controls.ShellNavigationState
~static Microsoft.Maui.Controls.ShellSection.implicit operator Microsoft.Maui.Controls.ShellSection(Microsoft.Maui.Controls.ShellContent shellContent) -> Microsoft.Maui.Controls.ShellSection
~static Microsoft.Maui.Controls.ShellSection.implicit operator Microsoft.Maui.Controls.ShellSection(Microsoft.Maui.Controls.TemplatedPage page) -> Microsoft.Maui.Controls.ShellSection
~static Microsoft.Maui.Controls.ShellTemplatedViewManager.OnViewDataChanged(Microsoft.Maui.Controls.DataTemplate currentViewTemplate, ref Microsoft.Maui.Controls.View localViewRef, object newViewData, System.Action<Microsoft.Maui.Controls.Element> OnChildRemoved, System.Action<Microsoft.Maui.Controls.Element> OnChildAdded) -> void
~static Microsoft.Maui.Controls.ShellTemplatedViewManager.OnViewTemplateChanged(Microsoft.Maui.Controls.DataTemplate newViewTemplate, ref Microsoft.Maui.Controls.View localViewRef, object currentViewData, System.Action<Microsoft.Maui.Controls.Element> OnChildRemoved, System.Action<Microsoft.Maui.Controls.Element> OnChildAdded, Microsoft.Maui.Controls.Shell shell) -> void
~static Microsoft.Maui.Controls.ShellTemplatedViewManager.SetView(ref Microsoft.Maui.Controls.View localView, Microsoft.Maui.Controls.View newView, System.Action<Microsoft.Maui.Controls.Element> OnChildRemoved, System.Action<Microsoft.Maui.Controls.Element> OnChildAdded) -> void
~static Microsoft.Maui.Controls.StyleSheets.StyleSheet.FromReader(System.IO.TextReader reader) -> Microsoft.Maui.Controls.StyleSheets.StyleSheet
~static Microsoft.Maui.Controls.StyleSheets.StyleSheet.FromResource(string resourcePath, System.Reflection.Assembly assembly, System.Xml.IXmlLineInfo lineInfo = null) -> Microsoft.Maui.Controls.StyleSheets.StyleSheet
~static Microsoft.Maui.Controls.StyleSheets.StyleSheet.FromString(string stylesheet) -> Microsoft.Maui.Controls.StyleSheets.StyleSheet
~static Microsoft.Maui.Controls.TabbedPage.ControlsTabbedPageMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.ITabbedView, Microsoft.Maui.Handlers.ITabbedViewHandler>
~static Microsoft.Maui.Controls.TemplateExtensions.SetBinding(this Microsoft.Maui.Controls.DataTemplate self, Microsoft.Maui.Controls.BindableProperty targetProperty, string path) -> void
~static Microsoft.Maui.Controls.TimePicker.ControlsTimePickerMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.ITimePicker, Microsoft.Maui.Handlers.TimePickerHandler>
~static Microsoft.Maui.Controls.VisualElement.ControlsVisualElementMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.IView, Microsoft.Maui.IViewHandler>
~static Microsoft.Maui.Controls.VisualElement.MapBackgroundColor(Microsoft.Maui.IViewHandler handler, Microsoft.Maui.IView view) -> void
~static Microsoft.Maui.Controls.VisualElement.MapBackgroundImageSource(Microsoft.Maui.IViewHandler handler, Microsoft.Maui.IView view) -> void
~static Microsoft.Maui.Controls.VisualMarker.Default.get -> Microsoft.Maui.Controls.IVisual
~static Microsoft.Maui.Controls.VisualMarker.MatchParent.get -> Microsoft.Maui.Controls.IVisual
~static Microsoft.Maui.Controls.VisualStateManager.GetVisualStateGroups(Microsoft.Maui.Controls.VisualElement visualElement) -> System.Collections.Generic.IList<Microsoft.Maui.Controls.VisualStateGroup>
~static Microsoft.Maui.Controls.VisualStateManager.GoToState(Microsoft.Maui.Controls.VisualElement visualElement, string name) -> bool
~static Microsoft.Maui.Controls.VisualStateManager.HasVisualStateGroups(this Microsoft.Maui.Controls.VisualElement element) -> bool
~static Microsoft.Maui.Controls.VisualStateManager.SetVisualStateGroups(Microsoft.Maui.Controls.VisualElement visualElement, Microsoft.Maui.Controls.VisualStateGroupList value) -> void
~static Microsoft.Maui.Controls.WebView.ControlsWebViewMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.IWebView, Microsoft.Maui.Handlers.WebViewHandler>
~static Microsoft.Maui.Controls.WebView.MapDisplayZoomControls(Microsoft.Maui.Handlers.IWebViewHandler handler, Microsoft.Maui.Controls.WebView webView) -> void
~static Microsoft.Maui.Controls.WebView.MapDisplayZoomControls(Microsoft.Maui.Handlers.WebViewHandler handler, Microsoft.Maui.Controls.WebView webView) -> void
~static Microsoft.Maui.Controls.WebView.MapEnableZoomControls(Microsoft.Maui.Handlers.IWebViewHandler handler, Microsoft.Maui.Controls.WebView webView) -> void
~static Microsoft.Maui.Controls.WebView.MapEnableZoomControls(Microsoft.Maui.Handlers.WebViewHandler handler, Microsoft.Maui.Controls.WebView webView) -> void
~static Microsoft.Maui.Controls.WebView.MapMixedContentMode(Microsoft.Maui.Handlers.IWebViewHandler handler, Microsoft.Maui.Controls.WebView webView) -> void
~static Microsoft.Maui.Controls.WebView.MapMixedContentMode(Microsoft.Maui.Handlers.WebViewHandler handler, Microsoft.Maui.Controls.WebView webView) -> void
~static Microsoft.Maui.Controls.WebViewSource.implicit operator Microsoft.Maui.Controls.WebViewSource(string url) -> Microsoft.Maui.Controls.WebViewSource
~static Microsoft.Maui.Controls.WebViewSource.implicit operator Microsoft.Maui.Controls.WebViewSource(System.Uri url) -> Microsoft.Maui.Controls.WebViewSource
~static Microsoft.Maui.Controls.Window.ControlsWindowMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.IWindow, Microsoft.Maui.Handlers.WindowHandler>
~static readonly Microsoft.Maui.Controls.AbsoluteLayout.LayoutBoundsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.AbsoluteLayout.LayoutFlagsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ActivityIndicator.ColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ActivityIndicator.IsRunningProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.AppLinkEntry.AppLinkUriProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.AppLinkEntry.DescriptionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.AppLinkEntry.IsLinkActiveProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.AppLinkEntry.ThumbnailProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.AppLinkEntry.TitleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.AutomationProperties.ExcludedWithChildrenProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.AutomationProperties.HelpTextProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.AutomationProperties.IsInAccessibleTreeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.AutomationProperties.LabeledByProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.AutomationProperties.NameProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BackButtonBehavior.CommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BackButtonBehavior.CommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BackButtonBehavior.IconOverrideProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BackButtonBehavior.IsEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BackButtonBehavior.IsVisibleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BackButtonBehavior.TextOverrideProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BaseShellItem.FlyoutIconProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BaseShellItem.IconProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BaseShellItem.IsCheckedProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BaseShellItem.IsEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BaseShellItem.IsVisibleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BaseShellItem.TitleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BaseShellItem.WindowProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BindableLayout.EmptyViewProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BindableLayout.EmptyViewTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BindableLayout.ItemsSourceProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BindableLayout.ItemTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BindableLayout.ItemTemplateSelectorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BindableObject.BindingContextProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BindableProperty.UnsetValue -> object
~static readonly Microsoft.Maui.Controls.Binding.DoNothing -> object
~static readonly Microsoft.Maui.Controls.BoxView.ColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.BoxView.CornerRadiusProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Button.BorderColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Button.BorderWidthProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Button.CharacterSpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Button.CommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Button.CommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Button.ContentLayoutProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Button.CornerRadiusProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Button.FontAttributesProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Button.FontAutoScalingEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Button.FontFamilyProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Button.FontSizeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Button.ImageSourceProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Button.IsPressedProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Button.LineBreakModeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Button.PaddingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Button.TextColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Button.TextProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Button.TextTransformProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.CarouselView.CurrentItemChangedCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.CarouselView.CurrentItemChangedCommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.CarouselView.CurrentItemProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.CarouselView.IsBounceEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.CarouselView.IsDraggingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.CarouselView.IsScrollAnimatedProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.CarouselView.IsSwipeEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.CarouselView.ItemsLayoutProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.CarouselView.LoopProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.CarouselView.PeekAreaInsetsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.CarouselView.PositionChangedCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.CarouselView.PositionChangedCommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.CarouselView.PositionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.CarouselView.VisibleViewsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Cell.IsEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.CheckBox.ColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.CheckBox.IsCheckedProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ClickGestureRecognizer.ButtonsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ClickGestureRecognizer.CommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ClickGestureRecognizer.CommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ClickGestureRecognizer.NumberOfClicksRequiredProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ColumnDefinition.WidthProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.CompareStateTrigger.PropertyProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.CompareStateTrigger.ValueProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.AbsoluteLayout.LayoutBoundsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.AbsoluteLayout.LayoutFlagsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.FlexLayout.AlignContentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.FlexLayout.AlignItemsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.FlexLayout.AlignSelfProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.FlexLayout.BasisProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.FlexLayout.DirectionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.FlexLayout.GrowProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.FlexLayout.JustifyContentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.FlexLayout.OrderProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.FlexLayout.PositionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.FlexLayout.ShrinkProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.FlexLayout.WrapProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.Grid.ColumnDefinitionsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.Grid.ColumnProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.Grid.ColumnSpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.Grid.ColumnSpanProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.Grid.RowDefinitionsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.Grid.RowProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.Grid.RowSpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.Grid.RowSpanProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.Layout.CascadeInputTransparentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.Layout.IsClippedToBoundsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.Layout.PaddingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.RelativeLayout.BoundsConstraintProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.RelativeLayout.HeightConstraintProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.RelativeLayout.WidthConstraintProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.RelativeLayout.XConstraintProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.RelativeLayout.YConstraintProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.StackLayout.OrientationProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Compatibility.StackLayout.SpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.CompressedLayout.HeadlessOffsetProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.CompressedLayout.IsHeadlessProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ContentPage.ContentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ContentPage.HideSoftInputOnTappedProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ContentView.ContentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.DatePicker.CharacterSpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.DatePicker.DateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.DatePicker.FontAttributesProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.DatePicker.FontAutoScalingEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.DatePicker.FontFamilyProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.DatePicker.FontSizeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.DatePicker.FormatProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.DatePicker.MaximumDateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.DatePicker.MinimumDateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.DatePicker.TextColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Device.Styles.BodyStyle -> Microsoft.Maui.Controls.Style
~static readonly Microsoft.Maui.Controls.Device.Styles.BodyStyleKey -> string
~static readonly Microsoft.Maui.Controls.Device.Styles.CaptionStyle -> Microsoft.Maui.Controls.Style
~static readonly Microsoft.Maui.Controls.Device.Styles.CaptionStyleKey -> string
~static readonly Microsoft.Maui.Controls.Device.Styles.ListItemDetailTextStyle -> Microsoft.Maui.Controls.Style
~static readonly Microsoft.Maui.Controls.Device.Styles.ListItemDetailTextStyleKey -> string
~static readonly Microsoft.Maui.Controls.Device.Styles.ListItemTextStyle -> Microsoft.Maui.Controls.Style
~static readonly Microsoft.Maui.Controls.Device.Styles.ListItemTextStyleKey -> string
~static readonly Microsoft.Maui.Controls.Device.Styles.SubtitleStyle -> Microsoft.Maui.Controls.Style
~static readonly Microsoft.Maui.Controls.Device.Styles.SubtitleStyleKey -> string
~static readonly Microsoft.Maui.Controls.Device.Styles.TitleStyle -> Microsoft.Maui.Controls.Style
~static readonly Microsoft.Maui.Controls.Device.Styles.TitleStyleKey -> string
~static readonly Microsoft.Maui.Controls.DeviceStateTrigger.DeviceProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.DropGestureRecognizer.AllowDropProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.DropGestureRecognizer.DragLeaveCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.DropGestureRecognizer.DragLeaveCommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.DropGestureRecognizer.DragOverCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.DropGestureRecognizer.DragOverCommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.DropGestureRecognizer.DropCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.DropGestureRecognizer.DropCommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Editor.AutoSizeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Editor.CharacterSpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Editor.CursorPositionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Editor.FontAttributesProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Editor.FontAutoScalingEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Editor.FontFamilyProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Editor.FontSizeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Editor.HorizontalTextAlignmentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Editor.IsTextPredictionEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Editor.PlaceholderColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Editor.PlaceholderProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Editor.SelectionLengthProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Editor.TextColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Editor.TextProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Editor.VerticalTextAlignmentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Element.AutomationIdProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Element.ClassIdProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Entry.CharacterSpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Entry.ClearButtonVisibilityProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Entry.CursorPositionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Entry.FontAttributesProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Entry.FontAutoScalingEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Entry.FontFamilyProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Entry.FontSizeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Entry.HorizontalTextAlignmentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Entry.IsPasswordProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Entry.IsTextPredictionEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Entry.KeyboardProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Entry.PlaceholderColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Entry.PlaceholderProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Entry.ReturnCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Entry.ReturnCommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Entry.ReturnTypeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Entry.SelectionLengthProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Entry.TextColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Entry.TextProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Entry.VerticalTextAlignmentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.EntryCell.HorizontalTextAlignmentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.EntryCell.KeyboardProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.EntryCell.LabelColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.EntryCell.LabelProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.EntryCell.PlaceholderProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.EntryCell.TextProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.EntryCell.VerticalTextAlignmentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FileImageSource.FileProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FlexLayout.AlignContentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FlexLayout.AlignItemsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FlexLayout.AlignSelfProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FlexLayout.BasisProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FlexLayout.DirectionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FlexLayout.GrowProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FlexLayout.JustifyContentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FlexLayout.OrderProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FlexLayout.PositionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FlexLayout.ShrinkProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FlexLayout.WrapProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FlyoutBase.ContextFlyoutProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FlyoutItem.IsVisibleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FlyoutPage.FlyoutLayoutBehaviorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FlyoutPage.IsGestureEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FlyoutPage.IsPresentedProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FontImageSource.ColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FontImageSource.FontAutoScalingEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FontImageSource.FontFamilyProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FontImageSource.GlyphProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.FontImageSource.SizeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Frame.BorderColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Frame.CornerRadiusProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Frame.HasShadowProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.GradientBrush.GradientStopsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.GradientStop.ColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.GradientStop.OffsetProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.GraphicsView.DrawableProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Grid.ColumnDefinitionsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Grid.ColumnProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Grid.ColumnSpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Grid.ColumnSpanProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Grid.RowDefinitionsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Grid.RowProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Grid.RowSpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Grid.RowSpanProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.GridItemsLayout.HorizontalItemSpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.GridItemsLayout.SpanProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.GridItemsLayout.VerticalItemSpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.GroupableItemsView.GroupFooterTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.GroupableItemsView.GroupHeaderTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.GroupableItemsView.IsGroupedProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.DefaultForegroundColor -> Microsoft.Maui.Graphics.Color
~static readonly Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.DefaultTitleColor -> Microsoft.Maui.Graphics.Color
~static readonly Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.DefaultUnselectedColor -> Microsoft.Maui.Graphics.Color
~static readonly Microsoft.Maui.Controls.HtmlWebViewSource.BaseUrlProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.HtmlWebViewSource.HtmlProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Image.AspectProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Image.IsAnimationPlayingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Image.IsLoadingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Image.IsOpaqueProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Image.SourceProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ImageButton.AspectProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ImageButton.BorderColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ImageButton.BorderWidthProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ImageButton.CommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ImageButton.CommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ImageButton.CornerRadiusProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ImageButton.IsLoadingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ImageButton.IsOpaqueProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ImageButton.IsPressedProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ImageButton.PaddingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ImageButton.SourceProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ImageCell.ImageSourceProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.IndicatorView.CountProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.IndicatorView.HideSingleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.IndicatorView.IndicatorColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.IndicatorView.IndicatorSizeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.IndicatorView.IndicatorsShapeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.IndicatorView.IndicatorTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.IndicatorView.ItemsSourceProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.IndicatorView.MaximumVisibleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.IndicatorView.PositionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.IndicatorView.SelectedIndicatorColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.CharacterSpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.CursorPositionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.FontAttributesProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.FontAutoScalingEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.FontFamilyProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.FontSizeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.IsReadOnlyProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.IsSpellCheckEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.IsTextPredictionEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.KeyboardProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.MaxLengthProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.PlaceholderColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.PlaceholderProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.SelectionLengthProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.TextColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.TextProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.InputView.TextTransformProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Internals.NameScope.NameScopeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Internals.ResourcesChangedEventArgs.StyleSheets -> Microsoft.Maui.Controls.Internals.ResourcesChangedEventArgs
~static readonly Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.NameProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.ShortNameProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ItemsLayout.SnapPointsAlignmentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ItemsLayout.SnapPointsTypeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ItemsView.EmptyViewProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ItemsView.EmptyViewTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ItemsView.HorizontalScrollBarVisibilityProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ItemsView.ItemsSourceProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ItemsView.ItemsUpdatingScrollModeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ItemsView.ItemTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ItemsView.RemainingItemsThresholdProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ItemsView.RemainingItemsThresholdReachedCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ItemsView.RemainingItemsThresholdReachedCommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ItemsView.VerticalScrollBarVisibilityProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ItemsView<TVisual>.ItemsSourceProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ItemsView<TVisual>.ItemTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Label.CharacterSpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Label.FontAttributesProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Label.FontAutoScalingEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Label.FontFamilyProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Label.FontSizeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Label.FormattedTextProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Label.HorizontalTextAlignmentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Label.LineBreakModeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Label.LineHeightProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Label.MaxLinesProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Label.PaddingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Label.TextColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Label.TextDecorationsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Label.TextProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Label.TextTransformProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Label.TextTypeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Label.VerticalTextAlignmentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Layout.CascadeInputTransparentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Layout.IsClippedToBoundsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Layout.PaddingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.LinearGradientBrush.EndPointProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.LinearGradientBrush.StartPointProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.LinearItemsLayout.CarouselVertical -> Microsoft.Maui.Controls.IItemsLayout
~static readonly Microsoft.Maui.Controls.LinearItemsLayout.Horizontal -> Microsoft.Maui.Controls.IItemsLayout
~static readonly Microsoft.Maui.Controls.LinearItemsLayout.ItemSpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.LinearItemsLayout.Vertical -> Microsoft.Maui.Controls.IItemsLayout
~static readonly Microsoft.Maui.Controls.ListView.FooterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ListView.FooterTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ListView.GroupHeaderTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ListView.HasUnevenRowsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ListView.HeaderProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ListView.HeaderTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ListView.HorizontalScrollBarVisibilityProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ListView.IsGroupingEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ListView.IsPullToRefreshEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ListView.IsRefreshingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ListView.RefreshCommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ListView.RefreshControlColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ListView.RowHeightProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ListView.SelectedItemProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ListView.SelectionModeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ListView.SeparatorColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ListView.SeparatorVisibilityProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ListView.VerticalScrollBarVisibilityProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.MenuBar.IsEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.MenuBarItem.IsEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.MenuBarItem.TextProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.MenuItem.AcceleratorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.MenuItem.CommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.MenuItem.CommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.MenuItem.IconImageSourceProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.MenuItem.IsDestructiveProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.MenuItem.IsEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.MenuItem.TextProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.MultiPage<T>.ItemsSourceProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.MultiPage<T>.ItemTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.MultiPage<T>.SelectedItemProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.NavigableElement.NavigationProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.NavigableElement.StyleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.NavigationPage.BackButtonTitleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.NavigationPage.BarBackgroundColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.NavigationPage.BarBackgroundProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.NavigationPage.BarTextColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.NavigationPage.CurrentPageProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.NavigationPage.HasBackButtonProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.NavigationPage.HasNavigationBarProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.NavigationPage.IconColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.NavigationPage.RootPageProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.NavigationPage.TitleIconImageSourceProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.NavigationPage.TitleViewProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.OrientationStateTrigger.OrientationProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Page.BackgroundImageSourceProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Page.IconImageSourceProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Page.IsBusyProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Page.PaddingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Page.TitleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PanGestureRecognizer.TouchPointsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Picker.CharacterSpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Picker.FontAttributesProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Picker.FontAutoScalingEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Picker.FontFamilyProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Picker.FontSizeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Picker.HorizontalTextAlignmentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Picker.ItemsSourceProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Picker.SelectedIndexProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Picker.SelectedItemProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Picker.TextColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Picker.TitleColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Picker.TitleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Picker.VerticalTextAlignmentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.SendAppearingEventOnResumeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.SendDisappearingEventOnPauseProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application.ShouldPreserveKeyboardOnResumeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.NavigationPage.BarHeightProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Application.WindowSoftInputModeAdjustProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button.UseDefaultPaddingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button.UseDefaultShadowProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Entry.ImeOptionsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.IsShadowEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.ShadowColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.ShadowOffsetProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton.ShadowRadiusProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ListView.IsFastScrollEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.SwipeView.SwipeTransitionModeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.IsSmoothScrollEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.IsSwipePagingEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.OffscreenPageLimitProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage.ToolbarPlacementProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ViewCell.IsContextActionsLegacyModeEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement.ElevationProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement.IsLegacyColorModeEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.DisplayZoomControlsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.EnableZoomControlsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView.MixedContentModeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.BoxView.HasCornerRadiusProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.NavigationPage.BackButtonIconProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabbedPage.TabPositionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.EnableAccessibilityScalingForNamedFontSizesProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.HandleControlUpdatesOnMainThreadProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application.PanGestureRecognizerShouldRecognizeSimultaneouslyProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Cell.DefaultBackgroundColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.DatePicker.UpdateModeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.AdjustsFontSizeToFitWidthProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry.CursorColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.FlyoutPage.ApplyShadowProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.GroupHeaderStyleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.RowAnimationsEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView.SeparatorStyleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.HideNavigationBarSeparatorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.IsNavigationBarTranslucentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.PrefersLargeTitlesProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage.StatusBarTextColorModeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.LargeTitleDisplayProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.ModalPresentationStyleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.PreferredStatusBarUpdateAnimationProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.PrefersHomeIndicatorAutoHiddenProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.PrefersStatusBarHiddenProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.SafeAreaInsetsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page.UseSafeAreaProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Picker.UpdateModeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ScrollView.ShouldDelayContentTouchesProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SearchBar.SearchBarStyleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Slider.UpdateOnTapProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SwipeView.SwipeTransitionModeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TabbedPage.TranslucencyModeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TimePicker.UpdateModeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.BlurEffectProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.CanBecomeFirstResponderProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.IsLegacyColorModeEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.IsShadowEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.ShadowColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.ShadowOffsetProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.ShadowOpacityProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.ShadowRadiusProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage.NavigationTransitionPopStyleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage.NavigationTransitionPushStyleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.Page.TabOrderProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.TabbedPage.TabsStyleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.ActiveBezelInteractionElementPropertyKey -> Microsoft.Maui.Controls.BindablePropertyKey
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.OverlayContentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application.UseBezelInteractionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Entry.FontWeightProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image.BlendColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image.FileProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ItemsView.FocusedItemScrollPositionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Label.FontWeightProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.NavigationPage.HasBreadCrumbsBarProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Page.BreadCrumbProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ProgressBar.ProgressBarPulsingStatusProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ScrollView.HorizontalScrollStepProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ScrollView.VerticalScrollStepProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Switch.ColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.IsFocusAllowedProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.NextFocusBackViewProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.NextFocusDirectionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.NextFocusDownViewProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.NextFocusForwardViewProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.NextFocusLeftViewProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.NextFocusRightViewProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.NextFocusUpViewProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.StyleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement.ToolTipProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Application.ImageDirectoryProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.CollapsedPaneWidthProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage.CollapseStyleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.InputView.DetectReadingOrderFromContentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Label.DetectReadingOrderFromContentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListView.SelectionModeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page.ToolbarDynamicOverflowEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page.ToolbarPlacementProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.RefreshPullDirectionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.SearchBar.IsSpellCheckEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.HeaderIconsEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage.HeaderIconsSizeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.AccessKeyHorizontalOffsetProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.AccessKeyPlacementProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.AccessKeyProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.AccessKeyVerticalOffsetProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement.IsLegacyColorModeEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebView.ExecutionModeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebView.IsJavaScriptAlertEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ProgressBar.ProgressColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ProgressBar.ProgressProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RadialGradientBrush.CenterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RadialGradientBrush.RadiusProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RadioButton.BorderColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RadioButton.BorderWidthProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RadioButton.CharacterSpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RadioButton.ContentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RadioButton.CornerRadiusProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RadioButton.FontAttributesProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RadioButton.FontAutoScalingEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RadioButton.FontFamilyProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RadioButton.FontSizeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RadioButton.GroupNameProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RadioButton.IsCheckedProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RadioButton.TextColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RadioButton.TextTransformProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RadioButton.ValueProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RadioButtonGroup.GroupNameProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RadioButtonGroup.SelectedValueProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RefreshView.CommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RefreshView.CommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RefreshView.IsRefreshingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RefreshView.RefreshColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ReorderableItemsView.CanMixGroupsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ReorderableItemsView.CanReorderItemsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Routing.RouteProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.RowDefinition.HeightProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ScrollView.ContentSizeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ScrollView.HorizontalScrollBarVisibilityProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ScrollView.OrientationProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ScrollView.ScrollXProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ScrollView.ScrollYProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ScrollView.VerticalScrollBarVisibilityProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchBar.CancelButtonColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchBar.CharacterSpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchBar.CursorPositionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchBar.FontAttributesProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchBar.FontAutoScalingEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchBar.FontFamilyProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchBar.FontSizeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchBar.HorizontalTextAlignmentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchBar.IsTextPredictionEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchBar.PlaceholderColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchBar.PlaceholderProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchBar.SearchCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchBar.SearchCommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchBar.SelectionLengthProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchBar.TextColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchBar.TextProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchBar.VerticalTextAlignmentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.AutomationIdProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.BackgroundColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.CancelButtonColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.CharacterSpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.ClearIconHelpTextProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.ClearIconNameProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.ClearIconProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderHelpTextProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderIconProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderNameProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.CommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.CommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.DisplayMemberNameProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.FontAttributesProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.FontAutoScalingEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.FontFamilyProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.FontSizeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.HorizontalTextAlignmentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.IsFocusedProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.IsFocusedPropertyKey -> Microsoft.Maui.Controls.BindablePropertyKey
~static readonly Microsoft.Maui.Controls.SearchHandler.IsSearchEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.ItemsSourceProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.ItemTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.KeyboardProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.PlaceholderColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.PlaceholderProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.QueryIconHelpTextProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.QueryIconNameProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.QueryIconProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.QueryProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.SearchBoxVisibilityProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.ShowsResultsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.TextColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.TextTransformProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SearchHandler.VerticalTextAlignmentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SelectableItemsView.SelectedItemProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SelectableItemsView.SelectedItemsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SelectableItemsView.SelectionChangedCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SelectableItemsView.SelectionChangedCommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SelectableItemsView.SelectionModeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SemanticProperties.DescriptionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SemanticProperties.HeadingLevelProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SemanticProperties.HintProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shadow.BrushProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shadow.OffsetProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shadow.OpacityProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shadow.RadiusProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.ArcSegment.IsLargeArcProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.ArcSegment.PointProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.ArcSegment.RotationAngleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.ArcSegment.SizeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.ArcSegment.SweepDirectionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.BezierSegment.Point1Property -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.BezierSegment.Point2Property -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.BezierSegment.Point3Property -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.CompositeTransform.CenterXProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.CompositeTransform.CenterYProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.CompositeTransform.RotationProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.CompositeTransform.ScaleXProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.CompositeTransform.ScaleYProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.CompositeTransform.SkewXProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.CompositeTransform.SkewYProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.CompositeTransform.TranslateXProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.CompositeTransform.TranslateYProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.EllipseGeometry.CenterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.EllipseGeometry.RadiusXProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.EllipseGeometry.RadiusYProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.GeometryGroup.ChildrenProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.GeometryGroup.FillRuleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.Line.X1Property -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.Line.X2Property -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.Line.Y1Property -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.Line.Y2Property -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.LineGeometry.EndPointProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.LineGeometry.StartPointProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.LineSegment.PointProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.MatrixTransform.MatrixProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.Path.DataProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.Path.RenderTransformProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.PathFigure.IsClosedProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.PathFigure.IsFilledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.PathFigure.SegmentsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.PathFigure.StartPointProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.PathGeometry.FiguresProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.PathGeometry.FillRuleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.PolyBezierSegment.PointsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.Polygon.FillRuleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.Polygon.PointsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.Polyline.FillRuleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.Polyline.PointsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.PolyLineSegment.PointsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.PolyQuadraticBezierSegment.PointsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.QuadraticBezierSegment.Point1Property -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.QuadraticBezierSegment.Point2Property -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.Rectangle.RadiusXProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.Rectangle.RadiusYProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.RectangleGeometry.RectProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.RotateTransform.AngleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.RotateTransform.CenterXProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.RotateTransform.CenterYProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.RoundRectangle.CornerRadiusProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.RoundRectangleGeometry.CornerRadiusProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.RoundRectangleGeometry.RectProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.ScaleTransform.CenterXProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.ScaleTransform.CenterYProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.ScaleTransform.ScaleXProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.ScaleTransform.ScaleYProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.SkewTransform.AngleXProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.SkewTransform.AngleYProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.SkewTransform.CenterXProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.SkewTransform.CenterYProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.Transform.ValueProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.TransformGroup.ChildrenProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.TranslateTransform.XProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shapes.TranslateTransform.YProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.BackButtonBehaviorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.BackgroundColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.CurrentItemProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.CurrentStateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.DisabledColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.FlyoutBackdropProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.FlyoutBackgroundColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.FlyoutBackgroundImageAspectProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.FlyoutBackgroundImageProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.FlyoutBackgroundProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.FlyoutBehaviorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.FlyoutContentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.FlyoutContentTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.FlyoutFooterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.FlyoutFooterTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.FlyoutHeaderBehaviorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.FlyoutHeaderProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.FlyoutHeaderTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.FlyoutHeightProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.FlyoutIconProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.FlyoutIsPresentedProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.FlyoutItemIsVisibleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.FlyoutVerticalScrollModeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.FlyoutWidthProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.ForegroundColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.ItemsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.ItemTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.MenuItemTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.NavBarHasShadowProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.NavBarIsVisibleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.PresentationModeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.SearchHandlerProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.TabBarBackgroundColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.TabBarDisabledColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.TabBarForegroundColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.TabBarIsVisibleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.TabBarTitleColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.TabBarUnselectedColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.TitleColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.TitleViewProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Shell.UnselectedColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ShellContent.ContentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ShellContent.ContentTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ShellContent.MenuItemsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ShellGroupItem.FlyoutDisplayOptionsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ShellItem.CurrentItemProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ShellItem.ItemsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ShellSection.CurrentItemProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.ShellSection.ItemsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Slider.DragCompletedCommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Slider.DragStartedCommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Slider.MaximumProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Slider.MaximumTrackColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Slider.MinimumProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Slider.MinimumTrackColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Slider.ThumbColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Slider.ThumbImageSourceProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Slider.ValueProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SolidColorBrush.ColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Span.BackgroundColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Span.CharacterSpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Span.FontAttributesProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Span.FontAutoScalingEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Span.FontFamilyProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Span.FontSizeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Span.LineHeightProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Span.StyleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Span.TextColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Span.TextDecorationsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Span.TextProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Span.TextTransformProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.StackBase.SpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.StackLayout.OrientationProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.StateTrigger.IsActiveProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Stepper.IncrementProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Stepper.MaximumProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Stepper.MinimumProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Stepper.ValueProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.StreamImageSource.StreamProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.StructuredItemsView.FooterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.StructuredItemsView.FooterTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.StructuredItemsView.HeaderProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.StructuredItemsView.HeaderTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.StructuredItemsView.ItemSizingStrategyProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.StructuredItemsView.ItemsLayoutProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SwipeGestureRecognizer.CommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SwipeGestureRecognizer.CommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SwipeGestureRecognizer.DirectionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SwipeGestureRecognizer.ThresholdProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SwipeItem.BackgroundColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SwipeItem.IsVisibleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SwipeItems.ModeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SwipeItems.SwipeBehaviorOnInvokedProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SwipeItemView.CommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SwipeItemView.CommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SwipeView.BottomItemsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SwipeView.LeftItemsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SwipeView.RightItemsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SwipeView.ThresholdProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SwipeView.TopItemsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Switch.IsToggledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Switch.OnColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.Switch.ThumbColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SwitchCell.OnColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SwitchCell.OnProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.SwitchCell.TextProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TabbedPage.BarBackgroundColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TabbedPage.BarBackgroundProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TabbedPage.BarTextColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TabbedPage.SelectedTabColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TabbedPage.UnselectedTabColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TableSectionBase.TextColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TableSectionBase.TitleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TableView.HasUnevenRowsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TableView.RowHeightProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TemplatedPage.ControlTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TemplatedView.ControlTemplateProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TextCell.CommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TextCell.CommandProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TextCell.DetailColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TextCell.DetailProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TextCell.TextColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TextCell.TextProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TimePicker.CharacterSpacingProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TimePicker.FontAttributesProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TimePicker.FontAutoScalingEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TimePicker.FontFamilyProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TimePicker.FontSizeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TimePicker.FormatProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TimePicker.TextColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.TimePicker.TimeProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.UriImageSource.CacheValidityProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.UriImageSource.CachingEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.UriImageSource.UriProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.UrlWebViewSource.UrlProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.View.HorizontalOptionsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.View.MarginProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.View.VerticalOptionsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.AnchorXProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.AnchorYProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.BackgroundColorProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.BackgroundProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.BehaviorsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.ClipProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.FlowDirectionProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.HeightProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.HeightRequestProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.InputTransparentProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.IsEnabledProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.IsFocusedProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.IsFocusedPropertyKey -> Microsoft.Maui.Controls.BindablePropertyKey
~static readonly Microsoft.Maui.Controls.VisualElement.IsVisibleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.MaximumHeightRequestProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.MaximumWidthRequestProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.MinimumHeightRequestProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.MinimumWidthRequestProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.NavigationProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.OpacityProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.RotationProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.RotationXProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.RotationYProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.ScaleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.ScaleXProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.ScaleYProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.StyleProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.TranslationXProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.TranslationYProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.TriggersProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.VisualProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.WidthProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.WidthRequestProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.WindowProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.XProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualElement.YProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.VisualStateManager.VisualStateGroupsProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.WebView.CanGoBackProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.WebView.CanGoForwardProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.WebView.CookiesProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.WebView.SourceProperty -> Microsoft.Maui.Controls.BindableProperty
~static readonly Microsoft.Maui.Controls.WebView.UserAgentProperty -> Microsoft.Maui.Controls.BindableProperty
~virtual Microsoft.Maui.Controls.Behavior.OnAttachedTo(Microsoft.Maui.Controls.BindableObject bindable) -> void
~virtual Microsoft.Maui.Controls.Behavior.OnDetachingFrom(Microsoft.Maui.Controls.BindableObject bindable) -> void
~virtual Microsoft.Maui.Controls.Behavior<T>.OnAttachedTo(T bindable) -> void
~virtual Microsoft.Maui.Controls.Behavior<T>.OnDetachingFrom(T bindable) -> void
~virtual Microsoft.Maui.Controls.BindableObject.OnPropertyChanged(string propertyName = null) -> void
~virtual Microsoft.Maui.Controls.BindableObject.OnPropertyChanging(string propertyName = null) -> void
~virtual Microsoft.Maui.Controls.Button.UpdateFormsText(string source, Microsoft.Maui.TextTransform textTransform) -> string
~virtual Microsoft.Maui.Controls.CarouselView.OnCurrentItemChanged(System.EventArgs args) -> void
~virtual Microsoft.Maui.Controls.CarouselView.OnPositionChanged(Microsoft.Maui.Controls.PositionChangedEventArgs args) -> void
~virtual Microsoft.Maui.Controls.Compatibility.Layout.ShouldInvalidateOnChildAdded(Microsoft.Maui.Controls.View child) -> bool
~virtual Microsoft.Maui.Controls.Compatibility.Layout.ShouldInvalidateOnChildRemoved(Microsoft.Maui.Controls.View child) -> bool
~virtual Microsoft.Maui.Controls.Compatibility.Layout<T>.OnAdded(T view) -> void
~virtual Microsoft.Maui.Controls.Compatibility.Layout<T>.OnRemoved(T view) -> void
~virtual Microsoft.Maui.Controls.DatePicker.UpdateFormsText(string source, Microsoft.Maui.TextTransform textTransform) -> string
~virtual Microsoft.Maui.Controls.Element.OnChildAdded(Microsoft.Maui.Controls.Element child) -> void
~virtual Microsoft.Maui.Controls.Element.OnChildRemoved(Microsoft.Maui.Controls.Element child, int oldLogicalIndex) -> void
~virtual Microsoft.Maui.Controls.Element.OnHandlerChanging(Microsoft.Maui.Controls.HandlerChangingEventArgs args) -> void
~virtual Microsoft.Maui.Controls.Element.OnParentChanging(Microsoft.Maui.Controls.ParentChangingEventArgs args) -> void
~virtual Microsoft.Maui.Controls.Handlers.Compatibility.CellAdapter.HandleItemClick(Android.Widget.AdapterView parent, Android.Views.View view, int position, long id) -> void
~virtual Microsoft.Maui.Controls.Handlers.Compatibility.CellRenderer.GetCellCore(Microsoft.Maui.Controls.Cell item, Android.Views.View convertView, Android.Views.ViewGroup parent, Android.Content.Context context) -> Android.Views.View
~virtual Microsoft.Maui.Controls.Handlers.Compatibility.CellRenderer.OnCellPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e) -> void
~virtual Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellRenderer.GetDigitsKeyListener(Android.Text.InputTypes inputTypes) -> Android.Text.Method.NumberKeyListener
~virtual Microsoft.Maui.Controls.Handlers.Compatibility.ListViewRenderer.CreateNativePullToRefresh(Android.Content.Context context) -> AndroidX.SwipeRefreshLayout.Widget.SwipeRefreshLayout
~virtual Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.CreateBottomNavViewAppearanceTracker(Microsoft.Maui.Controls.ShellItem shellItem) -> Microsoft.Maui.Controls.Platform.Compatibility.IShellBottomNavViewAppearanceTracker
~virtual Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.CreateFragmentForPage(Microsoft.Maui.Controls.Page page) -> Microsoft.Maui.Controls.Platform.Compatibility.IShellObservableFragment
~virtual Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.CreateShellFlyoutContentRenderer() -> Microsoft.Maui.Controls.Platform.Compatibility.IShellFlyoutContentRenderer
~virtual Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.CreateShellFlyoutRenderer() -> Microsoft.Maui.Controls.Platform.Compatibility.IShellFlyoutRenderer
~virtual Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.CreateShellItemRenderer(Microsoft.Maui.Controls.ShellItem shellItem) -> Microsoft.Maui.Controls.Platform.Compatibility.IShellItemRenderer
~virtual Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.CreateShellSectionRenderer(Microsoft.Maui.Controls.ShellSection shellSection) -> Microsoft.Maui.Controls.Platform.Compatibility.IShellSectionRenderer
~virtual Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.CreateTabLayoutAppearanceTracker(Microsoft.Maui.Controls.ShellSection shellSection) -> Microsoft.Maui.Controls.Platform.Compatibility.IShellTabLayoutAppearanceTracker
~virtual Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.CreateToolbarAppearanceTracker() -> Microsoft.Maui.Controls.Platform.Compatibility.IShellToolbarAppearanceTracker
~virtual Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.CreateTrackerForToolbar(AndroidX.AppCompat.Widget.Toolbar toolbar) -> Microsoft.Maui.Controls.Platform.Compatibility.IShellToolbarTracker
~virtual Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.OnElementPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e) -> void
~virtual Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.OnElementSet(Microsoft.Maui.Controls.Shell shell) -> void
~virtual Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.SwitchFragment(AndroidX.Fragment.App.FragmentManager manager, Android.Views.View targetView, Microsoft.Maui.Controls.ShellItem newItem, bool animate = true) -> void
~virtual Microsoft.Maui.Controls.Handlers.Compatibility.TableViewRenderer.GetModelRenderer(Android.Widget.ListView listView, Microsoft.Maui.Controls.TableView view) -> Microsoft.Maui.Controls.Handlers.Compatibility.TableViewModelRenderer
~virtual Microsoft.Maui.Controls.Handlers.Items.GroupableItemsViewHandler<TItemsView>.CreateAdapter() -> Microsoft.Maui.Controls.Handlers.Items.GroupableItemsViewAdapter<TItemsView, Microsoft.Maui.Controls.Handlers.Items.IGroupableItemsViewSource>
~virtual Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<TItemsView, TItemsViewSource>.BindTemplatedItemViewHolder(Microsoft.Maui.Controls.Handlers.Items.TemplatedItemViewHolder templatedItemViewHolder, object context) -> void
~virtual Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<TItemsView, TItemsViewSource>.GetPositionForItem(object item) -> int
~virtual Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<TItemsView, TItemsViewSource>.IsSelectionEnabled(Android.Views.ViewGroup parent, int viewType) -> bool
~virtual Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<TItemsView, TItemsViewSource>.ItemsViewPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs property) -> void
~virtual Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>.CreateAdapter() -> Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<TItemsView, Microsoft.Maui.Controls.Handlers.Items.IItemsViewSource>
~virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.CreateScrollListener() -> Microsoft.Maui.Controls.Handlers.Items.RecyclerViewScrollListener<TItemsView, TItemsViewSource>
~virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.CreateSpacingDecoration(Microsoft.Maui.Controls.IItemsLayout itemsLayout) -> AndroidX.RecyclerView.Widget.RecyclerView.ItemDecoration
~virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.DetermineTargetPosition(Microsoft.Maui.Controls.ScrollToRequestEventArgs args) -> int
~virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.GetSnapManager() -> Microsoft.Maui.Controls.Handlers.Items.SnapManager
~virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.LayoutPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs propertyChanged) -> void
~virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.ScrollTo(Microsoft.Maui.Controls.ScrollToRequestEventArgs args) -> void
~virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.ScrollToRequested(object sender, Microsoft.Maui.Controls.ScrollToRequestEventArgs args) -> void
~virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.SelectLayoutManager(Microsoft.Maui.Controls.IItemsLayout layoutSpecification) -> AndroidX.RecyclerView.Widget.RecyclerView.LayoutManager
~virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.SetUpNewElement(TItemsView newElement) -> void
~virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.TearDownOldElement(TItemsView oldElement) -> void
~virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.UpdateBackground(Microsoft.Maui.Controls.Brush brush = null) -> void
~virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.UpdateBackgroundColor(Microsoft.Maui.Graphics.Color color = null) -> void
~virtual Microsoft.Maui.Controls.Handlers.Items.RecyclerViewScrollListener<TItemsView, TItemsViewSource>.GetVisibleItemsIndex(AndroidX.RecyclerView.Widget.RecyclerView recyclerView) -> (int First, int Center, int Last)
~virtual Microsoft.Maui.Controls.Handlers.Items.SnapManager.CreateSnapHelper(Microsoft.Maui.Controls.SnapPointsType snapPointsType, Microsoft.Maui.Controls.SnapPointsAlignment alignment) -> AndroidX.RecyclerView.Widget.SnapHelper
~virtual Microsoft.Maui.Controls.ImageSource.Cancel() -> System.Threading.Tasks.Task<bool>
~virtual Microsoft.Maui.Controls.Internals.NavigationProxy.GetModalStack() -> System.Collections.Generic.IReadOnlyList<Microsoft.Maui.Controls.Page>
~virtual Microsoft.Maui.Controls.Internals.NavigationProxy.GetNavigationStack() -> System.Collections.Generic.IReadOnlyList<Microsoft.Maui.Controls.Page>
~virtual Microsoft.Maui.Controls.Internals.NavigationProxy.OnInsertPageBefore(Microsoft.Maui.Controls.Page page, Microsoft.Maui.Controls.Page before) -> void
~virtual Microsoft.Maui.Controls.Internals.NavigationProxy.OnPopAsync(bool animated) -> System.Threading.Tasks.Task<Microsoft.Maui.Controls.Page>
~virtual Microsoft.Maui.Controls.Internals.NavigationProxy.OnPopModal(bool animated) -> System.Threading.Tasks.Task<Microsoft.Maui.Controls.Page>
~virtual Microsoft.Maui.Controls.Internals.NavigationProxy.OnPopToRootAsync(bool animated) -> System.Threading.Tasks.Task
~virtual Microsoft.Maui.Controls.Internals.NavigationProxy.OnPushAsync(Microsoft.Maui.Controls.Page page, bool animated) -> System.Threading.Tasks.Task
~virtual Microsoft.Maui.Controls.Internals.NavigationProxy.OnPushModal(Microsoft.Maui.Controls.Page modal, bool animated) -> System.Threading.Tasks.Task
~virtual Microsoft.Maui.Controls.Internals.NavigationProxy.OnRemovePage(Microsoft.Maui.Controls.Page page) -> void
~virtual Microsoft.Maui.Controls.Internals.TableModel.GetCell(int section, int row) -> Microsoft.Maui.Controls.Cell
~virtual Microsoft.Maui.Controls.Internals.TableModel.GetHeaderCell(int section) -> Microsoft.Maui.Controls.Cell
~virtual Microsoft.Maui.Controls.Internals.TableModel.GetSectionIndexTitles() -> string[]
~virtual Microsoft.Maui.Controls.Internals.TableModel.GetSectionTextColor(int section) -> Microsoft.Maui.Graphics.Color
~virtual Microsoft.Maui.Controls.Internals.TableModel.GetSectionTitle(int section) -> string
~virtual Microsoft.Maui.Controls.Internals.TableModel.OnRowLongPressed(object item) -> void
~virtual Microsoft.Maui.Controls.Internals.TableModel.OnRowSelected(object item) -> void
~virtual Microsoft.Maui.Controls.ItemsView.OnScrolled(Microsoft.Maui.Controls.ItemsViewScrolledEventArgs e) -> void
~virtual Microsoft.Maui.Controls.ItemsView.OnScrollToRequested(Microsoft.Maui.Controls.ScrollToRequestEventArgs e) -> void
~virtual Microsoft.Maui.Controls.Label.UpdateFormsText(string source, Microsoft.Maui.TextTransform textTransform) -> string
~virtual Microsoft.Maui.Controls.Layout.OnAdd(int index, Microsoft.Maui.IView view) -> void
~virtual Microsoft.Maui.Controls.Layout.OnInsert(int index, Microsoft.Maui.IView view) -> void
~virtual Microsoft.Maui.Controls.Layout.OnRemove(int index, Microsoft.Maui.IView view) -> void
~virtual Microsoft.Maui.Controls.Layout.OnUpdate(int index, Microsoft.Maui.IView view, Microsoft.Maui.IView oldView) -> void
~virtual Microsoft.Maui.Controls.MultiPage<T>.OnPagesChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs e) -> void
~virtual Microsoft.Maui.Controls.MultiPage<T>.SetupContent(T content, int index) -> void
~virtual Microsoft.Maui.Controls.MultiPage<T>.UnhookContent(T content) -> void
~virtual Microsoft.Maui.Controls.Page.GetParentWindow() -> Microsoft.Maui.Controls.Window
~virtual Microsoft.Maui.Controls.Page.OnChildMeasureInvalidated(object sender, System.EventArgs e) -> void
~virtual Microsoft.Maui.Controls.Page.OnNavigatedFrom(Microsoft.Maui.Controls.NavigatedFromEventArgs args) -> void
~virtual Microsoft.Maui.Controls.Page.OnNavigatedTo(Microsoft.Maui.Controls.NavigatedToEventArgs args) -> void
~virtual Microsoft.Maui.Controls.Page.OnNavigatingFrom(Microsoft.Maui.Controls.NavigatingFromEventArgs args) -> void
~virtual Microsoft.Maui.Controls.Picker.UpdateFormsText(string source, Microsoft.Maui.TextTransform textTransform) -> string
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ContainerView.OnViewSet(Microsoft.Maui.Controls.View view) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.SearchHandlerAppearanceTracker.GetDigitsKeyListener(Android.Text.InputTypes inputTypes) -> Android.Text.Method.NumberKeyListener
~virtual Microsoft.Maui.Controls.Platform.Compatibility.SearchHandlerAppearanceTracker.SearchHandlerPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellBottomNavViewAppearanceTracker.ResetAppearance(Google.Android.Material.BottomNavigation.BottomNavigationView bottomView) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellBottomNavViewAppearanceTracker.SetAppearance(Google.Android.Material.BottomNavigation.BottomNavigationView bottomView, Microsoft.Maui.Controls.IShellAppearanceElement appearance) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellBottomNavViewAppearanceTracker.SetBackgroundColor(Google.Android.Material.BottomNavigation.BottomNavigationView bottomView, Microsoft.Maui.Graphics.Color color) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellContentFragment.SetAppearance(Microsoft.Maui.Controls.ShellAppearance appearance) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.DefaultItemTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.DefaultMenuItemTemplate.get -> Microsoft.Maui.Controls.DataTemplate
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.GenerateItemList() -> System.Collections.Generic.List<Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.AdapterListItem>
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.OnFlyoutItemsChanged(object sender, System.EventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRenderer.AttachFlyout(Microsoft.Maui.Controls.Platform.Compatibility.IShellContext context, Android.Views.View content) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRenderer.OnShellPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRenderer.UpdateFlyoutSize(Android.Views.View flyoutView) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.LoadView(Microsoft.Maui.Controls.Platform.Compatibility.IShellContext shellContext) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.OnShellPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.ChangeSection(Microsoft.Maui.Controls.ShellSection shellSection) -> bool
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.CreateItemBackgroundDrawable() -> Android.Graphics.Drawables.Drawable
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.CreateMoreBottomSheet(System.Action<int, Google.Android.Material.BottomSheet.BottomSheetDialog> selectCallback) -> Google.Android.Material.BottomSheet.BottomSheetDialog
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.CreateMoreBottomSheet(System.Action<Microsoft.Maui.Controls.ShellSection, Google.Android.Material.BottomSheet.BottomSheetDialog> selectCallback) -> Google.Android.Material.BottomSheet.BottomSheetDialog
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.OnItemSelected(Android.Views.IMenuItem item) -> bool
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.OnMoreItemSelected(Microsoft.Maui.Controls.ShellSection shellSection, Google.Android.Material.BottomSheet.BottomSheetDialog dialog) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.OnMoreSheetDismissed(object sender, System.EventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.OnTabReselected(Microsoft.Maui.Controls.ShellSection shellSection) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.SetAppearance(Microsoft.Maui.Controls.ShellAppearance appearance) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.SetupMenu(Android.Views.IMenu menu, int maxBottomItems, Microsoft.Maui.Controls.ShellItem shellItem) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.UpdateShellSectionEnabled(Microsoft.Maui.Controls.ShellSection shellSection, Android.Views.IMenuItem menuItem) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.UpdateShellSectionIcon(Microsoft.Maui.Controls.ShellSection shellSection, Android.Views.IMenuItem menuItem) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.UpdateShellSectionTitle(Microsoft.Maui.Controls.ShellSection shellSection, Android.Views.IMenuItem menuItem) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.CreateFragmentForPage(Microsoft.Maui.Controls.Page page) -> Microsoft.Maui.Controls.Platform.Compatibility.IShellObservableFragment
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.GetOrCreateFragmentForTab(Microsoft.Maui.Controls.ShellSection shellSection) -> Microsoft.Maui.Controls.Platform.Compatibility.IShellObservableFragment
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.HandleFragmentUpdate(Microsoft.Maui.Controls.ShellNavigationSource navSource, Microsoft.Maui.Controls.ShellSection shellSection, Microsoft.Maui.Controls.Page page, bool animated) -> System.Threading.Tasks.Task<bool>
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.HookChildEvents(Microsoft.Maui.Controls.ShellSection shellSection) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.HookEvents(Microsoft.Maui.Controls.ShellItem shellItem) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.OnDisplayedPageChanged(Microsoft.Maui.Controls.Page newPage, Microsoft.Maui.Controls.Page oldPage) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.OnNavigationRequested(object sender, Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.OnShellItemPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.OnShellItemsChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.OnShellSectionPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.SetupAnimation(Microsoft.Maui.Controls.ShellNavigationSource navSource, AndroidX.Fragment.App.FragmentTransaction t, Microsoft.Maui.Controls.Page page) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.UnhookChildEvents(Microsoft.Maui.Controls.ShellSection shellSection) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.UnhookEvents(Microsoft.Maui.Controls.ShellItem shellItem) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchView.CreateSearchHandlerAppearanceTracker() -> Microsoft.Maui.Controls.Platform.Compatibility.SearchHandlerAppearanceTracker
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchView.LoadView(Microsoft.Maui.Controls.SearchHandler searchHandler) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchView.OnClearButtonClicked(object sender, System.EventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchView.OnClearPlaceholderButtonClicked(object sender, System.EventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchView.OnSearchButtonClicked(object sender, System.EventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchView.OnSearchHandlerPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchViewAdapter.OnSearchHandlerPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellSectionRenderer.OnAnimationFinished(System.EventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellSectionRenderer.OnItemsCollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellSectionRenderer.OnShellItemPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellSectionRenderer.SetAppearance(Microsoft.Maui.Controls.ShellAppearance appearance) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellTabLayoutAppearanceTracker.ResetAppearance(Google.Android.Material.Tabs.TabLayout tabLayout) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellTabLayoutAppearanceTracker.SetAppearance(Google.Android.Material.Tabs.TabLayout tabLayout, Microsoft.Maui.Controls.ShellAppearance appearance) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellTabLayoutAppearanceTracker.SetColors(Google.Android.Material.Tabs.TabLayout tabLayout, Microsoft.Maui.Graphics.Color foreground, Microsoft.Maui.Graphics.Color background, Microsoft.Maui.Graphics.Color title, Microsoft.Maui.Graphics.Color unselected) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarAppearanceTracker.ResetAppearance(AndroidX.AppCompat.Widget.Toolbar toolbar, Microsoft.Maui.Controls.Platform.Compatibility.IShellToolbarTracker toolbarTracker) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarAppearanceTracker.SetAppearance(AndroidX.AppCompat.Widget.Toolbar toolbar, Microsoft.Maui.Controls.Platform.Compatibility.IShellToolbarTracker toolbarTracker, Microsoft.Maui.Controls.ShellAppearance appearance) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarAppearanceTracker.SetColors(AndroidX.AppCompat.Widget.Toolbar toolbar, Microsoft.Maui.Controls.Platform.Compatibility.IShellToolbarTracker toolbarTracker, Microsoft.Maui.Graphics.Color foreground, Microsoft.Maui.Graphics.Color background, Microsoft.Maui.Graphics.Color title) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.GetSearchView(Android.Content.Context context) -> Microsoft.Maui.Controls.Platform.Compatibility.IShellSearchView
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.OnPageChanged(Microsoft.Maui.Controls.Page oldPage, Microsoft.Maui.Controls.Page newPage) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.OnPagePropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.OnPageToolbarItemsChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.OnSearchConfirmed(object sender, System.EventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.OnSearchHandlerChanged(Microsoft.Maui.Controls.SearchHandler oldValue, Microsoft.Maui.Controls.SearchHandler newValue) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.OnSearchHandlerPropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.UpdateDrawerArrow(Android.Content.Context context, AndroidX.AppCompat.Widget.Toolbar toolbar, AndroidX.DrawerLayout.Widget.DrawerLayout drawerLayout) -> System.Threading.Tasks.Task
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.UpdateDrawerArrowFromBackButtonBehavior(Android.Content.Context context, AndroidX.AppCompat.Widget.Toolbar toolbar, AndroidX.DrawerLayout.Widget.DrawerLayout drawerLayout, Microsoft.Maui.Controls.BackButtonBehavior backButtonHandler) -> System.Threading.Tasks.Task
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.UpdateDrawerArrowFromFlyoutIcon(Android.Content.Context context, AndroidX.AppCompat.App.ActionBarDrawerToggle actionBarDrawerToggle) -> System.Threading.Tasks.Task
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.UpdateLeftBarButtonItem(Android.Content.Context context, AndroidX.AppCompat.Widget.Toolbar toolbar, AndroidX.DrawerLayout.Widget.DrawerLayout drawerLayout, Microsoft.Maui.Controls.Page page) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.UpdateMenuItemIcon(Android.Content.Context context, Android.Views.IMenuItem menuItem, Microsoft.Maui.Controls.ToolbarItem toolBarItem) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.UpdateNavBarVisible(AndroidX.AppCompat.Widget.Toolbar toolbar, Microsoft.Maui.Controls.Page page) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.UpdatePageTitle(AndroidX.AppCompat.Widget.Toolbar toolbar, Microsoft.Maui.Controls.Page page) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.UpdateTitleView(Android.Content.Context context, AndroidX.AppCompat.Widget.Toolbar toolbar, Microsoft.Maui.Controls.View titleView) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.UpdateToolbarIconAccessibilityText(AndroidX.AppCompat.Widget.Toolbar toolbar, Microsoft.Maui.Controls.Shell shell) -> void
~virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.UpdateToolbarItems(AndroidX.AppCompat.Widget.Toolbar toolbar, Microsoft.Maui.Controls.Page page) -> void
~virtual Microsoft.Maui.Controls.PlatformEffect<TContainer, TControl>.OnElementPropertyChanged(System.ComponentModel.PropertyChangedEventArgs args) -> void
~virtual Microsoft.Maui.Controls.PropertyChangingEventArgs.PropertyName.get -> string
~virtual Microsoft.Maui.Controls.RadioButton.UpdateFormsText(string source, Microsoft.Maui.TextTransform textTransform) -> string
~virtual Microsoft.Maui.Controls.SearchHandler.OnItemSelected(object item) -> void
~virtual Microsoft.Maui.Controls.SearchHandler.OnQueryChanged(string oldValue, string newValue) -> void
~virtual Microsoft.Maui.Controls.SearchHandler.UpdateFormsText(string source, Microsoft.Maui.TextTransform textTransform) -> string
~virtual Microsoft.Maui.Controls.SelectableItemsView.OnSelectionChanged(Microsoft.Maui.Controls.SelectionChangedEventArgs args) -> void
~virtual Microsoft.Maui.Controls.Shell.OnNavigated(Microsoft.Maui.Controls.ShellNavigatedEventArgs args) -> void
~virtual Microsoft.Maui.Controls.Shell.OnNavigating(Microsoft.Maui.Controls.ShellNavigatingEventArgs args) -> void
~virtual Microsoft.Maui.Controls.ShellSection.GetNavigationStack() -> System.Collections.Generic.IReadOnlyList<Microsoft.Maui.Controls.Page>
~virtual Microsoft.Maui.Controls.ShellSection.OnInsertPageBefore(Microsoft.Maui.Controls.Page page, Microsoft.Maui.Controls.Page before) -> void
~virtual Microsoft.Maui.Controls.ShellSection.OnPopAsync(bool animated) -> System.Threading.Tasks.Task<Microsoft.Maui.Controls.Page>
~virtual Microsoft.Maui.Controls.ShellSection.OnPopToRootAsync(bool animated) -> System.Threading.Tasks.Task
~virtual Microsoft.Maui.Controls.ShellSection.OnPushAsync(Microsoft.Maui.Controls.Page page, bool animated) -> System.Threading.Tasks.Task
~virtual Microsoft.Maui.Controls.ShellSection.OnRemovePage(Microsoft.Maui.Controls.Page page) -> void
~virtual Microsoft.Maui.Controls.SolidColorBrush.Color.get -> Microsoft.Maui.Graphics.Color
~virtual Microsoft.Maui.Controls.SolidColorBrush.Color.set -> void
~virtual Microsoft.Maui.Controls.Span.UpdateFormsText(string source, Microsoft.Maui.TextTransform textTransform) -> string
~virtual Microsoft.Maui.Controls.StreamImageSource.Stream.get -> System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<System.IO.Stream>>
~virtual Microsoft.Maui.Controls.StreamImageSource.Stream.set -> void
~virtual Microsoft.Maui.Controls.TemplatedView.ResolveControlTemplate() -> Microsoft.Maui.Controls.ControlTemplate
~virtual Microsoft.Maui.Controls.TimePicker.UpdateFormsText(string source, Microsoft.Maui.TextTransform textTransform) -> string
~virtual Microsoft.Maui.Controls.Toolbar.BarTextColor.get -> Microsoft.Maui.Graphics.Color
~virtual Microsoft.Maui.Controls.Toolbar.BarTextColor.set -> void
~virtual Microsoft.Maui.Controls.Toolbar.IconColor.get -> Microsoft.Maui.Graphics.Color
~virtual Microsoft.Maui.Controls.Toolbar.IconColor.set -> void
~virtual Microsoft.Maui.Controls.Toolbar.Title.get -> string
~virtual Microsoft.Maui.Controls.Toolbar.Title.set -> void
~virtual Microsoft.Maui.Controls.Toolbar.TitleView.get -> Microsoft.Maui.Controls.VisualElement
~virtual Microsoft.Maui.Controls.Toolbar.TitleView.set -> void
~virtual Microsoft.Maui.Controls.View.GetChildElements(Microsoft.Maui.Graphics.Point point) -> System.Collections.Generic.IList<Microsoft.Maui.Controls.GestureElement>
abstract Microsoft.Maui.Controls.Brush.IsEmpty.get -> bool
abstract Microsoft.Maui.Controls.Compatibility.Layout.LayoutChildren(double x, double y, double width, double height) -> void
abstract Microsoft.Maui.Controls.Internals.GIFImageParser.FinishedParsing() -> void
abstract Microsoft.Maui.Controls.Internals.GIFImageParser.StartParsing() -> void
abstract Microsoft.Maui.Controls.Internals.TableModel.GetRowCount(int section) -> int
abstract Microsoft.Maui.Controls.Internals.TableModel.GetSectionCount() -> int
abstract Microsoft.Maui.Controls.Shapes.Shape.GetPath() -> Microsoft.Maui.Graphics.PathF!
const Microsoft.Maui.Controls.Cell.DefaultCellHeight = 40 -> int
const Microsoft.Maui.Controls.Handlers.Compatibility.BaseCellView.DefaultMinHeight = 44 -> double
const Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellView.DefaultMinHeight = 55 -> double
const Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.MoreTabId = 99 -> int
Microsoft.Maui.Controls.AbsoluteLayout
Microsoft.Maui.Controls.AbsoluteLayout.AbsoluteLayout() -> void
Microsoft.Maui.Controls.Accelerator
Microsoft.Maui.Controls.AcceleratorTypeConverter
Microsoft.Maui.Controls.AcceleratorTypeConverter.AcceleratorTypeConverter() -> void
Microsoft.Maui.Controls.AccessKeyPlacement
Microsoft.Maui.Controls.AccessKeyPlacement.Auto = 0 -> Microsoft.Maui.Controls.AccessKeyPlacement
Microsoft.Maui.Controls.AccessKeyPlacement.Bottom = 2 -> Microsoft.Maui.Controls.AccessKeyPlacement
Microsoft.Maui.Controls.AccessKeyPlacement.Center = 5 -> Microsoft.Maui.Controls.AccessKeyPlacement
Microsoft.Maui.Controls.AccessKeyPlacement.Left = 4 -> Microsoft.Maui.Controls.AccessKeyPlacement
Microsoft.Maui.Controls.AccessKeyPlacement.Right = 3 -> Microsoft.Maui.Controls.AccessKeyPlacement
Microsoft.Maui.Controls.AccessKeyPlacement.Top = 1 -> Microsoft.Maui.Controls.AccessKeyPlacement
Microsoft.Maui.Controls.ActivityIndicator
Microsoft.Maui.Controls.ActivityIndicator.ActivityIndicator() -> void
Microsoft.Maui.Controls.ActivityIndicator.IsRunning.get -> bool
Microsoft.Maui.Controls.ActivityIndicator.IsRunning.set -> void
Microsoft.Maui.Controls.AdaptiveTrigger
Microsoft.Maui.Controls.AdaptiveTrigger.AdaptiveTrigger() -> void
Microsoft.Maui.Controls.AdaptiveTrigger.MinWindowHeight.get -> double
Microsoft.Maui.Controls.AdaptiveTrigger.MinWindowHeight.set -> void
Microsoft.Maui.Controls.AdaptiveTrigger.MinWindowWidth.get -> double
Microsoft.Maui.Controls.AdaptiveTrigger.MinWindowWidth.set -> void
Microsoft.Maui.Controls.AndExpandLayoutManager
Microsoft.Maui.Controls.AndExpandLayoutManager.ArrangeChildren(Microsoft.Maui.Graphics.Rect bounds) -> Microsoft.Maui.Graphics.Size
Microsoft.Maui.Controls.AndExpandLayoutManager.Measure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
Microsoft.Maui.Controls.Animation
Microsoft.Maui.Controls.Animation.Animation() -> void
Microsoft.Maui.Controls.Animation.IsEnabled.get -> bool
Microsoft.Maui.Controls.AnimationExtensions
Microsoft.Maui.Controls.Application
Microsoft.Maui.Controls.Application.Application() -> void
Microsoft.Maui.Controls.Application.AppLinks.get -> Microsoft.Maui.Controls.IAppLinks!
Microsoft.Maui.Controls.Application.MainPage.get -> Microsoft.Maui.Controls.Page?
Microsoft.Maui.Controls.Application.MainPage.set -> void
Microsoft.Maui.Controls.Application.ModalPopped -> System.EventHandler<Microsoft.Maui.Controls.ModalPoppedEventArgs!>?
Microsoft.Maui.Controls.Application.ModalPopping -> System.EventHandler<Microsoft.Maui.Controls.ModalPoppingEventArgs!>?
Microsoft.Maui.Controls.Application.ModalPushed -> System.EventHandler<Microsoft.Maui.Controls.ModalPushedEventArgs!>?
Microsoft.Maui.Controls.Application.ModalPushing -> System.EventHandler<Microsoft.Maui.Controls.ModalPushingEventArgs!>?
Microsoft.Maui.Controls.Application.NavigationProxy.get -> Microsoft.Maui.Controls.Internals.NavigationProxy?
Microsoft.Maui.Controls.Application.On<T>() -> Microsoft.Maui.Controls.IPlatformElementConfiguration<T, Microsoft.Maui.Controls.Application!>!
Microsoft.Maui.Controls.Application.PageAppearing -> System.EventHandler<Microsoft.Maui.Controls.Page!>?
Microsoft.Maui.Controls.Application.PageDisappearing -> System.EventHandler<Microsoft.Maui.Controls.Page!>?
Microsoft.Maui.Controls.Application.PlatformAppTheme.get -> Microsoft.Maui.ApplicationModel.AppTheme
Microsoft.Maui.Controls.Application.Quit() -> void
Microsoft.Maui.Controls.Application.RequestedTheme.get -> Microsoft.Maui.ApplicationModel.AppTheme
Microsoft.Maui.Controls.Application.RequestedThemeChanged -> System.EventHandler<Microsoft.Maui.Controls.AppThemeChangedEventArgs!>!
Microsoft.Maui.Controls.Application.Resources.get -> Microsoft.Maui.Controls.ResourceDictionary!
Microsoft.Maui.Controls.Application.Resources.set -> void
Microsoft.Maui.Controls.Application.SendOnAppLinkRequestReceived(System.Uri! uri) -> void
Microsoft.Maui.Controls.Application.SetAppIndexingProvider(Microsoft.Maui.Controls.IAppIndexingProvider! provider) -> void
Microsoft.Maui.Controls.Application.UserAppTheme.get -> Microsoft.Maui.ApplicationModel.AppTheme
Microsoft.Maui.Controls.Application.UserAppTheme.set -> void
Microsoft.Maui.Controls.Application.Windows.get -> System.Collections.Generic.IReadOnlyList<Microsoft.Maui.Controls.Window!>!
Microsoft.Maui.Controls.AppLinkEntry
Microsoft.Maui.Controls.AppLinkEntry.AppLinkEntry() -> void
Microsoft.Maui.Controls.AppLinkEntry.IsLinkActive.get -> bool
Microsoft.Maui.Controls.AppLinkEntry.IsLinkActive.set -> void
Microsoft.Maui.Controls.AppThemeChangedEventArgs
Microsoft.Maui.Controls.AppThemeChangedEventArgs.AppThemeChangedEventArgs(Microsoft.Maui.ApplicationModel.AppTheme appTheme) -> void
Microsoft.Maui.Controls.AppThemeChangedEventArgs.RequestedTheme.get -> Microsoft.Maui.ApplicationModel.AppTheme
Microsoft.Maui.Controls.AutomationProperties
Microsoft.Maui.Controls.AutomationProperties.AutomationProperties() -> void
Microsoft.Maui.Controls.BackButtonBehavior
Microsoft.Maui.Controls.BackButtonBehavior.BackButtonBehavior() -> void
Microsoft.Maui.Controls.BackButtonBehavior.IsEnabled.get -> bool
Microsoft.Maui.Controls.BackButtonBehavior.IsEnabled.set -> void
Microsoft.Maui.Controls.BackButtonBehavior.IsVisible.get -> bool
Microsoft.Maui.Controls.BackButtonBehavior.IsVisible.set -> void
Microsoft.Maui.Controls.BackButtonPressedEventArgs
Microsoft.Maui.Controls.BackButtonPressedEventArgs.BackButtonPressedEventArgs() -> void
Microsoft.Maui.Controls.BackButtonPressedEventArgs.Handled.get -> bool
Microsoft.Maui.Controls.BackButtonPressedEventArgs.Handled.set -> void
Microsoft.Maui.Controls.BackgroundingEventArgs
Microsoft.Maui.Controls.BaseMenuItem
Microsoft.Maui.Controls.BaseMenuItem.BaseMenuItem() -> void
Microsoft.Maui.Controls.BaseShellItem
Microsoft.Maui.Controls.BaseShellItem.Appearing -> System.EventHandler
Microsoft.Maui.Controls.BaseShellItem.BaseShellItem() -> void
Microsoft.Maui.Controls.BaseShellItem.Disappearing -> System.EventHandler
Microsoft.Maui.Controls.BaseShellItem.FlyoutItemIsVisible.get -> bool
Microsoft.Maui.Controls.BaseShellItem.FlyoutItemIsVisible.set -> void
Microsoft.Maui.Controls.BaseShellItem.IsChecked.get -> bool
Microsoft.Maui.Controls.BaseShellItem.IsEnabled.get -> bool
Microsoft.Maui.Controls.BaseShellItem.IsEnabled.set -> void
Microsoft.Maui.Controls.BaseShellItem.IsVisible.get -> bool
Microsoft.Maui.Controls.BaseShellItem.IsVisible.set -> void
Microsoft.Maui.Controls.BaseSwipeEventArgs
Microsoft.Maui.Controls.BaseSwipeEventArgs.BaseSwipeEventArgs(Microsoft.Maui.SwipeDirection swipeDirection) -> void
Microsoft.Maui.Controls.BaseSwipeEventArgs.SwipeDirection.get -> Microsoft.Maui.SwipeDirection
Microsoft.Maui.Controls.BaseSwipeEventArgs.SwipeDirection.set -> void
Microsoft.Maui.Controls.Behavior
Microsoft.Maui.Controls.Behavior.Behavior() -> void
Microsoft.Maui.Controls.Behavior<T>.Behavior() -> void
Microsoft.Maui.Controls.BindableLayout
Microsoft.Maui.Controls.BindableObject
Microsoft.Maui.Controls.BindableObject.ApplyBindings() -> void
Microsoft.Maui.Controls.BindableObject.BindableObject() -> void
Microsoft.Maui.Controls.BindableObject.BindingContextChanged -> System.EventHandler
Microsoft.Maui.Controls.BindableObject.PropertyChanged -> System.ComponentModel.PropertyChangedEventHandler
Microsoft.Maui.Controls.BindableObject.PropertyChanging -> Microsoft.Maui.Controls.PropertyChangingEventHandler
Microsoft.Maui.Controls.BindableObject.UnapplyBindings() -> void
Microsoft.Maui.Controls.BindableObjectExtensions
Microsoft.Maui.Controls.BindableProperty
Microsoft.Maui.Controls.BindableProperty.BindingPropertyChangedDelegate
Microsoft.Maui.Controls.BindableProperty.BindingPropertyChangedDelegate<TPropertyType>
Microsoft.Maui.Controls.BindableProperty.BindingPropertyChangingDelegate
Microsoft.Maui.Controls.BindableProperty.BindingPropertyChangingDelegate<TPropertyType>
Microsoft.Maui.Controls.BindableProperty.CoerceValueDelegate
Microsoft.Maui.Controls.BindableProperty.CoerceValueDelegate<TPropertyType>
Microsoft.Maui.Controls.BindableProperty.CreateDefaultValueDelegate
Microsoft.Maui.Controls.BindableProperty.CreateDefaultValueDelegate<TDeclarer, TPropertyType>
Microsoft.Maui.Controls.BindableProperty.DefaultBindingMode.get -> Microsoft.Maui.Controls.BindingMode
Microsoft.Maui.Controls.BindableProperty.IsReadOnly.get -> bool
Microsoft.Maui.Controls.BindableProperty.ValidateValueDelegate
Microsoft.Maui.Controls.BindableProperty.ValidateValueDelegate<TPropertyType>
Microsoft.Maui.Controls.BindablePropertyConverter
Microsoft.Maui.Controls.BindablePropertyConverter.BindablePropertyConverter() -> void
Microsoft.Maui.Controls.BindablePropertyKey
Microsoft.Maui.Controls.Binding
Microsoft.Maui.Controls.Binding.Binding() -> void
Microsoft.Maui.Controls.BindingBase
Microsoft.Maui.Controls.BindingBase.Mode.get -> Microsoft.Maui.Controls.BindingMode
Microsoft.Maui.Controls.BindingBase.Mode.set -> void
Microsoft.Maui.Controls.BindingCondition
Microsoft.Maui.Controls.BindingCondition.BindingCondition() -> void
Microsoft.Maui.Controls.BindingMode
Microsoft.Maui.Controls.BindingMode.Default = 0 -> Microsoft.Maui.Controls.BindingMode
Microsoft.Maui.Controls.BindingMode.OneTime = 4 -> Microsoft.Maui.Controls.BindingMode
Microsoft.Maui.Controls.BindingMode.OneWay = 2 -> Microsoft.Maui.Controls.BindingMode
Microsoft.Maui.Controls.BindingMode.OneWayToSource = 3 -> Microsoft.Maui.Controls.BindingMode
Microsoft.Maui.Controls.BindingMode.TwoWay = 1 -> Microsoft.Maui.Controls.BindingMode
Microsoft.Maui.Controls.Border
Microsoft.Maui.Controls.Border.~Border() -> void
Microsoft.Maui.Controls.Border.Border() -> void
Microsoft.Maui.Controls.Border.Content.get -> Microsoft.Maui.Controls.View?
Microsoft.Maui.Controls.Border.Content.set -> void
Microsoft.Maui.Controls.Border.CrossPlatformArrange(Microsoft.Maui.Graphics.Rect bounds) -> Microsoft.Maui.Graphics.Size
Microsoft.Maui.Controls.Border.CrossPlatformMeasure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
Microsoft.Maui.Controls.Border.OnPaddingPropertyChanged(Microsoft.Maui.Thickness oldValue, Microsoft.Maui.Thickness newValue) -> void
Microsoft.Maui.Controls.Border.Padding.get -> Microsoft.Maui.Thickness
Microsoft.Maui.Controls.Border.Padding.set -> void
Microsoft.Maui.Controls.Border.PaddingDefaultValueCreator() -> Microsoft.Maui.Thickness
Microsoft.Maui.Controls.Border.Stroke.get -> Microsoft.Maui.Controls.Brush?
Microsoft.Maui.Controls.Border.Stroke.set -> void
Microsoft.Maui.Controls.Border.StrokeDashArray.get -> Microsoft.Maui.Controls.DoubleCollection?
Microsoft.Maui.Controls.Border.StrokeDashArray.set -> void
Microsoft.Maui.Controls.Border.StrokeDashOffset.get -> double
Microsoft.Maui.Controls.Border.StrokeDashOffset.set -> void
Microsoft.Maui.Controls.Border.StrokeDashPattern.get -> float[]?
Microsoft.Maui.Controls.Border.StrokeLineCap.get -> Microsoft.Maui.Controls.Shapes.PenLineCap
Microsoft.Maui.Controls.Border.StrokeLineCap.set -> void
Microsoft.Maui.Controls.Border.StrokeLineJoin.get -> Microsoft.Maui.Controls.Shapes.PenLineJoin
Microsoft.Maui.Controls.Border.StrokeLineJoin.set -> void
Microsoft.Maui.Controls.Border.StrokeMiterLimit.get -> double
Microsoft.Maui.Controls.Border.StrokeMiterLimit.set -> void
Microsoft.Maui.Controls.Border.StrokeShape.get -> Microsoft.Maui.Graphics.IShape?
Microsoft.Maui.Controls.Border.StrokeShape.set -> void
Microsoft.Maui.Controls.Border.StrokeThickness.get -> double
Microsoft.Maui.Controls.Border.StrokeThickness.set -> void
Microsoft.Maui.Controls.BoundsConstraint
Microsoft.Maui.Controls.BoundsTypeConverter
Microsoft.Maui.Controls.BoundsTypeConverter.BoundsTypeConverter() -> void
Microsoft.Maui.Controls.BoxView
Microsoft.Maui.Controls.BoxView.BoxView() -> void
Microsoft.Maui.Controls.BoxView.CornerRadius.get -> Microsoft.Maui.CornerRadius
Microsoft.Maui.Controls.BoxView.CornerRadius.set -> void
Microsoft.Maui.Controls.Brush
Microsoft.Maui.Controls.Brush.Brush() -> void
Microsoft.Maui.Controls.BrushTypeConverter
Microsoft.Maui.Controls.BrushTypeConverter.BrushTypeConverter() -> void
Microsoft.Maui.Controls.BrushTypeConverter.GradientBrushParser
Microsoft.Maui.Controls.Button
Microsoft.Maui.Controls.Button.BorderWidth.get -> double
Microsoft.Maui.Controls.Button.BorderWidth.set -> void
Microsoft.Maui.Controls.Button.Button() -> void
Microsoft.Maui.Controls.Button.ButtonContentLayout
Microsoft.Maui.Controls.Button.ButtonContentLayout.ButtonContentLayout(Microsoft.Maui.Controls.Button.ButtonContentLayout.ImagePosition position, double spacing) -> void
Microsoft.Maui.Controls.Button.ButtonContentLayout.ImagePosition
Microsoft.Maui.Controls.Button.ButtonContentLayout.ImagePosition.Bottom = 3 -> Microsoft.Maui.Controls.Button.ButtonContentLayout.ImagePosition
Microsoft.Maui.Controls.Button.ButtonContentLayout.ImagePosition.Left = 0 -> Microsoft.Maui.Controls.Button.ButtonContentLayout.ImagePosition
Microsoft.Maui.Controls.Button.ButtonContentLayout.ImagePosition.Right = 2 -> Microsoft.Maui.Controls.Button.ButtonContentLayout.ImagePosition
Microsoft.Maui.Controls.Button.ButtonContentLayout.ImagePosition.Top = 1 -> Microsoft.Maui.Controls.Button.ButtonContentLayout.ImagePosition
Microsoft.Maui.Controls.Button.ButtonContentLayout.Position.get -> Microsoft.Maui.Controls.Button.ButtonContentLayout.ImagePosition
Microsoft.Maui.Controls.Button.ButtonContentLayout.Spacing.get -> double
Microsoft.Maui.Controls.Button.ButtonContentTypeConverter
Microsoft.Maui.Controls.Button.ButtonContentTypeConverter.ButtonContentTypeConverter() -> void
Microsoft.Maui.Controls.Button.CharacterSpacing.get -> double
Microsoft.Maui.Controls.Button.CharacterSpacing.set -> void
Microsoft.Maui.Controls.Button.Clicked -> System.EventHandler
Microsoft.Maui.Controls.Button.CornerRadius.get -> int
Microsoft.Maui.Controls.Button.CornerRadius.set -> void
Microsoft.Maui.Controls.Button.FontAttributes.get -> Microsoft.Maui.Controls.FontAttributes
Microsoft.Maui.Controls.Button.FontAttributes.set -> void
Microsoft.Maui.Controls.Button.FontAutoScalingEnabled.get -> bool
Microsoft.Maui.Controls.Button.FontAutoScalingEnabled.set -> void
Microsoft.Maui.Controls.Button.FontSize.get -> double
Microsoft.Maui.Controls.Button.FontSize.set -> void
Microsoft.Maui.Controls.Button.IsPressed.get -> bool
Microsoft.Maui.Controls.Button.LineBreakMode.get -> Microsoft.Maui.LineBreakMode
Microsoft.Maui.Controls.Button.LineBreakMode.set -> void
Microsoft.Maui.Controls.Button.Padding.get -> Microsoft.Maui.Thickness
Microsoft.Maui.Controls.Button.Padding.set -> void
Microsoft.Maui.Controls.Button.Pressed -> System.EventHandler
Microsoft.Maui.Controls.Button.Released -> System.EventHandler
Microsoft.Maui.Controls.Button.SendClicked() -> void
Microsoft.Maui.Controls.Button.SendPressed() -> void
Microsoft.Maui.Controls.Button.SendReleased() -> void
Microsoft.Maui.Controls.Button.TextTransform.get -> Microsoft.Maui.TextTransform
Microsoft.Maui.Controls.Button.TextTransform.set -> void
Microsoft.Maui.Controls.ButtonsMask
Microsoft.Maui.Controls.ButtonsMask.Primary = 1 -> Microsoft.Maui.Controls.ButtonsMask
Microsoft.Maui.Controls.ButtonsMask.Secondary = 2 -> Microsoft.Maui.Controls.ButtonsMask
Microsoft.Maui.Controls.CarouselLayoutTypeConverter
Microsoft.Maui.Controls.CarouselLayoutTypeConverter.CarouselLayoutTypeConverter() -> void
Microsoft.Maui.Controls.CarouselView
Microsoft.Maui.Controls.CarouselView.CarouselView() -> void
Microsoft.Maui.Controls.CarouselView.CurrentItemChanged -> System.EventHandler<Microsoft.Maui.Controls.CurrentItemChangedEventArgs>
Microsoft.Maui.Controls.CarouselView.IsBounceEnabled.get -> bool
Microsoft.Maui.Controls.CarouselView.IsBounceEnabled.set -> void
Microsoft.Maui.Controls.CarouselView.IsDragging.get -> bool
Microsoft.Maui.Controls.CarouselView.IsScrollAnimated.get -> bool
Microsoft.Maui.Controls.CarouselView.IsScrollAnimated.set -> void
Microsoft.Maui.Controls.CarouselView.IsScrolling.get -> bool
Microsoft.Maui.Controls.CarouselView.IsScrolling.set -> void
Microsoft.Maui.Controls.CarouselView.IsSwipeEnabled.get -> bool
Microsoft.Maui.Controls.CarouselView.IsSwipeEnabled.set -> void
Microsoft.Maui.Controls.CarouselView.Loop.get -> bool
Microsoft.Maui.Controls.CarouselView.Loop.set -> void
Microsoft.Maui.Controls.CarouselView.PeekAreaInsets.get -> Microsoft.Maui.Thickness
Microsoft.Maui.Controls.CarouselView.PeekAreaInsets.set -> void
Microsoft.Maui.Controls.CarouselView.Position.get -> int
Microsoft.Maui.Controls.CarouselView.Position.set -> void
Microsoft.Maui.Controls.CarouselView.PositionChanged -> System.EventHandler<Microsoft.Maui.Controls.PositionChangedEventArgs>
Microsoft.Maui.Controls.CarouselView.SetIsDragging(bool value) -> void
Microsoft.Maui.Controls.Cell
Microsoft.Maui.Controls.Cell.Appearing -> System.EventHandler
Microsoft.Maui.Controls.Cell.Cell() -> void
Microsoft.Maui.Controls.Cell.Disappearing -> System.EventHandler
Microsoft.Maui.Controls.Cell.ForceUpdateSize() -> void
Microsoft.Maui.Controls.Cell.ForceUpdateSizeRequested -> System.EventHandler
Microsoft.Maui.Controls.Cell.HasContextActions.get -> bool
Microsoft.Maui.Controls.Cell.Height.get -> double
Microsoft.Maui.Controls.Cell.Height.set -> void
Microsoft.Maui.Controls.Cell.IsContextActionsLegacyModeEnabled.get -> bool
Microsoft.Maui.Controls.Cell.IsContextActionsLegacyModeEnabled.set -> void
Microsoft.Maui.Controls.Cell.IsEnabled.get -> bool
Microsoft.Maui.Controls.Cell.IsEnabled.set -> void
Microsoft.Maui.Controls.Cell.RenderHeight.get -> double
Microsoft.Maui.Controls.Cell.SendAppearing() -> void
Microsoft.Maui.Controls.Cell.SendDisappearing() -> void
Microsoft.Maui.Controls.Cell.Tapped -> System.EventHandler
Microsoft.Maui.Controls.CheckBox
Microsoft.Maui.Controls.CheckBox.CheckBox() -> void
Microsoft.Maui.Controls.CheckBox.CheckedChanged -> System.EventHandler<Microsoft.Maui.Controls.CheckedChangedEventArgs>
Microsoft.Maui.Controls.CheckBox.IsChecked.get -> bool
Microsoft.Maui.Controls.CheckBox.IsChecked.set -> void
Microsoft.Maui.Controls.CheckedChangedEventArgs
Microsoft.Maui.Controls.CheckedChangedEventArgs.CheckedChangedEventArgs(bool value) -> void
Microsoft.Maui.Controls.CheckedChangedEventArgs.Value.get -> bool
Microsoft.Maui.Controls.ChildGestureRecognizer
Microsoft.Maui.Controls.ChildGestureRecognizer.ChildGestureRecognizer() -> void
Microsoft.Maui.Controls.ChildGestureRecognizer.PropertyChanged -> System.ComponentModel.PropertyChangedEventHandler
Microsoft.Maui.Controls.ClickedEventArgs
Microsoft.Maui.Controls.ClickedEventArgs.Buttons.get -> Microsoft.Maui.Controls.ButtonsMask
Microsoft.Maui.Controls.ClickGestureRecognizer
Microsoft.Maui.Controls.ClickGestureRecognizer.Buttons.get -> Microsoft.Maui.Controls.ButtonsMask
Microsoft.Maui.Controls.ClickGestureRecognizer.Buttons.set -> void
Microsoft.Maui.Controls.ClickGestureRecognizer.Clicked -> System.EventHandler
Microsoft.Maui.Controls.ClickGestureRecognizer.ClickGestureRecognizer() -> void
Microsoft.Maui.Controls.ClickGestureRecognizer.NumberOfClicksRequired.get -> int
Microsoft.Maui.Controls.ClickGestureRecognizer.NumberOfClicksRequired.set -> void
Microsoft.Maui.Controls.CloseRequestedEventArgs
Microsoft.Maui.Controls.CloseRequestedEventArgs.Animated.get -> bool
Microsoft.Maui.Controls.CloseRequestedEventArgs.Animated.set -> void
Microsoft.Maui.Controls.CloseRequestedEventArgs.CloseRequestedEventArgs(bool animated) -> void
Microsoft.Maui.Controls.CollectionSynchronizationCallback
Microsoft.Maui.Controls.CollectionView
Microsoft.Maui.Controls.CollectionView.CollectionView() -> void
Microsoft.Maui.Controls.ColumnDefinition
Microsoft.Maui.Controls.ColumnDefinition.ColumnDefinition() -> void
Microsoft.Maui.Controls.ColumnDefinition.ColumnDefinition(Microsoft.Maui.GridLength width) -> void
Microsoft.Maui.Controls.ColumnDefinition.SizeChanged -> System.EventHandler
Microsoft.Maui.Controls.ColumnDefinition.Width.get -> Microsoft.Maui.GridLength
Microsoft.Maui.Controls.ColumnDefinition.Width.set -> void
Microsoft.Maui.Controls.ColumnDefinitionCollection
Microsoft.Maui.Controls.ColumnDefinitionCollection.ColumnDefinitionCollection() -> void
Microsoft.Maui.Controls.ColumnDefinitionCollectionTypeConverter
Microsoft.Maui.Controls.ColumnDefinitionCollectionTypeConverter.ColumnDefinitionCollectionTypeConverter() -> void
Microsoft.Maui.Controls.Command
Microsoft.Maui.Controls.Command.CanExecuteChanged -> System.EventHandler
Microsoft.Maui.Controls.Command.ChangeCanExecute() -> void
Microsoft.Maui.Controls.Command<T>
Microsoft.Maui.Controls.CompareStateTrigger
Microsoft.Maui.Controls.CompareStateTrigger.CompareStateTrigger() -> void
Microsoft.Maui.Controls.Compatibility.AbsoluteLayout
Microsoft.Maui.Controls.Compatibility.AbsoluteLayout.AbsoluteLayout() -> void
Microsoft.Maui.Controls.Compatibility.Constraint
Microsoft.Maui.Controls.Compatibility.Constraint.Constraint() -> void
Microsoft.Maui.Controls.Compatibility.ConstraintExpression
Microsoft.Maui.Controls.Compatibility.ConstraintExpression.Constant.get -> double
Microsoft.Maui.Controls.Compatibility.ConstraintExpression.Constant.set -> void
Microsoft.Maui.Controls.Compatibility.ConstraintExpression.ConstraintExpression() -> void
Microsoft.Maui.Controls.Compatibility.ConstraintExpression.Factor.get -> double
Microsoft.Maui.Controls.Compatibility.ConstraintExpression.Factor.set -> void
Microsoft.Maui.Controls.Compatibility.ConstraintExpression.Type.get -> Microsoft.Maui.Controls.ConstraintType
Microsoft.Maui.Controls.Compatibility.ConstraintExpression.Type.set -> void
Microsoft.Maui.Controls.Compatibility.ConstraintTypeConverter
Microsoft.Maui.Controls.Compatibility.ConstraintTypeConverter.ConstraintTypeConverter() -> void
Microsoft.Maui.Controls.Compatibility.FlexLayout
Microsoft.Maui.Controls.Compatibility.FlexLayout.AlignContent.get -> Microsoft.Maui.Layouts.FlexAlignContent
Microsoft.Maui.Controls.Compatibility.FlexLayout.AlignContent.set -> void
Microsoft.Maui.Controls.Compatibility.FlexLayout.AlignItems.get -> Microsoft.Maui.Layouts.FlexAlignItems
Microsoft.Maui.Controls.Compatibility.FlexLayout.AlignItems.set -> void
Microsoft.Maui.Controls.Compatibility.FlexLayout.Direction.get -> Microsoft.Maui.Layouts.FlexDirection
Microsoft.Maui.Controls.Compatibility.FlexLayout.Direction.set -> void
Microsoft.Maui.Controls.Compatibility.FlexLayout.FlexLayout() -> void
Microsoft.Maui.Controls.Compatibility.FlexLayout.JustifyContent.get -> Microsoft.Maui.Layouts.FlexJustify
Microsoft.Maui.Controls.Compatibility.FlexLayout.JustifyContent.set -> void
Microsoft.Maui.Controls.Compatibility.FlexLayout.Position.get -> Microsoft.Maui.Layouts.FlexPosition
Microsoft.Maui.Controls.Compatibility.FlexLayout.Position.set -> void
Microsoft.Maui.Controls.Compatibility.FlexLayout.Wrap.get -> Microsoft.Maui.Layouts.FlexWrap
Microsoft.Maui.Controls.Compatibility.FlexLayout.Wrap.set -> void
Microsoft.Maui.Controls.Compatibility.Grid
Microsoft.Maui.Controls.Compatibility.Grid.ColumnSpacing.get -> double
Microsoft.Maui.Controls.Compatibility.Grid.ColumnSpacing.set -> void
Microsoft.Maui.Controls.Compatibility.Grid.Grid() -> void
Microsoft.Maui.Controls.Compatibility.Grid.InvalidateMeasureInernalNonVirtual(Microsoft.Maui.Controls.Internals.InvalidationTrigger trigger) -> void
Microsoft.Maui.Controls.Compatibility.Grid.RowSpacing.get -> double
Microsoft.Maui.Controls.Compatibility.Grid.RowSpacing.set -> void
Microsoft.Maui.Controls.Compatibility.INativeElementView
Microsoft.Maui.Controls.Compatibility.Layout
Microsoft.Maui.Controls.Compatibility.Layout.CascadeInputTransparent.get -> bool
Microsoft.Maui.Controls.Compatibility.Layout.CascadeInputTransparent.set -> void
Microsoft.Maui.Controls.Compatibility.Layout.CrossPlatformArrange(Microsoft.Maui.Graphics.Rect bounds) -> Microsoft.Maui.Graphics.Size
Microsoft.Maui.Controls.Compatibility.Layout.CrossPlatformMeasure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
Microsoft.Maui.Controls.Compatibility.Layout.ForceLayout() -> void
Microsoft.Maui.Controls.Compatibility.Layout.IsClippedToBounds.get -> bool
Microsoft.Maui.Controls.Compatibility.Layout.IsClippedToBounds.set -> void
Microsoft.Maui.Controls.Compatibility.Layout.Layout() -> void
Microsoft.Maui.Controls.Compatibility.Layout.LayoutChanged -> System.EventHandler
Microsoft.Maui.Controls.Compatibility.Layout.Padding.get -> Microsoft.Maui.Thickness
Microsoft.Maui.Controls.Compatibility.Layout.Padding.set -> void
Microsoft.Maui.Controls.Compatibility.Layout.UpdateChildrenLayout() -> void
Microsoft.Maui.Controls.Compatibility.Layout<T>.Layout() -> void
Microsoft.Maui.Controls.Compatibility.Platform.Android.CanvasExtensions
Microsoft.Maui.Controls.Compatibility.Platform.Android.GeometryExtensions
Microsoft.Maui.Controls.Compatibility.RelativeLayout
Microsoft.Maui.Controls.Compatibility.RelativeLayout.RelativeLayout() -> void
Microsoft.Maui.Controls.Compatibility.StackLayout
Microsoft.Maui.Controls.Compatibility.StackLayout.Orientation.get -> Microsoft.Maui.Controls.StackOrientation
Microsoft.Maui.Controls.Compatibility.StackLayout.Orientation.set -> void
Microsoft.Maui.Controls.Compatibility.StackLayout.Spacing.get -> double
Microsoft.Maui.Controls.Compatibility.StackLayout.Spacing.set -> void
Microsoft.Maui.Controls.Compatibility.StackLayout.StackLayout() -> void
Microsoft.Maui.Controls.CompressedLayout
Microsoft.Maui.Controls.Condition
Microsoft.Maui.Controls.ConstraintType
Microsoft.Maui.Controls.ConstraintType.Constant = 2 -> Microsoft.Maui.Controls.ConstraintType
Microsoft.Maui.Controls.ConstraintType.RelativeToParent = 0 -> Microsoft.Maui.Controls.ConstraintType
Microsoft.Maui.Controls.ConstraintType.RelativeToView = 1 -> Microsoft.Maui.Controls.ConstraintType
Microsoft.Maui.Controls.ContentPage
Microsoft.Maui.Controls.ContentPage.ContentPage() -> void
Microsoft.Maui.Controls.ContentPage.HideSoftInputOnTapped.get -> bool
Microsoft.Maui.Controls.ContentPage.HideSoftInputOnTapped.set -> void
Microsoft.Maui.Controls.ContentPresenter
Microsoft.Maui.Controls.ContentPresenter.ContentPresenter() -> void
Microsoft.Maui.Controls.ContentPropertyAttribute
Microsoft.Maui.Controls.ContentView
Microsoft.Maui.Controls.ContentView.ContentView() -> void
Microsoft.Maui.Controls.ControlsColorExtensions
Microsoft.Maui.Controls.ControlTemplate
Microsoft.Maui.Controls.ControlTemplate.ControlTemplate() -> void
Microsoft.Maui.Controls.CurrentItemChangedEventArgs
Microsoft.Maui.Controls.DataPackage
Microsoft.Maui.Controls.DataPackage.DataPackage() -> void
Microsoft.Maui.Controls.DataPackageOperation
Microsoft.Maui.Controls.DataPackageOperation.Copy = 1 -> Microsoft.Maui.Controls.DataPackageOperation
Microsoft.Maui.Controls.DataPackageOperation.None = 0 -> Microsoft.Maui.Controls.DataPackageOperation
Microsoft.Maui.Controls.DataPackagePropertySet
Microsoft.Maui.Controls.DataPackagePropertySet.Count.get -> int
Microsoft.Maui.Controls.DataPackagePropertySet.DataPackagePropertySet() -> void
Microsoft.Maui.Controls.DataPackagePropertySetView
Microsoft.Maui.Controls.DataPackagePropertySetView.Count.get -> int
Microsoft.Maui.Controls.DataPackageView
Microsoft.Maui.Controls.DataTemplate
Microsoft.Maui.Controls.DataTemplate.DataTemplate() -> void
Microsoft.Maui.Controls.DataTemplateSelector
Microsoft.Maui.Controls.DataTemplateSelector.DataTemplateSelector() -> void
Microsoft.Maui.Controls.DataTrigger
Microsoft.Maui.Controls.DateChangedEventArgs
Microsoft.Maui.Controls.DateChangedEventArgs.DateChangedEventArgs(System.DateTime oldDate, System.DateTime newDate) -> void
Microsoft.Maui.Controls.DateChangedEventArgs.NewDate.get -> System.DateTime
Microsoft.Maui.Controls.DateChangedEventArgs.OldDate.get -> System.DateTime
Microsoft.Maui.Controls.DatePicker
Microsoft.Maui.Controls.DatePicker.CharacterSpacing.get -> double
Microsoft.Maui.Controls.DatePicker.CharacterSpacing.set -> void
Microsoft.Maui.Controls.DatePicker.Date.get -> System.DateTime
Microsoft.Maui.Controls.DatePicker.Date.set -> void
Microsoft.Maui.Controls.DatePicker.DatePicker() -> void
Microsoft.Maui.Controls.DatePicker.DateSelected -> System.EventHandler<Microsoft.Maui.Controls.DateChangedEventArgs>
Microsoft.Maui.Controls.DatePicker.FontAttributes.get -> Microsoft.Maui.Controls.FontAttributes
Microsoft.Maui.Controls.DatePicker.FontAttributes.set -> void
Microsoft.Maui.Controls.DatePicker.FontAutoScalingEnabled.get -> bool
Microsoft.Maui.Controls.DatePicker.FontAutoScalingEnabled.set -> void
Microsoft.Maui.Controls.DatePicker.FontSize.get -> double
Microsoft.Maui.Controls.DatePicker.FontSize.set -> void
Microsoft.Maui.Controls.DatePicker.MaximumDate.get -> System.DateTime
Microsoft.Maui.Controls.DatePicker.MaximumDate.set -> void
Microsoft.Maui.Controls.DatePicker.MinimumDate.get -> System.DateTime
Microsoft.Maui.Controls.DatePicker.MinimumDate.set -> void
Microsoft.Maui.Controls.DefinitionCollection<T>.Add(T item) -> void
Microsoft.Maui.Controls.DefinitionCollection<T>.Clear() -> void
Microsoft.Maui.Controls.DefinitionCollection<T>.Contains(T item) -> bool
Microsoft.Maui.Controls.DefinitionCollection<T>.Count.get -> int
Microsoft.Maui.Controls.DefinitionCollection<T>.IndexOf(T item) -> int
Microsoft.Maui.Controls.DefinitionCollection<T>.Insert(int index, T item) -> void
Microsoft.Maui.Controls.DefinitionCollection<T>.IsReadOnly.get -> bool
Microsoft.Maui.Controls.DefinitionCollection<T>.ItemSizeChanged -> System.EventHandler
Microsoft.Maui.Controls.DefinitionCollection<T>.Remove(T item) -> bool
Microsoft.Maui.Controls.DefinitionCollection<T>.RemoveAt(int index) -> void
Microsoft.Maui.Controls.DefinitionCollection<T>.this[int index].get -> T
Microsoft.Maui.Controls.DefinitionCollection<T>.this[int index].set -> void
Microsoft.Maui.Controls.DependencyAttribute
Microsoft.Maui.Controls.DependencyFetchTarget
Microsoft.Maui.Controls.DependencyFetchTarget.GlobalInstance = 0 -> Microsoft.Maui.Controls.DependencyFetchTarget
Microsoft.Maui.Controls.DependencyFetchTarget.NewInstance = 1 -> Microsoft.Maui.Controls.DependencyFetchTarget
Microsoft.Maui.Controls.DependencyService
Microsoft.Maui.Controls.DesignMode
Microsoft.Maui.Controls.Device
Microsoft.Maui.Controls.Device.Styles
Microsoft.Maui.Controls.DeviceStateTrigger
Microsoft.Maui.Controls.DeviceStateTrigger.DeviceStateTrigger() -> void
Microsoft.Maui.Controls.DisplayDensityChangedEventArgs
Microsoft.Maui.Controls.DisplayDensityChangedEventArgs.DisplayDensity.get -> float
Microsoft.Maui.Controls.DisplayDensityChangedEventArgs.DisplayDensityChangedEventArgs(float displayDensity) -> void
Microsoft.Maui.Controls.DoubleCollection
Microsoft.Maui.Controls.DoubleCollection.DoubleCollection() -> void
Microsoft.Maui.Controls.DoubleCollectionConverter
Microsoft.Maui.Controls.DoubleCollectionConverter.DoubleCollectionConverter() -> void
Microsoft.Maui.Controls.DragEventArgs
Microsoft.Maui.Controls.DragEventArgs.AcceptedOperation.get -> Microsoft.Maui.Controls.DataPackageOperation
Microsoft.Maui.Controls.DragEventArgs.AcceptedOperation.set -> void
Microsoft.Maui.Controls.DragEventArgs.Data.get -> Microsoft.Maui.Controls.DataPackage!
Microsoft.Maui.Controls.DragEventArgs.DragEventArgs(Microsoft.Maui.Controls.DataPackage! dataPackage) -> void
Microsoft.Maui.Controls.DragEventArgs.PlatformArgs.get -> Microsoft.Maui.Controls.PlatformDragEventArgs?
Microsoft.Maui.Controls.DragGestureRecognizer
Microsoft.Maui.Controls.DragGestureRecognizer.CanDrag.get -> bool
Microsoft.Maui.Controls.DragGestureRecognizer.CanDrag.set -> void
Microsoft.Maui.Controls.DragGestureRecognizer.DragGestureRecognizer() -> void
Microsoft.Maui.Controls.DragGestureRecognizer.DragStarting -> System.EventHandler<Microsoft.Maui.Controls.DragStartingEventArgs!>?
Microsoft.Maui.Controls.DragGestureRecognizer.DragStartingCommand.get -> System.Windows.Input.ICommand!
Microsoft.Maui.Controls.DragGestureRecognizer.DragStartingCommand.set -> void
Microsoft.Maui.Controls.DragGestureRecognizer.DragStartingCommandParameter.get -> object!
Microsoft.Maui.Controls.DragGestureRecognizer.DragStartingCommandParameter.set -> void
Microsoft.Maui.Controls.DragGestureRecognizer.DropCompleted -> System.EventHandler<Microsoft.Maui.Controls.DropCompletedEventArgs!>?
Microsoft.Maui.Controls.DragGestureRecognizer.DropCompletedCommand.get -> System.Windows.Input.ICommand!
Microsoft.Maui.Controls.DragGestureRecognizer.DropCompletedCommand.set -> void
Microsoft.Maui.Controls.DragGestureRecognizer.DropCompletedCommandParameter.get -> object!
Microsoft.Maui.Controls.DragGestureRecognizer.DropCompletedCommandParameter.set -> void
Microsoft.Maui.Controls.DragStartingEventArgs
Microsoft.Maui.Controls.DragStartingEventArgs.Cancel.get -> bool
Microsoft.Maui.Controls.DragStartingEventArgs.Cancel.set -> void
Microsoft.Maui.Controls.DragStartingEventArgs.Data.get -> Microsoft.Maui.Controls.DataPackage!
Microsoft.Maui.Controls.DragStartingEventArgs.DragStartingEventArgs() -> void
Microsoft.Maui.Controls.DragStartingEventArgs.Handled.get -> bool
Microsoft.Maui.Controls.DragStartingEventArgs.Handled.set -> void
Microsoft.Maui.Controls.DragStartingEventArgs.PlatformArgs.get -> Microsoft.Maui.Controls.PlatformDragStartingEventArgs?
Microsoft.Maui.Controls.DropCompletedEventArgs
Microsoft.Maui.Controls.DropCompletedEventArgs.DropCompletedEventArgs() -> void
Microsoft.Maui.Controls.DropCompletedEventArgs.PlatformArgs.get -> Microsoft.Maui.Controls.PlatformDropCompletedEventArgs?
Microsoft.Maui.Controls.DropEventArgs
Microsoft.Maui.Controls.DropEventArgs.Data.get -> Microsoft.Maui.Controls.DataPackageView!
Microsoft.Maui.Controls.DropEventArgs.DropEventArgs(Microsoft.Maui.Controls.DataPackageView! view) -> void
Microsoft.Maui.Controls.DropEventArgs.Handled.get -> bool
Microsoft.Maui.Controls.DropEventArgs.Handled.set -> void
Microsoft.Maui.Controls.DropEventArgs.PlatformArgs.get -> Microsoft.Maui.Controls.PlatformDropEventArgs?
Microsoft.Maui.Controls.DropGestureRecognizer
Microsoft.Maui.Controls.DropGestureRecognizer.AllowDrop.get -> bool
Microsoft.Maui.Controls.DropGestureRecognizer.AllowDrop.set -> void
Microsoft.Maui.Controls.DropGestureRecognizer.DragLeave -> System.EventHandler<Microsoft.Maui.Controls.DragEventArgs>
Microsoft.Maui.Controls.DropGestureRecognizer.DragOver -> System.EventHandler<Microsoft.Maui.Controls.DragEventArgs>
Microsoft.Maui.Controls.DropGestureRecognizer.Drop -> System.EventHandler<Microsoft.Maui.Controls.DropEventArgs>
Microsoft.Maui.Controls.DropGestureRecognizer.DropGestureRecognizer() -> void
Microsoft.Maui.Controls.Editor
Microsoft.Maui.Controls.Editor.AutoSize.get -> Microsoft.Maui.Controls.EditorAutoSizeOption
Microsoft.Maui.Controls.Editor.AutoSize.set -> void
Microsoft.Maui.Controls.Editor.Completed -> System.EventHandler
Microsoft.Maui.Controls.Editor.Editor() -> void
Microsoft.Maui.Controls.Editor.HorizontalTextAlignment.get -> Microsoft.Maui.TextAlignment
Microsoft.Maui.Controls.Editor.HorizontalTextAlignment.set -> void
Microsoft.Maui.Controls.Editor.OnHorizontalTextAlignmentPropertyChanged(Microsoft.Maui.TextAlignment oldValue, Microsoft.Maui.TextAlignment newValue) -> void
Microsoft.Maui.Controls.Editor.SendCompleted() -> void
Microsoft.Maui.Controls.Editor.VerticalTextAlignment.get -> Microsoft.Maui.TextAlignment
Microsoft.Maui.Controls.Editor.VerticalTextAlignment.set -> void
Microsoft.Maui.Controls.EditorAutoSizeOption
Microsoft.Maui.Controls.EditorAutoSizeOption.Disabled = 0 -> Microsoft.Maui.Controls.EditorAutoSizeOption
Microsoft.Maui.Controls.EditorAutoSizeOption.TextChanges = 1 -> Microsoft.Maui.Controls.EditorAutoSizeOption
Microsoft.Maui.Controls.Effect
Microsoft.Maui.Controls.Effect.IsAttached.get -> bool
Microsoft.Maui.Controls.EffectiveFlowDirection
Microsoft.Maui.Controls.EffectiveFlowDirection.Explicit = 2 -> Microsoft.Maui.Controls.EffectiveFlowDirection
Microsoft.Maui.Controls.EffectiveFlowDirection.RightToLeft = 1 -> Microsoft.Maui.Controls.EffectiveFlowDirection
Microsoft.Maui.Controls.EffectiveVisualExtensions
Microsoft.Maui.Controls.Element
Microsoft.Maui.Controls.Element.ChildAdded -> System.EventHandler<Microsoft.Maui.Controls.ElementEventArgs>
Microsoft.Maui.Controls.Element.ChildRemoved -> System.EventHandler<Microsoft.Maui.Controls.ElementEventArgs>
Microsoft.Maui.Controls.Element.ClearLogicalChildren() -> void
Microsoft.Maui.Controls.Element.DescendantAdded -> System.EventHandler<Microsoft.Maui.Controls.ElementEventArgs>
Microsoft.Maui.Controls.Element.DescendantRemoved -> System.EventHandler<Microsoft.Maui.Controls.ElementEventArgs>
Microsoft.Maui.Controls.Element.Element() -> void
Microsoft.Maui.Controls.Element.HandlerChanged -> System.EventHandler
Microsoft.Maui.Controls.Element.HandlerChanging -> System.EventHandler<Microsoft.Maui.Controls.HandlerChangingEventArgs>
Microsoft.Maui.Controls.Element.Id.get -> System.Guid
Microsoft.Maui.Controls.Element.ParentChanged -> System.EventHandler
Microsoft.Maui.Controls.Element.ParentChanging -> System.EventHandler<Microsoft.Maui.Controls.ParentChangingEventArgs>
Microsoft.Maui.Controls.ElementEventArgs
Microsoft.Maui.Controls.ElementTemplate
Microsoft.Maui.Controls.Entry
Microsoft.Maui.Controls.Entry.ClearButtonVisibility.get -> Microsoft.Maui.ClearButtonVisibility
Microsoft.Maui.Controls.Entry.ClearButtonVisibility.set -> void
Microsoft.Maui.Controls.Entry.Completed -> System.EventHandler
Microsoft.Maui.Controls.Entry.Entry() -> void
Microsoft.Maui.Controls.Entry.HorizontalTextAlignment.get -> Microsoft.Maui.TextAlignment
Microsoft.Maui.Controls.Entry.HorizontalTextAlignment.set -> void
Microsoft.Maui.Controls.Entry.IsPassword.get -> bool
Microsoft.Maui.Controls.Entry.IsPassword.set -> void
Microsoft.Maui.Controls.Entry.ReturnType.get -> Microsoft.Maui.ReturnType
Microsoft.Maui.Controls.Entry.ReturnType.set -> void
Microsoft.Maui.Controls.Entry.SendCompleted() -> void
Microsoft.Maui.Controls.Entry.VerticalTextAlignment.get -> Microsoft.Maui.TextAlignment
Microsoft.Maui.Controls.Entry.VerticalTextAlignment.set -> void
Microsoft.Maui.Controls.EntryCell
Microsoft.Maui.Controls.EntryCell.Completed -> System.EventHandler
Microsoft.Maui.Controls.EntryCell.EntryCell() -> void
Microsoft.Maui.Controls.EntryCell.HorizontalTextAlignment.get -> Microsoft.Maui.TextAlignment
Microsoft.Maui.Controls.EntryCell.HorizontalTextAlignment.set -> void
Microsoft.Maui.Controls.EntryCell.SendCompleted() -> void
Microsoft.Maui.Controls.EntryCell.VerticalTextAlignment.get -> Microsoft.Maui.TextAlignment
Microsoft.Maui.Controls.EntryCell.VerticalTextAlignment.set -> void
Microsoft.Maui.Controls.EventTrigger
Microsoft.Maui.Controls.EventTrigger.EventTrigger() -> void
Microsoft.Maui.Controls.ExportEffectAttribute
Microsoft.Maui.Controls.ExportFontAttribute
Microsoft.Maui.Controls.FileImageSource
Microsoft.Maui.Controls.FileImageSource.FileImageSource() -> void
Microsoft.Maui.Controls.FileImageSourceConverter
Microsoft.Maui.Controls.FileImageSourceConverter.FileImageSourceConverter() -> void
Microsoft.Maui.Controls.FlexLayout
Microsoft.Maui.Controls.FlexLayout.AlignContent.get -> Microsoft.Maui.Layouts.FlexAlignContent
Microsoft.Maui.Controls.FlexLayout.AlignContent.set -> void
Microsoft.Maui.Controls.FlexLayout.AlignItems.get -> Microsoft.Maui.Layouts.FlexAlignItems
Microsoft.Maui.Controls.FlexLayout.AlignItems.set -> void
Microsoft.Maui.Controls.FlexLayout.Direction.get -> Microsoft.Maui.Layouts.FlexDirection
Microsoft.Maui.Controls.FlexLayout.Direction.set -> void
Microsoft.Maui.Controls.FlexLayout.FlexLayout() -> void
Microsoft.Maui.Controls.FlexLayout.JustifyContent.get -> Microsoft.Maui.Layouts.FlexJustify
Microsoft.Maui.Controls.FlexLayout.JustifyContent.set -> void
Microsoft.Maui.Controls.FlexLayout.Layout(double width, double height) -> void
Microsoft.Maui.Controls.FlexLayout.Position.get -> Microsoft.Maui.Layouts.FlexPosition
Microsoft.Maui.Controls.FlexLayout.Position.set -> void
Microsoft.Maui.Controls.FlexLayout.Wrap.get -> Microsoft.Maui.Layouts.FlexWrap
Microsoft.Maui.Controls.FlexLayout.Wrap.set -> void
Microsoft.Maui.Controls.FlowDirectionConverter
Microsoft.Maui.Controls.FlowDirectionConverter.FlowDirectionConverter() -> void
Microsoft.Maui.Controls.FlyoutBase
Microsoft.Maui.Controls.FlyoutBase.FlyoutBase() -> void
Microsoft.Maui.Controls.FlyoutDisplayOptions
Microsoft.Maui.Controls.FlyoutDisplayOptions.AsMultipleItems = 1 -> Microsoft.Maui.Controls.FlyoutDisplayOptions
Microsoft.Maui.Controls.FlyoutDisplayOptions.AsSingleItem = 0 -> Microsoft.Maui.Controls.FlyoutDisplayOptions
Microsoft.Maui.Controls.FlyoutHeaderBehavior
Microsoft.Maui.Controls.FlyoutHeaderBehavior.CollapseOnScroll = 3 -> Microsoft.Maui.Controls.FlyoutHeaderBehavior
Microsoft.Maui.Controls.FlyoutHeaderBehavior.Default = 0 -> Microsoft.Maui.Controls.FlyoutHeaderBehavior
Microsoft.Maui.Controls.FlyoutHeaderBehavior.Fixed = 1 -> Microsoft.Maui.Controls.FlyoutHeaderBehavior
Microsoft.Maui.Controls.FlyoutHeaderBehavior.Scroll = 2 -> Microsoft.Maui.Controls.FlyoutHeaderBehavior
Microsoft.Maui.Controls.FlyoutItem
Microsoft.Maui.Controls.FlyoutItem.FlyoutItem() -> void
Microsoft.Maui.Controls.FlyoutLayoutBehavior
Microsoft.Maui.Controls.FlyoutLayoutBehavior.Default = 0 -> Microsoft.Maui.Controls.FlyoutLayoutBehavior
Microsoft.Maui.Controls.FlyoutLayoutBehavior.Popover = 3 -> Microsoft.Maui.Controls.FlyoutLayoutBehavior
Microsoft.Maui.Controls.FlyoutLayoutBehavior.Split = 2 -> Microsoft.Maui.Controls.FlyoutLayoutBehavior
Microsoft.Maui.Controls.FlyoutLayoutBehavior.SplitOnLandscape = 1 -> Microsoft.Maui.Controls.FlyoutLayoutBehavior
Microsoft.Maui.Controls.FlyoutLayoutBehavior.SplitOnPortrait = 4 -> Microsoft.Maui.Controls.FlyoutLayoutBehavior
Microsoft.Maui.Controls.FlyoutPage
Microsoft.Maui.Controls.FlyoutPage.BackButtonPressed -> System.EventHandler<Microsoft.Maui.Controls.BackButtonPressedEventArgs>
Microsoft.Maui.Controls.FlyoutPage.FlyoutLayoutBehavior.get -> Microsoft.Maui.Controls.FlyoutLayoutBehavior
Microsoft.Maui.Controls.FlyoutPage.FlyoutLayoutBehavior.set -> void
Microsoft.Maui.Controls.FlyoutPage.FlyoutPage() -> void
Microsoft.Maui.Controls.FlyoutPage.IsGestureEnabled.get -> bool
Microsoft.Maui.Controls.FlyoutPage.IsGestureEnabled.set -> void
Microsoft.Maui.Controls.FlyoutPage.IsPresented.get -> bool
Microsoft.Maui.Controls.FlyoutPage.IsPresented.set -> void
Microsoft.Maui.Controls.FlyoutPage.IsPresentedChanged -> System.EventHandler
Microsoft.Maui.Controls.FlyoutPage.UpdateFlyoutLayoutBehavior() -> void
Microsoft.Maui.Controls.FocusEventArgs
Microsoft.Maui.Controls.FocusEventArgs.IsFocused.get -> bool
Microsoft.Maui.Controls.FontAttributes
Microsoft.Maui.Controls.FontAttributes.Bold = 1 -> Microsoft.Maui.Controls.FontAttributes
Microsoft.Maui.Controls.FontAttributes.Italic = 2 -> Microsoft.Maui.Controls.FontAttributes
Microsoft.Maui.Controls.FontAttributes.None = 0 -> Microsoft.Maui.Controls.FontAttributes
Microsoft.Maui.Controls.FontAttributesConverter
Microsoft.Maui.Controls.FontAttributesConverter.FontAttributesConverter() -> void
Microsoft.Maui.Controls.FontExtensions
Microsoft.Maui.Controls.FontImageSource
Microsoft.Maui.Controls.FontImageSource.FontAutoScalingEnabled.get -> bool
Microsoft.Maui.Controls.FontImageSource.FontAutoScalingEnabled.set -> void
Microsoft.Maui.Controls.FontImageSource.FontImageSource() -> void
Microsoft.Maui.Controls.FontImageSource.Size.get -> double
Microsoft.Maui.Controls.FontImageSource.Size.set -> void
Microsoft.Maui.Controls.FontSizeConverter
Microsoft.Maui.Controls.FontSizeConverter.FontSizeConverter() -> void
Microsoft.Maui.Controls.FormattedString
Microsoft.Maui.Controls.FormattedString.FormattedString() -> void
Microsoft.Maui.Controls.Frame
Microsoft.Maui.Controls.Frame.CornerRadius.get -> float
Microsoft.Maui.Controls.Frame.CornerRadius.set -> void
Microsoft.Maui.Controls.Frame.Frame() -> void
Microsoft.Maui.Controls.Frame.HasShadow.get -> bool
Microsoft.Maui.Controls.Frame.HasShadow.set -> void
Microsoft.Maui.Controls.GestureElement
Microsoft.Maui.Controls.GestureElement.GestureElement() -> void
Microsoft.Maui.Controls.GestureRecognizer
Microsoft.Maui.Controls.GestureRecognizer.GestureRecognizer() -> void
Microsoft.Maui.Controls.GestureState
Microsoft.Maui.Controls.GestureState.Began = 0 -> Microsoft.Maui.Controls.GestureState
Microsoft.Maui.Controls.GestureState.Cancelled = 4 -> Microsoft.Maui.Controls.GestureState
Microsoft.Maui.Controls.GestureState.Ended = 2 -> Microsoft.Maui.Controls.GestureState
Microsoft.Maui.Controls.GestureState.Failed = 3 -> Microsoft.Maui.Controls.GestureState
Microsoft.Maui.Controls.GestureState.Possible = 5 -> Microsoft.Maui.Controls.GestureState
Microsoft.Maui.Controls.GestureState.Update = 1 -> Microsoft.Maui.Controls.GestureState
Microsoft.Maui.Controls.GradientBrush
Microsoft.Maui.Controls.GradientBrush.GradientBrush() -> void
Microsoft.Maui.Controls.GradientBrush.InvalidateGradientBrushRequested -> System.EventHandler
Microsoft.Maui.Controls.GradientStop
Microsoft.Maui.Controls.GradientStop.GradientStop() -> void
Microsoft.Maui.Controls.GradientStop.Offset.get -> float
Microsoft.Maui.Controls.GradientStop.Offset.set -> void
Microsoft.Maui.Controls.GradientStopCollection
Microsoft.Maui.Controls.GradientStopCollection.GradientStopCollection() -> void
Microsoft.Maui.Controls.GraphicsView
Microsoft.Maui.Controls.GraphicsView.CancelInteraction -> System.EventHandler
Microsoft.Maui.Controls.GraphicsView.DragInteraction -> System.EventHandler<Microsoft.Maui.Controls.TouchEventArgs>
Microsoft.Maui.Controls.GraphicsView.EndHoverInteraction -> System.EventHandler
Microsoft.Maui.Controls.GraphicsView.EndInteraction -> System.EventHandler<Microsoft.Maui.Controls.TouchEventArgs>
Microsoft.Maui.Controls.GraphicsView.GraphicsView() -> void
Microsoft.Maui.Controls.GraphicsView.Invalidate() -> void
Microsoft.Maui.Controls.GraphicsView.MoveHoverInteraction -> System.EventHandler<Microsoft.Maui.Controls.TouchEventArgs>
Microsoft.Maui.Controls.GraphicsView.StartHoverInteraction -> System.EventHandler<Microsoft.Maui.Controls.TouchEventArgs>
Microsoft.Maui.Controls.GraphicsView.StartInteraction -> System.EventHandler<Microsoft.Maui.Controls.TouchEventArgs>
Microsoft.Maui.Controls.Grid
Microsoft.Maui.Controls.Grid.ColumnSpacing.get -> double
Microsoft.Maui.Controls.Grid.ColumnSpacing.set -> void
Microsoft.Maui.Controls.Grid.Grid() -> void
Microsoft.Maui.Controls.Grid.RowSpacing.get -> double
Microsoft.Maui.Controls.Grid.RowSpacing.set -> void
Microsoft.Maui.Controls.GridExtensions
Microsoft.Maui.Controls.GridItemsLayout
Microsoft.Maui.Controls.GridItemsLayout.GridItemsLayout(int span, Microsoft.Maui.Controls.ItemsLayoutOrientation orientation) -> void
Microsoft.Maui.Controls.GridItemsLayout.GridItemsLayout(Microsoft.Maui.Controls.ItemsLayoutOrientation orientation) -> void
Microsoft.Maui.Controls.GridItemsLayout.HorizontalItemSpacing.get -> double
Microsoft.Maui.Controls.GridItemsLayout.HorizontalItemSpacing.set -> void
Microsoft.Maui.Controls.GridItemsLayout.Span.get -> int
Microsoft.Maui.Controls.GridItemsLayout.Span.set -> void
Microsoft.Maui.Controls.GridItemsLayout.VerticalItemSpacing.get -> double
Microsoft.Maui.Controls.GridItemsLayout.VerticalItemSpacing.set -> void
Microsoft.Maui.Controls.GridLengthTypeConverter
Microsoft.Maui.Controls.GridLengthTypeConverter.GridLengthTypeConverter() -> void
Microsoft.Maui.Controls.GroupableItemsView
Microsoft.Maui.Controls.GroupableItemsView.GroupableItemsView() -> void
Microsoft.Maui.Controls.GroupableItemsView.IsGrouped.get -> bool
Microsoft.Maui.Controls.GroupableItemsView.IsGrouped.set -> void
Microsoft.Maui.Controls.HandlerAttribute
Microsoft.Maui.Controls.HandlerAttribute.Priority.get -> short
Microsoft.Maui.Controls.HandlerAttribute.Priority.set -> void
Microsoft.Maui.Controls.HandlerChangingEventArgs
Microsoft.Maui.Controls.Handlers.BoxViewHandler
Microsoft.Maui.Controls.Handlers.BoxViewHandler.BoxViewHandler() -> void
Microsoft.Maui.Controls.Handlers.Compatibility.BaseCellView
Microsoft.Maui.Controls.Handlers.Compatibility.BaseCellView.SetImageVisible(bool visible) -> void
Microsoft.Maui.Controls.Handlers.Compatibility.BaseCellView.SetIsEnabled(bool isEnable) -> void
Microsoft.Maui.Controls.Handlers.Compatibility.BaseCellView.SetRenderHeight(double height) -> void
Microsoft.Maui.Controls.Handlers.Compatibility.CellAdapter
Microsoft.Maui.Controls.Handlers.Compatibility.CellFactory
Microsoft.Maui.Controls.Handlers.Compatibility.CellRenderer
Microsoft.Maui.Controls.Handlers.Compatibility.CellRenderer.CellRenderer() -> void
Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellEditText
Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellRenderer
Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellRenderer.EntryCellRenderer() -> void
Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellView
Microsoft.Maui.Controls.Handlers.Compatibility.EntryCellView.SetRenderHeight(double height) -> void
Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer
Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer.Control.get -> AndroidX.CardView.Widget.CardView!
Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer.Element.get -> Microsoft.Maui.Controls.Frame?
Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer.Element.set -> void
Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer.ElementChanged -> System.EventHandler<Microsoft.Maui.Controls.Platform.VisualElementChangedEventArgs!>?
Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer.ElementPropertyChanged -> System.EventHandler<System.ComponentModel.PropertyChangedEventArgs!>?
Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer.FrameRenderer(Android.Content.Context! context, Microsoft.Maui.IPropertyMapper! mapper, Microsoft.Maui.CommandMapper! commandMapper) -> void
Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer.FrameRenderer(Android.Content.Context! context, Microsoft.Maui.IPropertyMapper! mapper) -> void
Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer.FrameRenderer(Android.Content.Context! context) -> void
Microsoft.Maui.Controls.Handlers.Compatibility.ImageCellRenderer
Microsoft.Maui.Controls.Handlers.Compatibility.ImageCellRenderer.ImageCellRenderer() -> void
Microsoft.Maui.Controls.Handlers.Compatibility.ListViewRenderer
Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer
Microsoft.Maui.Controls.Handlers.Compatibility.ShellRenderer.ShellRenderer() -> void
Microsoft.Maui.Controls.Handlers.Compatibility.SwitchCellRenderer
Microsoft.Maui.Controls.Handlers.Compatibility.SwitchCellRenderer.SwitchCellRenderer() -> void
Microsoft.Maui.Controls.Handlers.Compatibility.SwitchCellView
Microsoft.Maui.Controls.Handlers.Compatibility.TableViewModelRenderer
Microsoft.Maui.Controls.Handlers.Compatibility.TableViewRenderer
Microsoft.Maui.Controls.Handlers.Compatibility.TextCellRenderer
Microsoft.Maui.Controls.Handlers.Compatibility.TextCellRenderer.TextCellRenderer() -> void
Microsoft.Maui.Controls.Handlers.Compatibility.ViewCellRenderer
Microsoft.Maui.Controls.Handlers.Compatibility.ViewCellRenderer.ViewCellRenderer() -> void
Microsoft.Maui.Controls.Handlers.Compatibility.ViewRenderer
Microsoft.Maui.Controls.Handlers.Compatibility.ViewRenderer.ViewRenderer(Android.Content.Context! context) -> void
Microsoft.Maui.Controls.Handlers.Compatibility.ViewRenderer<TElement, TPlatformView>
Microsoft.Maui.Controls.Handlers.Compatibility.ViewRenderer<TElement, TPlatformView>.Control.get -> TPlatformView?
Microsoft.Maui.Controls.Handlers.Compatibility.ViewRenderer<TElement, TPlatformView>.SetNativeControl(TPlatformView! control) -> void
Microsoft.Maui.Controls.Handlers.Compatibility.ViewRenderer<TElement, TPlatformView>.ViewRenderer(Android.Content.Context! context, Microsoft.Maui.IPropertyMapper! mapper, Microsoft.Maui.CommandMapper? commandMapper = null) -> void
Microsoft.Maui.Controls.Handlers.Compatibility.ViewRenderer<TElement, TPlatformView>.ViewRenderer(Android.Content.Context! context) -> void
Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>
Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.AutoPackage.get -> bool
Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.AutoPackage.set -> void
Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.Element.get -> TElement?
Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.ElementChanged -> System.EventHandler<Microsoft.Maui.Controls.Platform.ElementChangedEventArgs<TElement!>!>?
Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.ElementPropertyChanged -> System.EventHandler<System.ComponentModel.PropertyChangedEventArgs!>?
Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.MauiContext.get -> Microsoft.Maui.IMauiContext!
Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.SetElement(Microsoft.Maui.IView! view) -> void
Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.UpdateLayout() -> void
Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.VisualElementRenderer(Android.Content.Context! context, Microsoft.Maui.IPropertyMapper! mapper, Microsoft.Maui.CommandMapper? commandMapper = null) -> void
Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.VisualElementRenderer(Android.Content.Context! context) -> void
Microsoft.Maui.Controls.Handlers.Items.CarouselViewHandler
Microsoft.Maui.Controls.Handlers.Items.CarouselViewHandler.CarouselViewHandler() -> void
Microsoft.Maui.Controls.Handlers.Items.CollectionViewHandler
Microsoft.Maui.Controls.Handlers.Items.CollectionViewHandler.CollectionViewHandler() -> void
Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter
Microsoft.Maui.Controls.Handlers.Items.GroupableItemsViewHandler<TItemsView>.GroupableItemsViewHandler() -> void
Microsoft.Maui.Controls.Handlers.Items.IGroupableItemsViewSource
Microsoft.Maui.Controls.Handlers.Items.IGroupableItemsViewSource.GetGroupAndIndex(int position) -> (int group, int index)
Microsoft.Maui.Controls.Handlers.Items.IGroupableItemsViewSource.IsGroupFooter(int position) -> bool
Microsoft.Maui.Controls.Handlers.Items.IGroupableItemsViewSource.IsGroupHeader(int position) -> bool
Microsoft.Maui.Controls.Handlers.Items.IItemsViewSource
Microsoft.Maui.Controls.Handlers.Items.IItemsViewSource.Count.get -> int
Microsoft.Maui.Controls.Handlers.Items.IItemsViewSource.HasFooter.get -> bool
Microsoft.Maui.Controls.Handlers.Items.IItemsViewSource.HasFooter.set -> void
Microsoft.Maui.Controls.Handlers.Items.IItemsViewSource.HasHeader.get -> bool
Microsoft.Maui.Controls.Handlers.Items.IItemsViewSource.HasHeader.set -> void
Microsoft.Maui.Controls.Handlers.Items.IItemsViewSource.IsFooter(int position) -> bool
Microsoft.Maui.Controls.Handlers.Items.IItemsViewSource.IsHeader(int position) -> bool
Microsoft.Maui.Controls.Handlers.Items.IItemTouchHelperAdapter
Microsoft.Maui.Controls.Handlers.Items.IItemTouchHelperAdapter.OnItemMove(int fromPosition, int toPosition) -> bool
Microsoft.Maui.Controls.Handlers.Items.IMauiCarouselRecyclerView
Microsoft.Maui.Controls.Handlers.Items.IMauiCarouselRecyclerView.IsSwipeEnabled.get -> bool
Microsoft.Maui.Controls.Handlers.Items.IMauiCarouselRecyclerView.IsSwipeEnabled.set -> void
Microsoft.Maui.Controls.Handlers.Items.IMauiCarouselRecyclerView.UpdateFromCurrentItem() -> void
Microsoft.Maui.Controls.Handlers.Items.IMauiCarouselRecyclerView.UpdateFromPosition() -> void
Microsoft.Maui.Controls.Handlers.Items.IMauiRecyclerView<TItemsView>.UpdateAdapter() -> void
Microsoft.Maui.Controls.Handlers.Items.IMauiRecyclerView<TItemsView>.UpdateCanReorderItems() -> void
Microsoft.Maui.Controls.Handlers.Items.IMauiRecyclerView<TItemsView>.UpdateEmptyView() -> void
Microsoft.Maui.Controls.Handlers.Items.IMauiRecyclerView<TItemsView>.UpdateFlowDirection() -> void
Microsoft.Maui.Controls.Handlers.Items.IMauiRecyclerView<TItemsView>.UpdateHorizontalScrollBarVisibility() -> void
Microsoft.Maui.Controls.Handlers.Items.IMauiRecyclerView<TItemsView>.UpdateItemsSource() -> void
Microsoft.Maui.Controls.Handlers.Items.IMauiRecyclerView<TItemsView>.UpdateItemTemplate() -> void
Microsoft.Maui.Controls.Handlers.Items.IMauiRecyclerView<TItemsView>.UpdateLayoutManager() -> void
Microsoft.Maui.Controls.Handlers.Items.IMauiRecyclerView<TItemsView>.UpdateScrollingMode() -> void
Microsoft.Maui.Controls.Handlers.Items.IMauiRecyclerView<TItemsView>.UpdateVerticalScrollBarVisibility() -> void
Microsoft.Maui.Controls.Handlers.Items.IObservableItemsViewSource
Microsoft.Maui.Controls.Handlers.Items.IObservableItemsViewSource.ObserveChanges.get -> bool
Microsoft.Maui.Controls.Handlers.Items.IObservableItemsViewSource.ObserveChanges.set -> void
Microsoft.Maui.Controls.Handlers.Items.ItemContentView
Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<TItemsView, TItemsViewSource>.ItemsSource -> TItemsViewSource
Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>.ItemsViewHandler() -> void
Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView
Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView.IsSwipeEnabled.get -> bool
Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView.IsSwipeEnabled.set -> void
Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.~MauiRecyclerView() -> void
Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.UpdateItemTemplate() -> void
Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.UpdateScrollingMode() -> void
Microsoft.Maui.Controls.Handlers.Items.ReorderableItemsViewAdapter<TItemsView, TItemsViewSource>.OnItemMove(int fromPosition, int toPosition) -> bool
Microsoft.Maui.Controls.Handlers.Items.ReorderableItemsViewHandler<TItemsView>.ReorderableItemsViewHandler() -> void
Microsoft.Maui.Controls.Handlers.Items.SelectableItemsViewHandler<TItemsView>.SelectableItemsViewHandler() -> void
Microsoft.Maui.Controls.Handlers.Items.SelectableViewHolder
Microsoft.Maui.Controls.Handlers.Items.SelectableViewHolder.Clicked -> System.EventHandler<int>
Microsoft.Maui.Controls.Handlers.Items.SelectableViewHolder.IsSelected.get -> bool
Microsoft.Maui.Controls.Handlers.Items.SelectableViewHolder.IsSelected.set -> void
Microsoft.Maui.Controls.Handlers.Items.SimpleItemTouchHelperCallback
Microsoft.Maui.Controls.Handlers.Items.SimpleItemTouchHelperCallback.SimpleItemTouchHelperCallback() -> void
Microsoft.Maui.Controls.Handlers.Items.SnapManager
Microsoft.Maui.Controls.Handlers.Items.SnapManager.Dispose() -> void
Microsoft.Maui.Controls.Handlers.Items.SpacingItemDecoration
Microsoft.Maui.Controls.Handlers.Items.SpacingItemDecoration.HorizontalOffset.get -> int
Microsoft.Maui.Controls.Handlers.Items.SpacingItemDecoration.VerticalOffset.get -> int
Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewHandler<TItemsView>.StructuredItemsViewHandler() -> void
Microsoft.Maui.Controls.Handlers.Items.TemplatedItemViewHolder
Microsoft.Maui.Controls.Handlers.LineHandler
Microsoft.Maui.Controls.Handlers.LineHandler.LineHandler() -> void
Microsoft.Maui.Controls.Handlers.PathHandler
Microsoft.Maui.Controls.Handlers.PathHandler.PathHandler() -> void
Microsoft.Maui.Controls.Handlers.PolygonHandler
Microsoft.Maui.Controls.Handlers.PolygonHandler.PolygonHandler() -> void
Microsoft.Maui.Controls.Handlers.PolylineHandler
Microsoft.Maui.Controls.Handlers.PolylineHandler.PolylineHandler() -> void
Microsoft.Maui.Controls.Handlers.RectangleHandler
Microsoft.Maui.Controls.Handlers.RectangleHandler.RectangleHandler() -> void
Microsoft.Maui.Controls.Handlers.RoundRectangleHandler
Microsoft.Maui.Controls.Handlers.RoundRectangleHandler.RoundRectangleHandler() -> void
Microsoft.Maui.Controls.HorizontalStackLayout
Microsoft.Maui.Controls.HorizontalStackLayout.HorizontalStackLayout() -> void
Microsoft.Maui.Controls.Hosting.AppHostBuilderExtensions
Microsoft.Maui.Controls.Hosting.IEffectsBuilder
Microsoft.Maui.Controls.HtmlWebViewSource
Microsoft.Maui.Controls.HtmlWebViewSource.HtmlWebViewSource() -> void
Microsoft.Maui.Controls.IAnimatable
Microsoft.Maui.Controls.IAnimatable.BatchBegin() -> void
Microsoft.Maui.Controls.IAnimatable.BatchCommit() -> void
Microsoft.Maui.Controls.IAppearanceObserver
Microsoft.Maui.Controls.IAppIndexingProvider
Microsoft.Maui.Controls.IApplicationController
Microsoft.Maui.Controls.IAppLinkEntry
Microsoft.Maui.Controls.IAppLinkEntry.IsLinkActive.get -> bool
Microsoft.Maui.Controls.IAppLinkEntry.IsLinkActive.set -> void
Microsoft.Maui.Controls.IAppLinks
Microsoft.Maui.Controls.IBindableLayout
Microsoft.Maui.Controls.IBorderElement
Microsoft.Maui.Controls.IBorderElement.BorderWidth.get -> double
Microsoft.Maui.Controls.IBorderElement.BorderWidthDefaultValue.get -> double
Microsoft.Maui.Controls.IBorderElement.CornerRadius.get -> int
Microsoft.Maui.Controls.IBorderElement.CornerRadiusDefaultValue.get -> int
Microsoft.Maui.Controls.IBorderElement.IsBackgroundColorSet() -> bool
Microsoft.Maui.Controls.IBorderElement.IsBackgroundSet() -> bool
Microsoft.Maui.Controls.IBorderElement.IsBorderColorSet() -> bool
Microsoft.Maui.Controls.IBorderElement.IsBorderWidthSet() -> bool
Microsoft.Maui.Controls.IBorderElement.IsCornerRadiusSet() -> bool
Microsoft.Maui.Controls.IButtonController
Microsoft.Maui.Controls.IButtonController.SendClicked() -> void
Microsoft.Maui.Controls.IButtonController.SendPressed() -> void
Microsoft.Maui.Controls.IButtonController.SendReleased() -> void
Microsoft.Maui.Controls.ICellController
Microsoft.Maui.Controls.ICellController.ForceUpdateSizeRequested -> System.EventHandler
Microsoft.Maui.Controls.ICellController.SendAppearing() -> void
Microsoft.Maui.Controls.ICellController.SendDisappearing() -> void
Microsoft.Maui.Controls.IConfigPlatform
Microsoft.Maui.Controls.IDecorableTextElement
Microsoft.Maui.Controls.IDecorableTextElement.TextDecorations.get -> Microsoft.Maui.TextDecorations
Microsoft.Maui.Controls.IDecorableTextElement.TextDecorations.set -> void
Microsoft.Maui.Controls.IDefinition
Microsoft.Maui.Controls.IDefinition.SizeChanged -> System.EventHandler
Microsoft.Maui.Controls.IEditorController
Microsoft.Maui.Controls.IEditorController.SendCompleted() -> void
Microsoft.Maui.Controls.IEffectControlProvider
Microsoft.Maui.Controls.IElementController
Microsoft.Maui.Controls.IElementExtensions
Microsoft.Maui.Controls.IEntryCellController
Microsoft.Maui.Controls.IEntryCellController.SendCompleted() -> void
Microsoft.Maui.Controls.IEntryController
Microsoft.Maui.Controls.IEntryController.SendCompleted() -> void
Microsoft.Maui.Controls.IExtendedTypeConverter
Microsoft.Maui.Controls.IFlyoutBehaviorObserver
Microsoft.Maui.Controls.IFlyoutBehaviorObserver.OnFlyoutBehaviorChanged(Microsoft.Maui.FlyoutBehavior behavior) -> void
Microsoft.Maui.Controls.IFlyoutPageController
Microsoft.Maui.Controls.IFlyoutPageController.BackButtonPressed -> System.EventHandler<Microsoft.Maui.Controls.BackButtonPressedEventArgs>
Microsoft.Maui.Controls.IFlyoutPageController.CanChangeIsPresented.get -> bool
Microsoft.Maui.Controls.IFlyoutPageController.CanChangeIsPresented.set -> void
Microsoft.Maui.Controls.IFlyoutPageController.DetailBounds.get -> Microsoft.Maui.Graphics.Rect
Microsoft.Maui.Controls.IFlyoutPageController.DetailBounds.set -> void
Microsoft.Maui.Controls.IFlyoutPageController.FlyoutBounds.get -> Microsoft.Maui.Graphics.Rect
Microsoft.Maui.Controls.IFlyoutPageController.FlyoutBounds.set -> void
Microsoft.Maui.Controls.IFlyoutPageController.ShouldShowSplitMode.get -> bool
Microsoft.Maui.Controls.IFlyoutPageController.UpdateFlyoutLayoutBehavior() -> void
Microsoft.Maui.Controls.IGestureRecognizer
Microsoft.Maui.Controls.IGestureRecognizers
Microsoft.Maui.Controls.IGridController
Microsoft.Maui.Controls.IGridController.InvalidateMeasureInernalNonVirtual(Microsoft.Maui.Controls.Internals.InvalidationTrigger trigger) -> void
Microsoft.Maui.Controls.IImageController
Microsoft.Maui.Controls.IImageController.GetLoadAsAnimation() -> bool
Microsoft.Maui.Controls.IImageController.SetIsLoading(bool isLoading) -> void
Microsoft.Maui.Controls.IImageElement
Microsoft.Maui.Controls.IImageElement.Aspect.get -> Microsoft.Maui.Aspect
Microsoft.Maui.Controls.IImageElement.IsAnimationPlaying.get -> bool
Microsoft.Maui.Controls.IImageElement.IsLoading.get -> bool
Microsoft.Maui.Controls.IImageElement.IsOpaque.get -> bool
Microsoft.Maui.Controls.IImageElement.RaiseImageSourcePropertyChanged() -> void
Microsoft.Maui.Controls.IItemsLayout
Microsoft.Maui.Controls.IItemViewController
Microsoft.Maui.Controls.IItemViewController.Count.get -> int
Microsoft.Maui.Controls.ILayout
Microsoft.Maui.Controls.ILayout.LayoutChanged -> System.EventHandler
Microsoft.Maui.Controls.ILayoutController
Microsoft.Maui.Controls.ILayoutManagerFactory
Microsoft.Maui.Controls.IListProxy
Microsoft.Maui.Controls.IListProxy.CollectionChanged -> System.Collections.Specialized.NotifyCollectionChangedEventHandler
Microsoft.Maui.Controls.IListViewController
Microsoft.Maui.Controls.IListViewController.CachingStrategy.get -> Microsoft.Maui.Controls.ListViewCachingStrategy
Microsoft.Maui.Controls.IListViewController.RefreshAllowed.get -> bool
Microsoft.Maui.Controls.IListViewController.ScrollToRequested -> System.EventHandler<Microsoft.Maui.Controls.ScrollToRequestedEventArgs>
Microsoft.Maui.Controls.IListViewController.SendRefreshing() -> void
Microsoft.Maui.Controls.Image
Microsoft.Maui.Controls.Image.Aspect.get -> Microsoft.Maui.Aspect
Microsoft.Maui.Controls.Image.Aspect.set -> void
Microsoft.Maui.Controls.Image.Image() -> void
Microsoft.Maui.Controls.Image.IsAnimationPlaying.get -> bool
Microsoft.Maui.Controls.Image.IsAnimationPlaying.set -> void
Microsoft.Maui.Controls.Image.IsLoading.get -> bool
Microsoft.Maui.Controls.Image.IsOpaque.get -> bool
Microsoft.Maui.Controls.Image.IsOpaque.set -> void
Microsoft.Maui.Controls.ImageButton
Microsoft.Maui.Controls.ImageButton.Aspect.get -> Microsoft.Maui.Aspect
Microsoft.Maui.Controls.ImageButton.Aspect.set -> void
Microsoft.Maui.Controls.ImageButton.BorderWidth.get -> double
Microsoft.Maui.Controls.ImageButton.BorderWidth.set -> void
Microsoft.Maui.Controls.ImageButton.Clicked -> System.EventHandler
Microsoft.Maui.Controls.ImageButton.CornerRadius.get -> int
Microsoft.Maui.Controls.ImageButton.CornerRadius.set -> void
Microsoft.Maui.Controls.ImageButton.ImageButton() -> void
Microsoft.Maui.Controls.ImageButton.IsLoading.get -> bool
Microsoft.Maui.Controls.ImageButton.IsOpaque.get -> bool
Microsoft.Maui.Controls.ImageButton.IsOpaque.set -> void
Microsoft.Maui.Controls.ImageButton.IsPressed.get -> bool
Microsoft.Maui.Controls.ImageButton.Padding.get -> Microsoft.Maui.Thickness
Microsoft.Maui.Controls.ImageButton.Padding.set -> void
Microsoft.Maui.Controls.ImageButton.Pressed -> System.EventHandler
Microsoft.Maui.Controls.ImageButton.PropagateUpClicked() -> void
Microsoft.Maui.Controls.ImageButton.PropagateUpPressed() -> void
Microsoft.Maui.Controls.ImageButton.PropagateUpReleased() -> void
Microsoft.Maui.Controls.ImageButton.RaiseImageSourcePropertyChanged() -> void
Microsoft.Maui.Controls.ImageButton.Released -> System.EventHandler
Microsoft.Maui.Controls.ImageButton.SendClicked() -> void
Microsoft.Maui.Controls.ImageButton.SendPressed() -> void
Microsoft.Maui.Controls.ImageButton.SendReleased() -> void
Microsoft.Maui.Controls.ImageButton.SetIsLoading(bool isLoading) -> void
Microsoft.Maui.Controls.ImageButton.SetIsPressed(bool isPressed) -> void
Microsoft.Maui.Controls.ImageCell
Microsoft.Maui.Controls.ImageCell.ImageCell() -> void
Microsoft.Maui.Controls.ImageSource
Microsoft.Maui.Controls.ImageSource.ImageSource() -> void
Microsoft.Maui.Controls.ImageSource.OnSourceChanged() -> void
Microsoft.Maui.Controls.ImageSourceConverter
Microsoft.Maui.Controls.ImageSourceConverter.ImageSourceConverter() -> void
Microsoft.Maui.Controls.IMenuItemController
Microsoft.Maui.Controls.IMenuItemController.Activate() -> void
Microsoft.Maui.Controls.IMenuItemController.IsEnabled.get -> bool
Microsoft.Maui.Controls.IMenuItemController.IsEnabled.set -> void
Microsoft.Maui.Controls.IMessagingCenter
Microsoft.Maui.Controls.IMultiPageController<T>
Microsoft.Maui.Controls.IMultiPageController<T>.GetPageByIndex(int index) -> T
Microsoft.Maui.Controls.IMultiValueConverter
Microsoft.Maui.Controls.INavigation
Microsoft.Maui.Controls.INavigationPageController
Microsoft.Maui.Controls.INavigationPageController.InsertPageBeforeRequested -> System.EventHandler<Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs>
Microsoft.Maui.Controls.INavigationPageController.PopRequested -> System.EventHandler<Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs>
Microsoft.Maui.Controls.INavigationPageController.PopToRootRequested -> System.EventHandler<Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs>
Microsoft.Maui.Controls.INavigationPageController.PushRequested -> System.EventHandler<Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs>
Microsoft.Maui.Controls.INavigationPageController.RemovePageRequested -> System.EventHandler<Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs>
Microsoft.Maui.Controls.INavigationPageController.StackDepth.get -> int
Microsoft.Maui.Controls.IndicatorShape
Microsoft.Maui.Controls.IndicatorShape.Circle = 0 -> Microsoft.Maui.Controls.IndicatorShape
Microsoft.Maui.Controls.IndicatorShape.Square = 1 -> Microsoft.Maui.Controls.IndicatorShape
Microsoft.Maui.Controls.IndicatorView
Microsoft.Maui.Controls.IndicatorView.Count.get -> int
Microsoft.Maui.Controls.IndicatorView.Count.set -> void
Microsoft.Maui.Controls.IndicatorView.HideSingle.get -> bool
Microsoft.Maui.Controls.IndicatorView.HideSingle.set -> void
Microsoft.Maui.Controls.IndicatorView.IndicatorSize.get -> double
Microsoft.Maui.Controls.IndicatorView.IndicatorSize.set -> void
Microsoft.Maui.Controls.IndicatorView.IndicatorsShape.get -> Microsoft.Maui.Controls.IndicatorShape
Microsoft.Maui.Controls.IndicatorView.IndicatorsShape.set -> void
Microsoft.Maui.Controls.IndicatorView.IndicatorView() -> void
Microsoft.Maui.Controls.IndicatorView.MaximumVisible.get -> int
Microsoft.Maui.Controls.IndicatorView.MaximumVisible.set -> void
Microsoft.Maui.Controls.IndicatorView.Position.get -> int
Microsoft.Maui.Controls.IndicatorView.Position.set -> void
Microsoft.Maui.Controls.InitializationFlags
Microsoft.Maui.Controls.InitializationFlags.DisableCss = 1 -> Microsoft.Maui.Controls.InitializationFlags
Microsoft.Maui.Controls.InitializationFlags.SkipRenderers = 2 -> Microsoft.Maui.Controls.InitializationFlags
Microsoft.Maui.Controls.InputView
Microsoft.Maui.Controls.InputView.CharacterSpacing.get -> double
Microsoft.Maui.Controls.InputView.CharacterSpacing.set -> void
Microsoft.Maui.Controls.InputView.CursorPosition.get -> int
Microsoft.Maui.Controls.InputView.CursorPosition.set -> void
Microsoft.Maui.Controls.InputView.FontAttributes.get -> Microsoft.Maui.Controls.FontAttributes
Microsoft.Maui.Controls.InputView.FontAttributes.set -> void
Microsoft.Maui.Controls.InputView.FontAutoScalingEnabled.get -> bool
Microsoft.Maui.Controls.InputView.FontAutoScalingEnabled.set -> void
Microsoft.Maui.Controls.InputView.FontSize.get -> double
Microsoft.Maui.Controls.InputView.FontSize.set -> void
Microsoft.Maui.Controls.InputView.IsReadOnly.get -> bool
Microsoft.Maui.Controls.InputView.IsReadOnly.set -> void
Microsoft.Maui.Controls.InputView.IsSpellCheckEnabled.get -> bool
Microsoft.Maui.Controls.InputView.IsSpellCheckEnabled.set -> void
Microsoft.Maui.Controls.InputView.IsTextPredictionEnabled.get -> bool
Microsoft.Maui.Controls.InputView.IsTextPredictionEnabled.set -> void
Microsoft.Maui.Controls.InputView.MaxLength.get -> int
Microsoft.Maui.Controls.InputView.MaxLength.set -> void
Microsoft.Maui.Controls.InputView.OnTextTransformChanged(Microsoft.Maui.TextTransform oldValue, Microsoft.Maui.TextTransform newValue) -> void
Microsoft.Maui.Controls.InputView.SelectionLength.get -> int
Microsoft.Maui.Controls.InputView.SelectionLength.set -> void
Microsoft.Maui.Controls.InputView.TextChanged -> System.EventHandler<Microsoft.Maui.Controls.TextChangedEventArgs>
Microsoft.Maui.Controls.InputView.TextTransform.get -> Microsoft.Maui.TextTransform
Microsoft.Maui.Controls.InputView.TextTransform.set -> void
Microsoft.Maui.Controls.Internals.ActionSheetArguments
Microsoft.Maui.Controls.Internals.ActionSheetArguments.FlowDirection.get -> Microsoft.Maui.FlowDirection
Microsoft.Maui.Controls.Internals.ActionSheetArguments.FlowDirection.set -> void
Microsoft.Maui.Controls.Internals.AlertArguments
Microsoft.Maui.Controls.Internals.AlertArguments.FlowDirection.get -> Microsoft.Maui.FlowDirection
Microsoft.Maui.Controls.Internals.AlertArguments.FlowDirection.set -> void
Microsoft.Maui.Controls.Internals.AlertArguments.SetResult(bool result) -> void
Microsoft.Maui.Controls.Internals.AsyncValue<T>
Microsoft.Maui.Controls.Internals.AsyncValue<T>.IsRunning.get -> bool
Microsoft.Maui.Controls.Internals.AsyncValue<T>.IsRunning.set -> void
Microsoft.Maui.Controls.Internals.AsyncValue<T>.PropertyChanged -> System.ComponentModel.PropertyChangedEventHandler
Microsoft.Maui.Controls.Internals.AsyncValue<T>.Value.get -> T
Microsoft.Maui.Controls.Internals.AsyncValueExtensions
Microsoft.Maui.Controls.Internals.AutoId
Microsoft.Maui.Controls.Internals.AutoId.AutoId() -> void
Microsoft.Maui.Controls.Internals.AutoId.Increment() -> int
Microsoft.Maui.Controls.Internals.AutoId.Value.get -> int
Microsoft.Maui.Controls.Internals.CellExtensions
Microsoft.Maui.Controls.Internals.ContentPageEx
Microsoft.Maui.Controls.Internals.DataTemplateExtensions
Microsoft.Maui.Controls.Internals.DependencyResolver
Microsoft.Maui.Controls.Internals.DynamicResource
Microsoft.Maui.Controls.Internals.EffectUtilities
Microsoft.Maui.Controls.Internals.EvalRequested
Microsoft.Maui.Controls.Internals.EvaluateJavaScriptDelegate
Microsoft.Maui.Controls.Internals.EventArg<T>
Microsoft.Maui.Controls.Internals.EventArg<T>.Data.get -> T
Microsoft.Maui.Controls.Internals.EventArg<T>.EventArg(T data) -> void
Microsoft.Maui.Controls.Internals.ExpressionSearch
Microsoft.Maui.Controls.Internals.ExpressionSearch.ExpressionSearch() -> void
Microsoft.Maui.Controls.Internals.GIFBitmap
Microsoft.Maui.Controls.Internals.GIFBitmap.BackgroundColor.get -> int
Microsoft.Maui.Controls.Internals.GIFBitmap.DataPosition.get -> long
Microsoft.Maui.Controls.Internals.GIFBitmap.Delay.get -> int
Microsoft.Maui.Controls.Internals.GIFBitmap.Dispose.get -> Microsoft.Maui.Controls.Internals.GIFBitmap.DisposeMethod
Microsoft.Maui.Controls.Internals.GIFBitmap.DisposeMethod
Microsoft.Maui.Controls.Internals.GIFBitmap.DisposeMethod.LeaveInPlace = 1 -> Microsoft.Maui.Controls.Internals.GIFBitmap.DisposeMethod
Microsoft.Maui.Controls.Internals.GIFBitmap.DisposeMethod.NoAction = 0 -> Microsoft.Maui.Controls.Internals.GIFBitmap.DisposeMethod
Microsoft.Maui.Controls.Internals.GIFBitmap.DisposeMethod.RestoreToBackground = 2 -> Microsoft.Maui.Controls.Internals.GIFBitmap.DisposeMethod
Microsoft.Maui.Controls.Internals.GIFBitmap.DisposeMethod.RestoreToPrevious = 3 -> Microsoft.Maui.Controls.Internals.GIFBitmap.DisposeMethod
Microsoft.Maui.Controls.Internals.GIFBitmap.IsInterlaced.get -> bool
Microsoft.Maui.Controls.Internals.GIFBitmap.IsTransparent.get -> bool
Microsoft.Maui.Controls.Internals.GIFBitmap.LoopCount.get -> int
Microsoft.Maui.Controls.Internals.GIFBitmap.Rect
Microsoft.Maui.Controls.Internals.GIFBitmap.Rect.Height.get -> int
Microsoft.Maui.Controls.Internals.GIFBitmap.Rect.Rect(int x, int y, int width, int height) -> void
Microsoft.Maui.Controls.Internals.GIFBitmap.Rect.Width.get -> int
Microsoft.Maui.Controls.Internals.GIFBitmap.Rect.X.get -> int
Microsoft.Maui.Controls.Internals.GIFBitmap.Rect.Y.get -> int
Microsoft.Maui.Controls.Internals.GIFBitmap.TransparencyIndex.get -> int
Microsoft.Maui.Controls.Internals.GIFBitmapDecoder
Microsoft.Maui.Controls.Internals.GIFBitmapDecoder.GIFBitmapDecoder() -> void
Microsoft.Maui.Controls.Internals.GIFColorTable
Microsoft.Maui.Controls.Internals.GIFColorTable.ResetTransparency() -> void
Microsoft.Maui.Controls.Internals.GIFColorTable.SetTransparency(int transparencyIndex) -> void
Microsoft.Maui.Controls.Internals.GIFDecoderFormatException
Microsoft.Maui.Controls.Internals.GIFDecoderFormatException.GIFDecoderFormatException() -> void
Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader
Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader.CurrentBlockSize.get -> int
Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader.CurrentPosition.get -> long
Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader.Read() -> int
Microsoft.Maui.Controls.Internals.GIFDecoderStreamReader.ReadShort() -> int
Microsoft.Maui.Controls.Internals.GIFHeader
Microsoft.Maui.Controls.Internals.GIFHeader.BackgroundColor.get -> int
Microsoft.Maui.Controls.Internals.GIFHeader.BackgroundColorIndex.get -> int
Microsoft.Maui.Controls.Internals.GIFHeader.Height.get -> int
Microsoft.Maui.Controls.Internals.GIFHeader.IsGIFHeader.get -> bool
Microsoft.Maui.Controls.Internals.GIFHeader.PixelAspectRatio.get -> int
Microsoft.Maui.Controls.Internals.GIFHeader.Width.get -> int
Microsoft.Maui.Controls.Internals.GIFImageParser
Microsoft.Maui.Controls.Internals.GIFImageParser.GIFImageParser() -> void
Microsoft.Maui.Controls.Internals.IDataTemplateController
Microsoft.Maui.Controls.Internals.IDataTemplateController.Id.get -> int
Microsoft.Maui.Controls.Internals.IDynamicResourceHandler
Microsoft.Maui.Controls.Internals.IExpressionSearch
Microsoft.Maui.Controls.Internals.IFontElement
Microsoft.Maui.Controls.Internals.IFontElement.FontAttributes.get -> Microsoft.Maui.Controls.FontAttributes
Microsoft.Maui.Controls.Internals.IFontElement.FontAutoScalingEnabled.get -> bool
Microsoft.Maui.Controls.Internals.IFontElement.FontSize.get -> double
Microsoft.Maui.Controls.Internals.IFontElement.FontSizeDefaultValueCreator() -> double
Microsoft.Maui.Controls.Internals.IFontElement.OnFontAttributesChanged(Microsoft.Maui.Controls.FontAttributes oldValue, Microsoft.Maui.Controls.FontAttributes newValue) -> void
Microsoft.Maui.Controls.Internals.IFontElement.OnFontAutoScalingEnabledChanged(bool oldValue, bool newValue) -> void
Microsoft.Maui.Controls.Internals.IFontElement.OnFontSizeChanged(double oldValue, double newValue) -> void
Microsoft.Maui.Controls.Internals.IFontNamedSizeService
Microsoft.Maui.Controls.Internals.IGestureController
Microsoft.Maui.Controls.Internals.INameScope
Microsoft.Maui.Controls.Internals.INavigationProxy
Microsoft.Maui.Controls.Internals.InvalidationTrigger
Microsoft.Maui.Controls.Internals.InvalidationTrigger.HorizontalOptionsChanged = 2 -> Microsoft.Maui.Controls.Internals.InvalidationTrigger
Microsoft.Maui.Controls.Internals.InvalidationTrigger.MarginChanged = 32 -> Microsoft.Maui.Controls.Internals.InvalidationTrigger
Microsoft.Maui.Controls.Internals.InvalidationTrigger.MeasureChanged = 1 -> Microsoft.Maui.Controls.Internals.InvalidationTrigger
Microsoft.Maui.Controls.Internals.InvalidationTrigger.RendererReady = 16 -> Microsoft.Maui.Controls.Internals.InvalidationTrigger
Microsoft.Maui.Controls.Internals.InvalidationTrigger.SizeRequestChanged = 8 -> Microsoft.Maui.Controls.Internals.InvalidationTrigger
Microsoft.Maui.Controls.Internals.InvalidationTrigger.Undefined = 0 -> Microsoft.Maui.Controls.Internals.InvalidationTrigger
Microsoft.Maui.Controls.Internals.InvalidationTrigger.VerticalOptionsChanged = 4 -> Microsoft.Maui.Controls.Internals.InvalidationTrigger
Microsoft.Maui.Controls.Internals.IPerformanceProvider
Microsoft.Maui.Controls.Internals.IPlatformSizeService
Microsoft.Maui.Controls.Internals.IResourceDictionary
Microsoft.Maui.Controls.Internals.IResourceDictionary.ValuesChanged -> System.EventHandler<Microsoft.Maui.Controls.Internals.ResourcesChangedEventArgs>
Microsoft.Maui.Controls.Internals.ISpatialElement
Microsoft.Maui.Controls.Internals.ISpatialElement.Region.get -> Microsoft.Maui.Controls.Region
Microsoft.Maui.Controls.Internals.ISpatialElement.Region.set -> void
Microsoft.Maui.Controls.Internals.ISystemResourcesProvider
Microsoft.Maui.Controls.Internals.NameScope
Microsoft.Maui.Controls.Internals.NameScope.NameScope() -> void
Microsoft.Maui.Controls.Internals.NavigationProxy
Microsoft.Maui.Controls.Internals.NavigationProxy.NavigationProxy() -> void
Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs
Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs.Animated.get -> bool
Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs.Animated.set -> void
Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs.RequestType.get -> Microsoft.Maui.Controls.Internals.NavigationRequestType
Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs.RequestType.set -> void
Microsoft.Maui.Controls.Internals.NavigationRequestType
Microsoft.Maui.Controls.Internals.NavigationRequestType.Insert = 4 -> Microsoft.Maui.Controls.Internals.NavigationRequestType
Microsoft.Maui.Controls.Internals.NavigationRequestType.Pop = 2 -> Microsoft.Maui.Controls.Internals.NavigationRequestType
Microsoft.Maui.Controls.Internals.NavigationRequestType.PopToRoot = 3 -> Microsoft.Maui.Controls.Internals.NavigationRequestType
Microsoft.Maui.Controls.Internals.NavigationRequestType.Push = 1 -> Microsoft.Maui.Controls.Internals.NavigationRequestType
Microsoft.Maui.Controls.Internals.NavigationRequestType.Remove = 5 -> Microsoft.Maui.Controls.Internals.NavigationRequestType
Microsoft.Maui.Controls.Internals.NavigationRequestType.Unknown = 0 -> Microsoft.Maui.Controls.Internals.NavigationRequestType
Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx
Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.Count.get -> int
Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsEx.NotifyCollectionChangedEventArgsEx(int count, System.Collections.Specialized.NotifyCollectionChangedAction action) -> void
Microsoft.Maui.Controls.Internals.NotifyCollectionChangedEventArgsExtensions
Microsoft.Maui.Controls.Internals.PageExtensions
Microsoft.Maui.Controls.Internals.Performance
Microsoft.Maui.Controls.Internals.Performance.Performance() -> void
Microsoft.Maui.Controls.Internals.PreserveAttribute
Microsoft.Maui.Controls.Internals.PreserveAttribute.AllMembers -> bool
Microsoft.Maui.Controls.Internals.PreserveAttribute.Conditional -> bool
Microsoft.Maui.Controls.Internals.PreserveAttribute.PreserveAttribute() -> void
Microsoft.Maui.Controls.Internals.PreserveAttribute.PreserveAttribute(bool allMembers, bool conditional) -> void
Microsoft.Maui.Controls.Internals.Profile
Microsoft.Maui.Controls.Internals.Profile.Datum
Microsoft.Maui.Controls.Internals.Profile.Datum.Datum() -> void
Microsoft.Maui.Controls.Internals.Profile.Datum.Depth -> int
Microsoft.Maui.Controls.Internals.Profile.Datum.Line -> int
Microsoft.Maui.Controls.Internals.Profile.Datum.Ticks -> long
Microsoft.Maui.Controls.Internals.Profile.Dispose() -> void
Microsoft.Maui.Controls.Internals.Profile.Profile() -> void
Microsoft.Maui.Controls.Internals.ProfileDatum
Microsoft.Maui.Controls.Internals.ProfileDatum.Depth -> int
Microsoft.Maui.Controls.Internals.ProfileDatum.Line -> int
Microsoft.Maui.Controls.Internals.ProfileDatum.ProfileDatum() -> void
Microsoft.Maui.Controls.Internals.ProfileDatum.SubTicks -> long
Microsoft.Maui.Controls.Internals.ProfileDatum.Ticks -> long
Microsoft.Maui.Controls.Internals.PromptArguments
Microsoft.Maui.Controls.Internals.PromptArguments.MaxLength.get -> int
Microsoft.Maui.Controls.Internals.PropertyPropagationExtensions
Microsoft.Maui.Controls.Internals.Registrar
Microsoft.Maui.Controls.Internals.Registrar<TRegistrable>.Registrar() -> void
Microsoft.Maui.Controls.Internals.ResourceLoader
Microsoft.Maui.Controls.Internals.ResourceLoader.ResourceLoadingQuery
Microsoft.Maui.Controls.Internals.ResourceLoader.ResourceLoadingQuery.ResourceLoadingQuery() -> void
Microsoft.Maui.Controls.Internals.ResourceLoader.ResourceLoadingResponse
Microsoft.Maui.Controls.Internals.ResourceLoader.ResourceLoadingResponse.ResourceLoadingResponse() -> void
Microsoft.Maui.Controls.Internals.ResourceLoader.ResourceLoadingResponse.UseDesignProperties.get -> bool
Microsoft.Maui.Controls.Internals.ResourceLoader.ResourceLoadingResponse.UseDesignProperties.set -> void
Microsoft.Maui.Controls.Internals.ResourcesChangedEventArgs
Microsoft.Maui.Controls.Internals.SetValueFlags
Microsoft.Maui.Controls.Internals.SetValueFlags.ClearDynamicResource = 4 -> Microsoft.Maui.Controls.Internals.SetValueFlags
Microsoft.Maui.Controls.Internals.SetValueFlags.ClearOneWayBindings = 1 -> Microsoft.Maui.Controls.Internals.SetValueFlags
Microsoft.Maui.Controls.Internals.SetValueFlags.ClearTwoWayBindings = 2 -> Microsoft.Maui.Controls.Internals.SetValueFlags
Microsoft.Maui.Controls.Internals.SetValueFlags.None = 0 -> Microsoft.Maui.Controls.Internals.SetValueFlags
Microsoft.Maui.Controls.Internals.SetValueFlags.RaiseOnEqual = 8 -> Microsoft.Maui.Controls.Internals.SetValueFlags
Microsoft.Maui.Controls.Internals.TableModel
Microsoft.Maui.Controls.Internals.TableModel.ItemLongPressed -> System.EventHandler<Microsoft.Maui.Controls.Internals.EventArg<object>>
Microsoft.Maui.Controls.Internals.TableModel.ItemSelected -> System.EventHandler<Microsoft.Maui.Controls.Internals.EventArg<object>>
Microsoft.Maui.Controls.Internals.TableModel.RowLongPressed(int section, int row) -> void
Microsoft.Maui.Controls.Internals.TableModel.RowSelected(int section, int row) -> void
Microsoft.Maui.Controls.Internals.TableModel.TableModel() -> void
Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.CollectionChanged -> System.Collections.Specialized.NotifyCollectionChangedEventHandler
Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.Count.get -> int
Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.Dispose() -> void
Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.GetDescendantCount() -> int
Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.GetGroupIndexFromGlobal(int globalIndex, out int leftOver) -> int
Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.GroupedCollectionChanged -> System.Collections.Specialized.NotifyCollectionChangedEventHandler
Microsoft.Maui.Controls.Internals.TemplatedItemsList<TView, TItem>.IsGroupingEnabled.get -> bool
Microsoft.Maui.Controls.Internals.TextTransformUtilites
Microsoft.Maui.Controls.Internals.TypedBinding<TSource, TProperty>
Microsoft.Maui.Controls.Internals.TypedBindingBase
Microsoft.Maui.Controls.InvalidNavigationException
Microsoft.Maui.Controls.InvalidNavigationException.InvalidNavigationException() -> void
Microsoft.Maui.Controls.IPaddingElement
Microsoft.Maui.Controls.IPaddingElement.OnPaddingPropertyChanged(Microsoft.Maui.Thickness oldValue, Microsoft.Maui.Thickness newValue) -> void
Microsoft.Maui.Controls.IPaddingElement.Padding.get -> Microsoft.Maui.Thickness
Microsoft.Maui.Controls.IPaddingElement.PaddingDefaultValueCreator() -> Microsoft.Maui.Thickness
Microsoft.Maui.Controls.IPageController
Microsoft.Maui.Controls.IPageController.ContainerArea.get -> Microsoft.Maui.Graphics.Rect
Microsoft.Maui.Controls.IPageController.ContainerArea.set -> void
Microsoft.Maui.Controls.IPageController.IgnoresContainerArea.get -> bool
Microsoft.Maui.Controls.IPageController.IgnoresContainerArea.set -> void
Microsoft.Maui.Controls.IPageController.SendAppearing() -> void
Microsoft.Maui.Controls.IPageController.SendDisappearing() -> void
Microsoft.Maui.Controls.IPanGestureController
Microsoft.Maui.Controls.IPinchGestureController
Microsoft.Maui.Controls.IPinchGestureController.IsPinching.get -> bool
Microsoft.Maui.Controls.IPinchGestureController.IsPinching.set -> void
Microsoft.Maui.Controls.IQueryAttributable
Microsoft.Maui.Controls.IRegisterable
Microsoft.Maui.Controls.IScrollViewController
Microsoft.Maui.Controls.IScrollViewController.LayoutAreaOverride.get -> Microsoft.Maui.Graphics.Rect
Microsoft.Maui.Controls.IScrollViewController.LayoutAreaOverride.set -> void
Microsoft.Maui.Controls.IScrollViewController.ScrollToRequested -> System.EventHandler<Microsoft.Maui.Controls.ScrollToRequestedEventArgs>
Microsoft.Maui.Controls.IScrollViewController.SendScrollFinished() -> void
Microsoft.Maui.Controls.IScrollViewController.SetScrolledPosition(double x, double y) -> void
Microsoft.Maui.Controls.ISearchBarController
Microsoft.Maui.Controls.ISearchBarController.OnSearchButtonPressed() -> void
Microsoft.Maui.Controls.ISearchHandlerController
Microsoft.Maui.Controls.ISearchHandlerController.ClearPlaceholderClicked() -> void
Microsoft.Maui.Controls.ISearchHandlerController.ListProxyChanged -> System.EventHandler<Microsoft.Maui.Controls.ListProxyChangedEventArgs>
Microsoft.Maui.Controls.ISearchHandlerController.QueryConfirmed() -> void
Microsoft.Maui.Controls.IShellAppearanceElement
Microsoft.Maui.Controls.IShellContentController
Microsoft.Maui.Controls.IShellContentController.IsPageVisibleChanged -> System.EventHandler
Microsoft.Maui.Controls.IShellContentInsetObserver
Microsoft.Maui.Controls.IShellContentInsetObserver.OnInsetChanged(Microsoft.Maui.Thickness inset, double tabThickness) -> void
Microsoft.Maui.Controls.IShellController
Microsoft.Maui.Controls.IShellController.FlyoutItemsChanged -> System.EventHandler
Microsoft.Maui.Controls.IShellController.ItemsCollectionChanged -> System.Collections.Specialized.NotifyCollectionChangedEventHandler
Microsoft.Maui.Controls.IShellController.StructureChanged -> System.EventHandler
Microsoft.Maui.Controls.IShellController.UpdateCurrentState(Microsoft.Maui.Controls.ShellNavigationSource source) -> void
Microsoft.Maui.Controls.IShellItemController
Microsoft.Maui.Controls.IShellItemController.ItemsCollectionChanged -> System.Collections.Specialized.NotifyCollectionChangedEventHandler
Microsoft.Maui.Controls.IShellItemController.ShowTabs.get -> bool
Microsoft.Maui.Controls.IShellSectionController
Microsoft.Maui.Controls.IShellSectionController.ItemsCollectionChanged -> System.Collections.Specialized.NotifyCollectionChangedEventHandler
Microsoft.Maui.Controls.IShellSectionController.NavigationRequested -> System.EventHandler<Microsoft.Maui.Controls.Internals.NavigationRequestedEventArgs>
Microsoft.Maui.Controls.IShellSectionController.SendInsetChanged(Microsoft.Maui.Thickness inset, double tabThickness) -> void
Microsoft.Maui.Controls.IShellSectionController.SendPopped() -> void
Microsoft.Maui.Controls.ISliderController
Microsoft.Maui.Controls.ISliderController.SendDragCompleted() -> void
Microsoft.Maui.Controls.ISliderController.SendDragStarted() -> void
Microsoft.Maui.Controls.ISwipeGestureController
Microsoft.Maui.Controls.ISwipeItem
Microsoft.Maui.Controls.ISwipeItem.Invoked -> System.EventHandler<System.EventArgs>
Microsoft.Maui.Controls.ISwipeItem.IsVisible.get -> bool
Microsoft.Maui.Controls.ISwipeItem.IsVisible.set -> void
Microsoft.Maui.Controls.ISwipeViewController
Microsoft.Maui.Controls.ISwipeViewController.IsOpen.get -> bool
Microsoft.Maui.Controls.ISwipeViewController.IsOpen.set -> void
Microsoft.Maui.Controls.ITableModel
Microsoft.Maui.Controls.ITableModel.GetRowCount(int section) -> int
Microsoft.Maui.Controls.ITableModel.GetSectionCount() -> int
Microsoft.Maui.Controls.ITableModel.RowLongPressed(int section, int row) -> void
Microsoft.Maui.Controls.ITableModel.RowSelected(int section, int row) -> void
Microsoft.Maui.Controls.ITableViewController
Microsoft.Maui.Controls.ITableViewController.ModelChanged -> System.EventHandler
Microsoft.Maui.Controls.ITemplatedItemsList<TItem>.GetGroupIndexFromGlobal(int globalIndex, out int leftOver) -> int
Microsoft.Maui.Controls.ITemplatedItemsList<TItem>.GroupedCollectionChanged -> System.Collections.Specialized.NotifyCollectionChangedEventHandler
Microsoft.Maui.Controls.ITemplatedItemsList<TItem>.PropertyChanged -> System.ComponentModel.PropertyChangedEventHandler
Microsoft.Maui.Controls.ITemplatedItemsListScrollToRequestedEventArgs
Microsoft.Maui.Controls.ITemplatedItemsView<TItem>.PropertyChanged -> System.ComponentModel.PropertyChangedEventHandler
Microsoft.Maui.Controls.ItemSizingStrategy
Microsoft.Maui.Controls.ItemSizingStrategy.MeasureAllItems = 0 -> Microsoft.Maui.Controls.ItemSizingStrategy
Microsoft.Maui.Controls.ItemSizingStrategy.MeasureFirstItem = 1 -> Microsoft.Maui.Controls.ItemSizingStrategy
Microsoft.Maui.Controls.ItemsLayout
Microsoft.Maui.Controls.ItemsLayout.ItemsLayout(Microsoft.Maui.Controls.ItemsLayoutOrientation orientation) -> void
Microsoft.Maui.Controls.ItemsLayout.Orientation.get -> Microsoft.Maui.Controls.ItemsLayoutOrientation
Microsoft.Maui.Controls.ItemsLayout.SnapPointsAlignment.get -> Microsoft.Maui.Controls.SnapPointsAlignment
Microsoft.Maui.Controls.ItemsLayout.SnapPointsAlignment.set -> void
Microsoft.Maui.Controls.ItemsLayout.SnapPointsType.get -> Microsoft.Maui.Controls.SnapPointsType
Microsoft.Maui.Controls.ItemsLayout.SnapPointsType.set -> void
Microsoft.Maui.Controls.ItemsLayoutOrientation
Microsoft.Maui.Controls.ItemsLayoutOrientation.Horizontal = 1 -> Microsoft.Maui.Controls.ItemsLayoutOrientation
Microsoft.Maui.Controls.ItemsLayoutOrientation.Vertical = 0 -> Microsoft.Maui.Controls.ItemsLayoutOrientation
Microsoft.Maui.Controls.ItemsLayoutTypeConverter
Microsoft.Maui.Controls.ItemsLayoutTypeConverter.ItemsLayoutTypeConverter() -> void
Microsoft.Maui.Controls.ItemsUpdatingScrollMode
Microsoft.Maui.Controls.ItemsUpdatingScrollMode.KeepItemsInView = 0 -> Microsoft.Maui.Controls.ItemsUpdatingScrollMode
Microsoft.Maui.Controls.ItemsUpdatingScrollMode.KeepLastItemInView = 2 -> Microsoft.Maui.Controls.ItemsUpdatingScrollMode
Microsoft.Maui.Controls.ItemsUpdatingScrollMode.KeepScrollOffset = 1 -> Microsoft.Maui.Controls.ItemsUpdatingScrollMode
Microsoft.Maui.Controls.ItemsView
Microsoft.Maui.Controls.ItemsView.HorizontalScrollBarVisibility.get -> Microsoft.Maui.ScrollBarVisibility
Microsoft.Maui.Controls.ItemsView.HorizontalScrollBarVisibility.set -> void
Microsoft.Maui.Controls.ItemsView.ItemsUpdatingScrollMode.get -> Microsoft.Maui.Controls.ItemsUpdatingScrollMode
Microsoft.Maui.Controls.ItemsView.ItemsUpdatingScrollMode.set -> void
Microsoft.Maui.Controls.ItemsView.ItemsView() -> void
Microsoft.Maui.Controls.ItemsView.RemainingItemsThreshold.get -> int
Microsoft.Maui.Controls.ItemsView.RemainingItemsThreshold.set -> void
Microsoft.Maui.Controls.ItemsView.RemainingItemsThresholdReached -> System.EventHandler
Microsoft.Maui.Controls.ItemsView.Scrolled -> System.EventHandler<Microsoft.Maui.Controls.ItemsViewScrolledEventArgs>
Microsoft.Maui.Controls.ItemsView.ScrollTo(int index, int groupIndex = -1, Microsoft.Maui.Controls.ScrollToPosition position = Microsoft.Maui.Controls.ScrollToPosition.MakeVisible, bool animate = true) -> void
Microsoft.Maui.Controls.ItemsView.ScrollToRequested -> System.EventHandler<Microsoft.Maui.Controls.ScrollToRequestEventArgs>
Microsoft.Maui.Controls.ItemsView.SendRemainingItemsThresholdReached() -> void
Microsoft.Maui.Controls.ItemsView.VerticalScrollBarVisibility.get -> Microsoft.Maui.ScrollBarVisibility
Microsoft.Maui.Controls.ItemsView.VerticalScrollBarVisibility.set -> void
Microsoft.Maui.Controls.ItemsViewScrolledEventArgs
Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.CenterItemIndex.get -> int
Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.CenterItemIndex.set -> void
Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.FirstVisibleItemIndex.get -> int
Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.FirstVisibleItemIndex.set -> void
Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.HorizontalDelta.get -> double
Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.HorizontalDelta.set -> void
Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.HorizontalOffset.get -> double
Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.HorizontalOffset.set -> void
Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.ItemsViewScrolledEventArgs() -> void
Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.LastVisibleItemIndex.get -> int
Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.LastVisibleItemIndex.set -> void
Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.VerticalDelta.get -> double
Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.VerticalDelta.set -> void
Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.VerticalOffset.get -> double
Microsoft.Maui.Controls.ItemsViewScrolledEventArgs.VerticalOffset.set -> void
Microsoft.Maui.Controls.ItemTappedEventArgs
Microsoft.Maui.Controls.ItemTappedEventArgs.ItemIndex.get -> int
Microsoft.Maui.Controls.ItemVisibilityEventArgs
Microsoft.Maui.Controls.ItemVisibilityEventArgs.ItemIndex.get -> int
Microsoft.Maui.Controls.IValueConverter
Microsoft.Maui.Controls.IValueConverter.Convert(object? value, System.Type! targetType, object? parameter, System.Globalization.CultureInfo! culture) -> object?
Microsoft.Maui.Controls.IValueConverter.ConvertBack(object? value, System.Type! targetType, object? parameter, System.Globalization.CultureInfo! culture) -> object?
Microsoft.Maui.Controls.IViewController
Microsoft.Maui.Controls.IVisual
Microsoft.Maui.Controls.IVisualElementController
Microsoft.Maui.Controls.IVisualElementController.BatchCommitted -> System.EventHandler<Microsoft.Maui.Controls.Internals.EventArg<Microsoft.Maui.Controls.VisualElement>>
Microsoft.Maui.Controls.IVisualElementController.Batched.get -> bool
Microsoft.Maui.Controls.IVisualElementController.DisableLayout.get -> bool
Microsoft.Maui.Controls.IVisualElementController.DisableLayout.set -> void
Microsoft.Maui.Controls.IVisualElementController.EffectiveFlowDirection.get -> Microsoft.Maui.Controls.EffectiveFlowDirection
Microsoft.Maui.Controls.IVisualElementController.FocusChangeRequested -> System.EventHandler<Microsoft.Maui.Controls.VisualElement.FocusRequestArgs>
Microsoft.Maui.Controls.IVisualElementController.InvalidateMeasure(Microsoft.Maui.Controls.Internals.InvalidationTrigger trigger) -> void
Microsoft.Maui.Controls.IVisualElementController.IsInPlatformLayout.get -> bool
Microsoft.Maui.Controls.IVisualElementController.IsInPlatformLayout.set -> void
Microsoft.Maui.Controls.IVisualElementController.IsPlatformEnabled.get -> bool
Microsoft.Maui.Controls.IVisualElementController.IsPlatformEnabled.set -> void
Microsoft.Maui.Controls.IVisualElementController.IsPlatformStateConsistent.get -> bool
Microsoft.Maui.Controls.IVisualElementController.IsPlatformStateConsistent.set -> void
Microsoft.Maui.Controls.IVisualElementController.PlatformSizeChanged() -> void
Microsoft.Maui.Controls.IWebViewController
Microsoft.Maui.Controls.IWebViewController.CanGoBack.get -> bool
Microsoft.Maui.Controls.IWebViewController.CanGoBack.set -> void
Microsoft.Maui.Controls.IWebViewController.CanGoForward.get -> bool
Microsoft.Maui.Controls.IWebViewController.CanGoForward.set -> void
Microsoft.Maui.Controls.IWebViewController.EvalRequested -> System.EventHandler<Microsoft.Maui.Controls.Internals.EvalRequested>
Microsoft.Maui.Controls.IWebViewController.EvaluateJavaScriptRequested -> Microsoft.Maui.Controls.Internals.EvaluateJavaScriptDelegate
Microsoft.Maui.Controls.IWebViewController.GoBackRequested -> System.EventHandler
Microsoft.Maui.Controls.IWebViewController.GoForwardRequested -> System.EventHandler
Microsoft.Maui.Controls.IWebViewController.ReloadRequested -> System.EventHandler
Microsoft.Maui.Controls.IWindowCreator
Microsoft.Maui.Controls.IWindowCreator.CreateWindow(Microsoft.Maui.Controls.Application! app, Microsoft.Maui.IActivationState? activationState) -> Microsoft.Maui.Controls.Window!
Microsoft.Maui.Controls.KeyboardAccelerator
Microsoft.Maui.Controls.KeyboardAccelerator.Key.get -> string?
Microsoft.Maui.Controls.KeyboardAccelerator.Key.set -> void
Microsoft.Maui.Controls.KeyboardAccelerator.KeyboardAccelerator() -> void
Microsoft.Maui.Controls.KeyboardAccelerator.Modifiers.get -> Microsoft.Maui.KeyboardAcceleratorModifiers
Microsoft.Maui.Controls.KeyboardAccelerator.Modifiers.set -> void
Microsoft.Maui.Controls.KnownColor
Microsoft.Maui.Controls.Label
Microsoft.Maui.Controls.Label.CharacterSpacing.get -> double
Microsoft.Maui.Controls.Label.CharacterSpacing.set -> void
Microsoft.Maui.Controls.Label.FontAttributes.get -> Microsoft.Maui.Controls.FontAttributes
Microsoft.Maui.Controls.Label.FontAttributes.set -> void
Microsoft.Maui.Controls.Label.FontAutoScalingEnabled.get -> bool
Microsoft.Maui.Controls.Label.FontAutoScalingEnabled.set -> void
Microsoft.Maui.Controls.Label.FontSize.get -> double
Microsoft.Maui.Controls.Label.FontSize.set -> void
Microsoft.Maui.Controls.Label.HorizontalTextAlignment.get -> Microsoft.Maui.TextAlignment
Microsoft.Maui.Controls.Label.HorizontalTextAlignment.set -> void
Microsoft.Maui.Controls.Label.Label() -> void
Microsoft.Maui.Controls.Label.LineBreakMode.get -> Microsoft.Maui.LineBreakMode
Microsoft.Maui.Controls.Label.LineBreakMode.set -> void
Microsoft.Maui.Controls.Label.LineHeight.get -> double
Microsoft.Maui.Controls.Label.LineHeight.set -> void
Microsoft.Maui.Controls.Label.MaxLines.get -> int
Microsoft.Maui.Controls.Label.MaxLines.set -> void
Microsoft.Maui.Controls.Label.Padding.get -> Microsoft.Maui.Thickness
Microsoft.Maui.Controls.Label.Padding.set -> void
Microsoft.Maui.Controls.Label.TextDecorations.get -> Microsoft.Maui.TextDecorations
Microsoft.Maui.Controls.Label.TextDecorations.set -> void
Microsoft.Maui.Controls.Label.TextTransform.get -> Microsoft.Maui.TextTransform
Microsoft.Maui.Controls.Label.TextTransform.set -> void
Microsoft.Maui.Controls.Label.TextType.get -> Microsoft.Maui.TextType
Microsoft.Maui.Controls.Label.TextType.set -> void
Microsoft.Maui.Controls.Label.VerticalTextAlignment.get -> Microsoft.Maui.TextAlignment
Microsoft.Maui.Controls.Label.VerticalTextAlignment.set -> void
Microsoft.Maui.Controls.Layout
Microsoft.Maui.Controls.Layout.CascadeInputTransparent.get -> bool
Microsoft.Maui.Controls.Layout.CascadeInputTransparent.set -> void
Microsoft.Maui.Controls.Layout.Clear() -> void
Microsoft.Maui.Controls.Layout.Count.get -> int
Microsoft.Maui.Controls.Layout.CrossPlatformArrange(Microsoft.Maui.Graphics.Rect bounds) -> Microsoft.Maui.Graphics.Size
Microsoft.Maui.Controls.Layout.CrossPlatformMeasure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
Microsoft.Maui.Controls.Layout.IgnoreSafeArea.get -> bool
Microsoft.Maui.Controls.Layout.IgnoreSafeArea.set -> void
Microsoft.Maui.Controls.Layout.IsClippedToBounds.get -> bool
Microsoft.Maui.Controls.Layout.IsClippedToBounds.set -> void
Microsoft.Maui.Controls.Layout.IsReadOnly.get -> bool
Microsoft.Maui.Controls.Layout.Layout() -> void
Microsoft.Maui.Controls.Layout.Padding.get -> Microsoft.Maui.Thickness
Microsoft.Maui.Controls.Layout.Padding.set -> void
Microsoft.Maui.Controls.Layout.RemoveAt(int index) -> void
Microsoft.Maui.Controls.LayoutAlignment
Microsoft.Maui.Controls.LayoutAlignment.Center = 1 -> Microsoft.Maui.Controls.LayoutAlignment
Microsoft.Maui.Controls.LayoutAlignment.End = 2 -> Microsoft.Maui.Controls.LayoutAlignment
Microsoft.Maui.Controls.LayoutAlignment.Fill = Microsoft.Maui.Controls.LayoutAlignment.Center | Microsoft.Maui.Controls.LayoutAlignment.End -> Microsoft.Maui.Controls.LayoutAlignment
Microsoft.Maui.Controls.LayoutAlignment.Start = 0 -> Microsoft.Maui.Controls.LayoutAlignment
Microsoft.Maui.Controls.LayoutDirectionExtensions
Microsoft.Maui.Controls.LayoutOptions
Microsoft.Maui.Controls.LayoutOptions.Alignment.get -> Microsoft.Maui.Controls.LayoutAlignment
Microsoft.Maui.Controls.LayoutOptions.Alignment.set -> void
Microsoft.Maui.Controls.LayoutOptions.Equals(Microsoft.Maui.Controls.LayoutOptions other) -> bool
Microsoft.Maui.Controls.LayoutOptions.Expands.get -> bool
Microsoft.Maui.Controls.LayoutOptions.Expands.set -> void
Microsoft.Maui.Controls.LayoutOptions.LayoutOptions() -> void
Microsoft.Maui.Controls.LayoutOptions.LayoutOptions(Microsoft.Maui.Controls.LayoutAlignment alignment, bool expands) -> void
Microsoft.Maui.Controls.LayoutOptionsConverter
Microsoft.Maui.Controls.LayoutOptionsConverter.LayoutOptionsConverter() -> void
Microsoft.Maui.Controls.LinearGradientBrush
Microsoft.Maui.Controls.LinearGradientBrush.EndPoint.get -> Microsoft.Maui.Graphics.Point
Microsoft.Maui.Controls.LinearGradientBrush.EndPoint.set -> void
Microsoft.Maui.Controls.LinearGradientBrush.LinearGradientBrush() -> void
Microsoft.Maui.Controls.LinearGradientBrush.StartPoint.get -> Microsoft.Maui.Graphics.Point
Microsoft.Maui.Controls.LinearGradientBrush.StartPoint.set -> void
Microsoft.Maui.Controls.LinearItemsLayout
Microsoft.Maui.Controls.LinearItemsLayout.ItemSpacing.get -> double
Microsoft.Maui.Controls.LinearItemsLayout.ItemSpacing.set -> void
Microsoft.Maui.Controls.LinearItemsLayout.LinearItemsLayout(Microsoft.Maui.Controls.ItemsLayoutOrientation orientation) -> void
Microsoft.Maui.Controls.ListProxyChangedEventArgs
Microsoft.Maui.Controls.ListStringTypeConverter
Microsoft.Maui.Controls.ListStringTypeConverter.ListStringTypeConverter() -> void
Microsoft.Maui.Controls.ListView
Microsoft.Maui.Controls.ListView.BeginRefresh() -> void
Microsoft.Maui.Controls.ListView.CachingStrategy.get -> Microsoft.Maui.Controls.ListViewCachingStrategy
Microsoft.Maui.Controls.ListView.EndRefresh() -> void
Microsoft.Maui.Controls.ListView.HasUnevenRows.get -> bool
Microsoft.Maui.Controls.ListView.HasUnevenRows.set -> void
Microsoft.Maui.Controls.ListView.HorizontalScrollBarVisibility.get -> Microsoft.Maui.ScrollBarVisibility
Microsoft.Maui.Controls.ListView.HorizontalScrollBarVisibility.set -> void
Microsoft.Maui.Controls.ListView.IsGroupingEnabled.get -> bool
Microsoft.Maui.Controls.ListView.IsGroupingEnabled.set -> void
Microsoft.Maui.Controls.ListView.IsPullToRefreshEnabled.get -> bool
Microsoft.Maui.Controls.ListView.IsPullToRefreshEnabled.set -> void
Microsoft.Maui.Controls.ListView.IsRefreshing.get -> bool
Microsoft.Maui.Controls.ListView.IsRefreshing.set -> void
Microsoft.Maui.Controls.ListView.ItemAppearing -> System.EventHandler<Microsoft.Maui.Controls.ItemVisibilityEventArgs>
Microsoft.Maui.Controls.ListView.ItemDisappearing -> System.EventHandler<Microsoft.Maui.Controls.ItemVisibilityEventArgs>
Microsoft.Maui.Controls.ListView.ItemSelected -> System.EventHandler<Microsoft.Maui.Controls.SelectedItemChangedEventArgs>
Microsoft.Maui.Controls.ListView.ItemTapped -> System.EventHandler<Microsoft.Maui.Controls.ItemTappedEventArgs>
Microsoft.Maui.Controls.ListView.ListView() -> void
Microsoft.Maui.Controls.ListView.ListView(Microsoft.Maui.Controls.ListViewCachingStrategy cachingStrategy) -> void
Microsoft.Maui.Controls.ListView.RefreshAllowed.get -> bool
Microsoft.Maui.Controls.ListView.RefreshAllowed.set -> void
Microsoft.Maui.Controls.ListView.Refreshing -> System.EventHandler
Microsoft.Maui.Controls.ListView.RowHeight.get -> int
Microsoft.Maui.Controls.ListView.RowHeight.set -> void
Microsoft.Maui.Controls.ListView.Scrolled -> System.EventHandler<Microsoft.Maui.Controls.ScrolledEventArgs>
Microsoft.Maui.Controls.ListView.ScrollToRequested -> System.EventHandler<Microsoft.Maui.Controls.ScrollToRequestedEventArgs>
Microsoft.Maui.Controls.ListView.SelectionMode.get -> Microsoft.Maui.Controls.ListViewSelectionMode
Microsoft.Maui.Controls.ListView.SelectionMode.set -> void
Microsoft.Maui.Controls.ListView.SendRefreshing() -> void
Microsoft.Maui.Controls.ListView.SeparatorVisibility.get -> Microsoft.Maui.Controls.SeparatorVisibility
Microsoft.Maui.Controls.ListView.SeparatorVisibility.set -> void
Microsoft.Maui.Controls.ListView.VerticalScrollBarVisibility.get -> Microsoft.Maui.ScrollBarVisibility
Microsoft.Maui.Controls.ListView.VerticalScrollBarVisibility.set -> void
Microsoft.Maui.Controls.ListViewCachingStrategy
Microsoft.Maui.Controls.ListViewCachingStrategy.RecycleElement = 1 -> Microsoft.Maui.Controls.ListViewCachingStrategy
Microsoft.Maui.Controls.ListViewCachingStrategy.RecycleElementAndDataTemplate = 3 -> Microsoft.Maui.Controls.ListViewCachingStrategy
Microsoft.Maui.Controls.ListViewCachingStrategy.RetainElement = 0 -> Microsoft.Maui.Controls.ListViewCachingStrategy
Microsoft.Maui.Controls.ListViewSelectionMode
Microsoft.Maui.Controls.ListViewSelectionMode.None = 0 -> Microsoft.Maui.Controls.ListViewSelectionMode
Microsoft.Maui.Controls.ListViewSelectionMode.Single = 1 -> Microsoft.Maui.Controls.ListViewSelectionMode
Microsoft.Maui.Controls.MarshalingObservableCollection
Microsoft.Maui.Controls.MarshalingObservableCollection.CollectionChanged -> System.Collections.Specialized.NotifyCollectionChangedEventHandler
Microsoft.Maui.Controls.MeasureFlags
Microsoft.Maui.Controls.MeasureFlags.IncludeMargins = 1 -> Microsoft.Maui.Controls.MeasureFlags
Microsoft.Maui.Controls.MeasureFlags.None = 0 -> Microsoft.Maui.Controls.MeasureFlags
Microsoft.Maui.Controls.MenuBar
Microsoft.Maui.Controls.MenuBar.Clear() -> void
Microsoft.Maui.Controls.MenuBar.Count.get -> int
Microsoft.Maui.Controls.MenuBar.IsEnabled.get -> bool
Microsoft.Maui.Controls.MenuBar.IsEnabled.set -> void
Microsoft.Maui.Controls.MenuBar.IsReadOnly.get -> bool
Microsoft.Maui.Controls.MenuBar.MenuBar() -> void
Microsoft.Maui.Controls.MenuBar.RemoveAt(int index) -> void
Microsoft.Maui.Controls.MenuBarItem
Microsoft.Maui.Controls.MenuBarItem.Clear() -> void
Microsoft.Maui.Controls.MenuBarItem.Count.get -> int
Microsoft.Maui.Controls.MenuBarItem.IsEnabled.get -> bool
Microsoft.Maui.Controls.MenuBarItem.IsEnabled.set -> void
Microsoft.Maui.Controls.MenuBarItem.IsReadOnly.get -> bool
Microsoft.Maui.Controls.MenuBarItem.MenuBarItem() -> void
Microsoft.Maui.Controls.MenuBarItem.Priority.get -> int
Microsoft.Maui.Controls.MenuBarItem.Priority.set -> void
Microsoft.Maui.Controls.MenuBarItem.RemoveAt(int index) -> void
Microsoft.Maui.Controls.MenuFlyout
Microsoft.Maui.Controls.MenuFlyout.Clear() -> void
Microsoft.Maui.Controls.MenuFlyout.Count.get -> int
Microsoft.Maui.Controls.MenuFlyout.IsReadOnly.get -> bool
Microsoft.Maui.Controls.MenuFlyout.MenuFlyout() -> void
Microsoft.Maui.Controls.MenuFlyout.RemoveAt(int index) -> void
Microsoft.Maui.Controls.MenuFlyoutItem
Microsoft.Maui.Controls.MenuFlyoutItem.KeyboardAccelerators.get -> System.Collections.Generic.IList<Microsoft.Maui.Controls.KeyboardAccelerator!>!
Microsoft.Maui.Controls.MenuFlyoutItem.MenuFlyoutItem() -> void
Microsoft.Maui.Controls.MenuFlyoutSeparator
Microsoft.Maui.Controls.MenuFlyoutSeparator.MenuFlyoutSeparator() -> void
Microsoft.Maui.Controls.MenuFlyoutSubItem
Microsoft.Maui.Controls.MenuFlyoutSubItem.Clear() -> void
Microsoft.Maui.Controls.MenuFlyoutSubItem.Count.get -> int
Microsoft.Maui.Controls.MenuFlyoutSubItem.IsReadOnly.get -> bool
Microsoft.Maui.Controls.MenuFlyoutSubItem.MenuFlyoutSubItem() -> void
Microsoft.Maui.Controls.MenuFlyoutSubItem.RemoveAt(int index) -> void
Microsoft.Maui.Controls.MenuItem
Microsoft.Maui.Controls.MenuItem.Clicked -> System.EventHandler
Microsoft.Maui.Controls.MenuItem.IsDestructive.get -> bool
Microsoft.Maui.Controls.MenuItem.IsDestructive.set -> void
Microsoft.Maui.Controls.MenuItem.IsEnabled.get -> bool
Microsoft.Maui.Controls.MenuItem.IsEnabled.set -> void
Microsoft.Maui.Controls.MenuItem.MenuItem() -> void
Microsoft.Maui.Controls.MenuItemCollection
Microsoft.Maui.Controls.MenuItemCollection.Clear() -> void
Microsoft.Maui.Controls.MenuItemCollection.Count.get -> int
Microsoft.Maui.Controls.MenuItemCollection.IsReadOnly.get -> bool
Microsoft.Maui.Controls.MenuItemCollection.MenuItemCollection() -> void
Microsoft.Maui.Controls.MenuItemCollection.RemoveAt(int index) -> void
Microsoft.Maui.Controls.MessagingCenter
Microsoft.Maui.Controls.MessagingCenter.MessagingCenter() -> void
Microsoft.Maui.Controls.ModalEventArgs
Microsoft.Maui.Controls.ModalPoppedEventArgs
Microsoft.Maui.Controls.ModalPoppingEventArgs
Microsoft.Maui.Controls.ModalPoppingEventArgs.Cancel.get -> bool
Microsoft.Maui.Controls.ModalPoppingEventArgs.Cancel.set -> void
Microsoft.Maui.Controls.ModalPushedEventArgs
Microsoft.Maui.Controls.ModalPushingEventArgs
Microsoft.Maui.Controls.MultiBinding
Microsoft.Maui.Controls.MultiBinding.MultiBinding() -> void
Microsoft.Maui.Controls.MultiPage<T>.CurrentPageChanged -> System.EventHandler
Microsoft.Maui.Controls.MultiPage<T>.MultiPage() -> void
Microsoft.Maui.Controls.MultiPage<T>.PagesChanged -> System.Collections.Specialized.NotifyCollectionChangedEventHandler
Microsoft.Maui.Controls.MultiTrigger
Microsoft.Maui.Controls.NamedSize
Microsoft.Maui.Controls.NamedSize.Body = 5 -> Microsoft.Maui.Controls.NamedSize
Microsoft.Maui.Controls.NamedSize.Caption = 9 -> Microsoft.Maui.Controls.NamedSize
Microsoft.Maui.Controls.NamedSize.Default = 0 -> Microsoft.Maui.Controls.NamedSize
Microsoft.Maui.Controls.NamedSize.Header = 6 -> Microsoft.Maui.Controls.NamedSize
Microsoft.Maui.Controls.NamedSize.Large = 4 -> Microsoft.Maui.Controls.NamedSize
Microsoft.Maui.Controls.NamedSize.Medium = 3 -> Microsoft.Maui.Controls.NamedSize
Microsoft.Maui.Controls.NamedSize.Micro = 1 -> Microsoft.Maui.Controls.NamedSize
Microsoft.Maui.Controls.NamedSize.Small = 2 -> Microsoft.Maui.Controls.NamedSize
Microsoft.Maui.Controls.NamedSize.Subtitle = 8 -> Microsoft.Maui.Controls.NamedSize
Microsoft.Maui.Controls.NamedSize.Title = 7 -> Microsoft.Maui.Controls.NamedSize
Microsoft.Maui.Controls.NameScopeExtensions
Microsoft.Maui.Controls.NavigableElement
Microsoft.Maui.Controls.NavigatedFromEventArgs
Microsoft.Maui.Controls.NavigatedToEventArgs
Microsoft.Maui.Controls.NavigatingFromEventArgs
Microsoft.Maui.Controls.NavigatingFromEventArgs.NavigatingFromEventArgs() -> void
Microsoft.Maui.Controls.NavigationEventArgs
Microsoft.Maui.Controls.NavigationPage
Microsoft.Maui.Controls.NavigationPage.NavigationPage() -> void
Microsoft.Maui.Controls.NavigationPage.Popped -> System.EventHandler<Microsoft.Maui.Controls.NavigationEventArgs>
Microsoft.Maui.Controls.NavigationPage.PoppedToRoot -> System.EventHandler<Microsoft.Maui.Controls.NavigationEventArgs>
Microsoft.Maui.Controls.NavigationPage.Pushed -> System.EventHandler<Microsoft.Maui.Controls.NavigationEventArgs>
Microsoft.Maui.Controls.NullEffect
Microsoft.Maui.Controls.NullEffect.NullEffect() -> void
Microsoft.Maui.Controls.On
Microsoft.Maui.Controls.On.On() -> void
Microsoft.Maui.Controls.OnIdiom<T>
Microsoft.Maui.Controls.OnIdiom<T>.Default.get -> T
Microsoft.Maui.Controls.OnIdiom<T>.Default.set -> void
Microsoft.Maui.Controls.OnIdiom<T>.Desktop.get -> T
Microsoft.Maui.Controls.OnIdiom<T>.Desktop.set -> void
Microsoft.Maui.Controls.OnIdiom<T>.OnIdiom() -> void
Microsoft.Maui.Controls.OnIdiom<T>.Phone.get -> T
Microsoft.Maui.Controls.OnIdiom<T>.Phone.set -> void
Microsoft.Maui.Controls.OnIdiom<T>.Tablet.get -> T
Microsoft.Maui.Controls.OnIdiom<T>.Tablet.set -> void
Microsoft.Maui.Controls.OnIdiom<T>.TV.get -> T
Microsoft.Maui.Controls.OnIdiom<T>.TV.set -> void
Microsoft.Maui.Controls.OnIdiom<T>.Watch.get -> T
Microsoft.Maui.Controls.OnIdiom<T>.Watch.set -> void
Microsoft.Maui.Controls.OnPlatform<T>
Microsoft.Maui.Controls.OnPlatform<T>.Default.get -> T
Microsoft.Maui.Controls.OnPlatform<T>.Default.set -> void
Microsoft.Maui.Controls.OnPlatform<T>.OnPlatform() -> void
Microsoft.Maui.Controls.OpenRequestedEventArgs
Microsoft.Maui.Controls.OpenRequestedEventArgs.Animated.get -> bool
Microsoft.Maui.Controls.OpenRequestedEventArgs.Animated.set -> void
Microsoft.Maui.Controls.OpenRequestedEventArgs.OpenRequestedEventArgs(Microsoft.Maui.OpenSwipeItem openSwipeItem, bool animated) -> void
Microsoft.Maui.Controls.OpenRequestedEventArgs.OpenSwipeItem.get -> Microsoft.Maui.OpenSwipeItem
Microsoft.Maui.Controls.OpenRequestedEventArgs.OpenSwipeItem.set -> void
Microsoft.Maui.Controls.OrientationStateTrigger
Microsoft.Maui.Controls.OrientationStateTrigger.Orientation.get -> Microsoft.Maui.Devices.DisplayOrientation
Microsoft.Maui.Controls.OrientationStateTrigger.Orientation.set -> void
Microsoft.Maui.Controls.OrientationStateTrigger.OrientationStateTrigger() -> void
Microsoft.Maui.Controls.Page
Microsoft.Maui.Controls.Page.Appearing -> System.EventHandler
Microsoft.Maui.Controls.Page.ContainerArea.get -> Microsoft.Maui.Graphics.Rect
Microsoft.Maui.Controls.Page.ContainerArea.set -> void
Microsoft.Maui.Controls.Page.Disappearing -> System.EventHandler
Microsoft.Maui.Controls.Page.ForceLayout() -> void
Microsoft.Maui.Controls.Page.IgnoresContainerArea.get -> bool
Microsoft.Maui.Controls.Page.IgnoresContainerArea.set -> void
Microsoft.Maui.Controls.Page.IsBusy.get -> bool
Microsoft.Maui.Controls.Page.IsBusy.set -> void
Microsoft.Maui.Controls.Page.LayoutChanged -> System.EventHandler
Microsoft.Maui.Controls.Page.NavigatedFrom -> System.EventHandler<Microsoft.Maui.Controls.NavigatedFromEventArgs>
Microsoft.Maui.Controls.Page.NavigatedTo -> System.EventHandler<Microsoft.Maui.Controls.NavigatedToEventArgs>
Microsoft.Maui.Controls.Page.NavigatingFrom -> System.EventHandler<Microsoft.Maui.Controls.NavigatingFromEventArgs>
Microsoft.Maui.Controls.Page.Padding.get -> Microsoft.Maui.Thickness
Microsoft.Maui.Controls.Page.Padding.set -> void
Microsoft.Maui.Controls.Page.Page() -> void
Microsoft.Maui.Controls.Page.SendAppearing() -> void
Microsoft.Maui.Controls.Page.SendBackButtonPressed() -> bool
Microsoft.Maui.Controls.Page.SendDisappearing() -> void
Microsoft.Maui.Controls.Page.UpdateChildrenLayout() -> void
Microsoft.Maui.Controls.PanGestureRecognizer
Microsoft.Maui.Controls.PanGestureRecognizer.PanGestureRecognizer() -> void
Microsoft.Maui.Controls.PanGestureRecognizer.PanUpdated -> System.EventHandler<Microsoft.Maui.Controls.PanUpdatedEventArgs>
Microsoft.Maui.Controls.PanGestureRecognizer.TouchPoints.get -> int
Microsoft.Maui.Controls.PanGestureRecognizer.TouchPoints.set -> void
Microsoft.Maui.Controls.PanUpdatedEventArgs
Microsoft.Maui.Controls.PanUpdatedEventArgs.GestureId.get -> int
Microsoft.Maui.Controls.PanUpdatedEventArgs.PanUpdatedEventArgs(Microsoft.Maui.GestureStatus type, int gestureId, double totalx, double totaly) -> void
Microsoft.Maui.Controls.PanUpdatedEventArgs.PanUpdatedEventArgs(Microsoft.Maui.GestureStatus type, int gestureId) -> void
Microsoft.Maui.Controls.PanUpdatedEventArgs.StatusType.get -> Microsoft.Maui.GestureStatus
Microsoft.Maui.Controls.PanUpdatedEventArgs.TotalX.get -> double
Microsoft.Maui.Controls.PanUpdatedEventArgs.TotalY.get -> double
Microsoft.Maui.Controls.ParentChangingEventArgs
Microsoft.Maui.Controls.Picker
Microsoft.Maui.Controls.Picker.CharacterSpacing.get -> double
Microsoft.Maui.Controls.Picker.CharacterSpacing.set -> void
Microsoft.Maui.Controls.Picker.FontAttributes.get -> Microsoft.Maui.Controls.FontAttributes
Microsoft.Maui.Controls.Picker.FontAttributes.set -> void
Microsoft.Maui.Controls.Picker.FontAutoScalingEnabled.get -> bool
Microsoft.Maui.Controls.Picker.FontAutoScalingEnabled.set -> void
Microsoft.Maui.Controls.Picker.FontSize.get -> double
Microsoft.Maui.Controls.Picker.FontSize.set -> void
Microsoft.Maui.Controls.Picker.HorizontalTextAlignment.get -> Microsoft.Maui.TextAlignment
Microsoft.Maui.Controls.Picker.HorizontalTextAlignment.set -> void
Microsoft.Maui.Controls.Picker.Picker() -> void
Microsoft.Maui.Controls.Picker.SelectedIndex.get -> int
Microsoft.Maui.Controls.Picker.SelectedIndex.set -> void
Microsoft.Maui.Controls.Picker.SelectedIndexChanged -> System.EventHandler
Microsoft.Maui.Controls.Picker.VerticalTextAlignment.get -> Microsoft.Maui.TextAlignment
Microsoft.Maui.Controls.Picker.VerticalTextAlignment.set -> void
Microsoft.Maui.Controls.PinchGestureRecognizer
Microsoft.Maui.Controls.PinchGestureRecognizer.PinchGestureRecognizer() -> void
Microsoft.Maui.Controls.PinchGestureRecognizer.PinchUpdated -> System.EventHandler<Microsoft.Maui.Controls.PinchGestureUpdatedEventArgs>
Microsoft.Maui.Controls.PinchGestureUpdatedEventArgs
Microsoft.Maui.Controls.PinchGestureUpdatedEventArgs.PinchGestureUpdatedEventArgs(Microsoft.Maui.GestureStatus status, double scale, Microsoft.Maui.Graphics.Point origin) -> void
Microsoft.Maui.Controls.PinchGestureUpdatedEventArgs.PinchGestureUpdatedEventArgs(Microsoft.Maui.GestureStatus status) -> void
Microsoft.Maui.Controls.PinchGestureUpdatedEventArgs.Scale.get -> double
Microsoft.Maui.Controls.PinchGestureUpdatedEventArgs.ScaleOrigin.get -> Microsoft.Maui.Graphics.Point
Microsoft.Maui.Controls.PinchGestureUpdatedEventArgs.Status.get -> Microsoft.Maui.GestureStatus
Microsoft.Maui.Controls.Platform.Android.ImeActionExtensions
Microsoft.Maui.Controls.Platform.ApplicationExtensions
Microsoft.Maui.Controls.Platform.BottomNavigationViewUtils
Microsoft.Maui.Controls.Platform.BrushExtensions
Microsoft.Maui.Controls.Platform.ButtonExtensions
Microsoft.Maui.Controls.Platform.ColorChangeRevealDrawable
Microsoft.Maui.Controls.Platform.Compatibility.ContainerView
Microsoft.Maui.Controls.Platform.Compatibility.ContainerView.MatchHeight.get -> bool
Microsoft.Maui.Controls.Platform.Compatibility.ContainerView.MatchHeight.set -> void
Microsoft.Maui.Controls.Platform.Compatibility.ContainerView.MatchWidth.get -> bool
Microsoft.Maui.Controls.Platform.Compatibility.ContainerView.MatchWidth.set -> void
Microsoft.Maui.Controls.Platform.Compatibility.CustomFrameLayout
Microsoft.Maui.Controls.Platform.Compatibility.CustomFrameLayout.CustomFrameLayout(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Microsoft.Maui.Controls.Platform.Compatibility.IShellBottomNavViewAppearanceTracker
Microsoft.Maui.Controls.Platform.Compatibility.IShellContext
Microsoft.Maui.Controls.Platform.Compatibility.IShellFlyoutContentRenderer
Microsoft.Maui.Controls.Platform.Compatibility.IShellFlyoutRenderer
Microsoft.Maui.Controls.Platform.Compatibility.IShellItemRenderer
Microsoft.Maui.Controls.Platform.Compatibility.IShellItemRenderer.Destroyed -> System.EventHandler
Microsoft.Maui.Controls.Platform.Compatibility.IShellObservableFragment
Microsoft.Maui.Controls.Platform.Compatibility.IShellObservableFragment.AnimationFinished -> System.EventHandler
Microsoft.Maui.Controls.Platform.Compatibility.IShellSearchView
Microsoft.Maui.Controls.Platform.Compatibility.IShellSearchView.LoadView() -> void
Microsoft.Maui.Controls.Platform.Compatibility.IShellSearchView.SearchConfirmed -> System.EventHandler
Microsoft.Maui.Controls.Platform.Compatibility.IShellSectionRenderer
Microsoft.Maui.Controls.Platform.Compatibility.IShellTabLayoutAppearanceTracker
Microsoft.Maui.Controls.Platform.Compatibility.IShellToolbarAppearanceTracker
Microsoft.Maui.Controls.Platform.Compatibility.IShellToolbarTracker
Microsoft.Maui.Controls.Platform.Compatibility.IShellToolbarTracker.CanNavigateBack.get -> bool
Microsoft.Maui.Controls.Platform.Compatibility.IShellToolbarTracker.CanNavigateBack.set -> void
Microsoft.Maui.Controls.Platform.Compatibility.SearchHandlerAppearanceTracker
Microsoft.Maui.Controls.Platform.Compatibility.SearchHandlerAppearanceTracker.Dispose() -> void
Microsoft.Maui.Controls.Platform.Compatibility.ShellBottomNavViewAppearanceTracker
Microsoft.Maui.Controls.Platform.Compatibility.ShellBottomNavViewAppearanceTracker.Dispose() -> void
Microsoft.Maui.Controls.Platform.Compatibility.ShellContentFragment
Microsoft.Maui.Controls.Platform.Compatibility.ShellContentFragment.AnimationFinished -> System.EventHandler
Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter
Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.AdapterListItem
Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.AdapterListItem.DrawTopLine.get -> bool
Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.AdapterListItem.DrawTopLine.set -> void
Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.AdapterListItem.Index.get -> int
Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.ElementViewHolder
Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRenderer
Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRenderer.SlideOffset.get -> float
Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer
Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.HeaderContainer
Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer
Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase
Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.Destroyed -> System.EventHandler
Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchView
Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchView.SearchConfirmed -> System.EventHandler
Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchViewAdapter
Microsoft.Maui.Controls.Platform.Compatibility.ShellSectionRenderer
Microsoft.Maui.Controls.Platform.Compatibility.ShellSectionRenderer.AnimationFinished -> System.EventHandler
Microsoft.Maui.Controls.Platform.Compatibility.ShellTabLayoutAppearanceTracker
Microsoft.Maui.Controls.Platform.Compatibility.ShellTabLayoutAppearanceTracker.Dispose() -> void
Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarAppearanceTracker
Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarAppearanceTracker.Dispose() -> void
Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker
Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.CanNavigateBack.get -> bool
Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.CanNavigateBack.set -> void
Microsoft.Maui.Controls.Platform.ControlsAccessibilityDelegate
Microsoft.Maui.Controls.Platform.ControlsAccessibilityDelegate.ControlsAccessibilityDelegate(AndroidX.Core.View.AccessibilityDelegateCompat? originalDelegate, Microsoft.Maui.IViewHandler! viewHandler) -> void
Microsoft.Maui.Controls.Platform.ControlsAccessibilityDelegate.Handler.get -> Microsoft.Maui.IViewHandler!
Microsoft.Maui.Controls.Platform.EditTextExtensions
Microsoft.Maui.Controls.Platform.ElementChangedEventArgs<TElement>
Microsoft.Maui.Controls.Platform.ElementChangedEventArgs<TElement>.ElementChangedEventArgs(TElement? oldElement, TElement? newElement) -> void
Microsoft.Maui.Controls.Platform.ElementChangedEventArgs<TElement>.NewElement.get -> TElement?
Microsoft.Maui.Controls.Platform.ElementChangedEventArgs<TElement>.OldElement.get -> TElement?
Microsoft.Maui.Controls.Platform.ElevationHelper
Microsoft.Maui.Controls.Platform.FontExtensions
Microsoft.Maui.Controls.Platform.FormattedStringExtensions
Microsoft.Maui.Controls.Platform.GenericAnimatorListener
Microsoft.Maui.Controls.Platform.GenericAnimatorListener.GenericAnimatorListener() -> void
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.GradientShader
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.GradientShader.GradientShader() -> void
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.GradientStrokeDrawable() -> void
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.LinearGradientShader
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.LinearGradientShader.LinearGradientShader() -> void
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.LinearGradientShader.X1.get -> float
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.LinearGradientShader.X1.set -> void
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.LinearGradientShader.X2.get -> float
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.LinearGradientShader.X2.set -> void
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.LinearGradientShader.Y1.get -> float
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.LinearGradientShader.Y1.set -> void
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.LinearGradientShader.Y2.get -> float
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.LinearGradientShader.Y2.set -> void
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.RadialGradientShader
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.RadialGradientShader.CenterX.get -> float
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.RadialGradientShader.CenterX.set -> void
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.RadialGradientShader.CenterY.get -> float
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.RadialGradientShader.CenterY.set -> void
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.RadialGradientShader.RadialGradientShader() -> void
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.RadialGradientShader.Radius.get -> float
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.RadialGradientShader.Radius.set -> void
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.SetColor(Android.Graphics.Color backgroundColor) -> void
Microsoft.Maui.Controls.Platform.GradientStrokeDrawable.SetStroke(int strokeWidth, Android.Graphics.Color strokeColor) -> void
Microsoft.Maui.Controls.Platform.ITabStop
Microsoft.Maui.Controls.Platform.PageExtensions
Microsoft.Maui.Controls.Platform.PlatformConfigurationExtensions
Microsoft.Maui.Controls.Platform.PlatformEffect
Microsoft.Maui.Controls.Platform.PlatformEffect.PlatformEffect() -> void
Microsoft.Maui.Controls.Platform.RecyclerViewExtensions
Microsoft.Maui.Controls.Platform.SearchViewExtensions
Microsoft.Maui.Controls.Platform.SemanticExtensions
Microsoft.Maui.Controls.Platform.ShapesExtensions
Microsoft.Maui.Controls.Platform.TextViewExtensions
Microsoft.Maui.Controls.Platform.ViewExtensions
Microsoft.Maui.Controls.Platform.VisualElementChangedEventArgs
Microsoft.Maui.Controls.Platform.VisualElementChangedEventArgs.VisualElementChangedEventArgs(Microsoft.Maui.Controls.VisualElement? oldElement, Microsoft.Maui.Controls.VisualElement? newElement) -> void
Microsoft.Maui.Controls.Platform.WebViewExtensions
Microsoft.Maui.Controls.PlatformBehavior<TView, TPlatformView>
Microsoft.Maui.Controls.PlatformBehavior<TView, TPlatformView>.PlatformBehavior() -> void
Microsoft.Maui.Controls.PlatformBehavior<TView>
Microsoft.Maui.Controls.PlatformBehavior<TView>.PlatformBehavior() -> void
Microsoft.Maui.Controls.PlatformConfiguration.Android
Microsoft.Maui.Controls.PlatformConfiguration.Android.Android() -> void
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.Application
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.AppCompat.NavigationPage
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Application
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Button
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.Entry
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImageButton
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.Default = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.Done = 6 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.Go = 2 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.ImeMaskAction = 255 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.Next = 5 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.NoAccessoryAction = 536870912 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.NoExtractUi = 268435456 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.NoFullscreen = 33554432 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.None = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.NoPersonalizedLearning = 16777216 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.Previous = 7 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.Search = 3 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags.Send = 4 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ListView
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.MixedContentHandling
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.MixedContentHandling.AlwaysAllow = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.MixedContentHandling
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.MixedContentHandling.CompatibilityMode = 2 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.MixedContentHandling
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.MixedContentHandling.NeverAllow = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.MixedContentHandling
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ShellItem
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.SwipeView
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.TabbedPage
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ToolbarPlacement
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ToolbarPlacement.Bottom = 2 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ToolbarPlacement
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ToolbarPlacement.Default = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ToolbarPlacement
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ToolbarPlacement.Top = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ToolbarPlacement
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ViewCell
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.VisualElement
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WebView
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WindowSoftInputModeAdjust
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WindowSoftInputModeAdjust.Pan = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WindowSoftInputModeAdjust
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WindowSoftInputModeAdjust.Resize = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WindowSoftInputModeAdjust
Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WindowSoftInputModeAdjust.Unspecified = 2 -> Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.WindowSoftInputModeAdjust
Microsoft.Maui.Controls.PlatformConfiguration.GTK
Microsoft.Maui.Controls.PlatformConfiguration.GTK.GTK() -> void
Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.BoxView
Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.NavigationPage
Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabbedPage
Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabPosition
Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabPosition.Bottom = 2 -> Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabPosition
Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabPosition.Default = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabPosition
Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabPosition.Top = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.GTKSpecific.TabPosition
Microsoft.Maui.Controls.PlatformConfiguration.iOS
Microsoft.Maui.Controls.PlatformConfiguration.iOS.iOS() -> void
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Application
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.BlurEffectStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.BlurEffectStyle.Dark = 3 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.BlurEffectStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.BlurEffectStyle.ExtraLight = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.BlurEffectStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.BlurEffectStyle.Light = 2 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.BlurEffectStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.BlurEffectStyle.None = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.BlurEffectStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Cell
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.DatePicker
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Entry
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.FlyoutPage
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.GroupHeaderStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.GroupHeaderStyle.Grouped = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.GroupHeaderStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.GroupHeaderStyle.Plain = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.GroupHeaderStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.LargeTitleDisplayMode
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.LargeTitleDisplayMode.Always = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.LargeTitleDisplayMode
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.LargeTitleDisplayMode.Automatic = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.LargeTitleDisplayMode
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.LargeTitleDisplayMode.Never = 2 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.LargeTitleDisplayMode
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ListView
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.NavigationPage
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Page
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Picker
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.ScrollView
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SearchBar
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SeparatorStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SeparatorStyle.Default = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SeparatorStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SeparatorStyle.FullWidth = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SeparatorStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.Slider
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarHiddenMode
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarHiddenMode.Default = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarHiddenMode
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarHiddenMode.False = 2 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarHiddenMode
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarHiddenMode.True = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarHiddenMode
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarTextColorMode
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarTextColorMode.DoNotAdjust = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarTextColorMode
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarTextColorMode.MatchNavigationBarTextLuminosity = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.StatusBarTextColorMode
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.SwipeView
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TabbedPage
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TimePicker
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TranslucencyMode
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TranslucencyMode.Default = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TranslucencyMode
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TranslucencyMode.Opaque = 2 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TranslucencyMode
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TranslucencyMode.Translucent = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.TranslucencyMode
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle.Automatic = 2 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle.FormSheet = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle.FullScreen = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle.OverFullScreen = 3 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle.PageSheet = 4 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIModalPresentationStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UISearchBarStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UISearchBarStyle.Default = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UISearchBarStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UISearchBarStyle.Minimal = 2 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UISearchBarStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UISearchBarStyle.Prominent = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UISearchBarStyle
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIStatusBarAnimation
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIStatusBarAnimation.Fade = 2 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIStatusBarAnimation
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIStatusBarAnimation.None = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIStatusBarAnimation
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIStatusBarAnimation.Slide = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UIStatusBarAnimation
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode.Immediately = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode.WhenFinished = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.UpdateMode
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.ShadowEffect
Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific.VisualElement.ShadowEffect.ShadowEffect() -> void
Microsoft.Maui.Controls.PlatformConfiguration.macOS
Microsoft.Maui.Controls.PlatformConfiguration.macOS.macOS() -> void
Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationPage
Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle
Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle.Crossfade = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle
Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle.None = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle
Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle.SlideBackward = 7 -> Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle
Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle.SlideDown = 3 -> Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle
Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle.SlideForward = 6 -> Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle
Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle.SlideLeft = 4 -> Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle
Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle.SlideRight = 5 -> Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle
Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle.SlideUp = 2 -> Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.NavigationTransitionStyle
Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.Page
Microsoft.Maui.Controls.PlatformConfiguration.macOSSpecific.TabbedPage
Microsoft.Maui.Controls.PlatformConfiguration.Tizen
Microsoft.Maui.Controls.PlatformConfiguration.Tizen.Tizen() -> void
Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Application
Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ButtonStyle
Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Entry
Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FocusDirection
Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.FontWeight
Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Image
Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ItemsView
Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Label
Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.NavigationPage
Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Page
Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ProgressBar
Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ProgressBarStyle
Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.ScrollView
Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.Switch
Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.SwitchStyle
Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.TabbedPageStyle
Microsoft.Maui.Controls.PlatformConfiguration.TizenSpecific.VisualElement
Microsoft.Maui.Controls.PlatformConfiguration.Windows
Microsoft.Maui.Controls.PlatformConfiguration.Windows.Windows() -> void
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Application
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.CollapseStyle
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.CollapseStyle.Full = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.CollapseStyle
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.CollapseStyle.Partial = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.CollapseStyle
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.FlyoutPage
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.InputView
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Label
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListView
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListViewSelectionMode
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListViewSelectionMode.Accessible = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListViewSelectionMode
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListViewSelectionMode.Inaccessible = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ListViewSelectionMode
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.Page
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.RefreshPullDirection
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.RefreshPullDirection.BottomToTop = 3 -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.RefreshPullDirection
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.RefreshPullDirection.LeftToRight = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.RefreshPullDirection
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.RefreshPullDirection.RightToLeft = 2 -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.RefreshPullDirection
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.RefreshPullDirection.TopToBottom = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.RefreshView.RefreshPullDirection
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.SearchBar
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.TabbedPage
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ToolbarPlacement
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ToolbarPlacement.Bottom = 2 -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ToolbarPlacement
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ToolbarPlacement.Default = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ToolbarPlacement
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ToolbarPlacement.Top = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.ToolbarPlacement
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.VisualElement
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebView
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebViewExecutionMode
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebViewExecutionMode.SameThread = 0 -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebViewExecutionMode
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebViewExecutionMode.SeparateProcess = 2 -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebViewExecutionMode
Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebViewExecutionMode.SeparateThread = 1 -> Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific.WebViewExecutionMode
Microsoft.Maui.Controls.PlatformDragEventArgs
Microsoft.Maui.Controls.PlatformDragEventArgs.DragEvent.get -> Android.Views.DragEvent!
Microsoft.Maui.Controls.PlatformDragEventArgs.Sender.get -> Android.Views.View!
Microsoft.Maui.Controls.PlatformDragStartingEventArgs
Microsoft.Maui.Controls.PlatformDragStartingEventArgs.MotionEvent.get -> Android.Views.MotionEvent!
Microsoft.Maui.Controls.PlatformDragStartingEventArgs.Sender.get -> Android.Views.View!
Microsoft.Maui.Controls.PlatformDragStartingEventArgs.SetClipData(Android.Content.ClipData! clipData) -> void
Microsoft.Maui.Controls.PlatformDragStartingEventArgs.SetDragFlags(Android.Views.DragFlags dragFlags) -> void
Microsoft.Maui.Controls.PlatformDragStartingEventArgs.SetDragShadowBuilder(Android.Views.View.DragShadowBuilder! dragShadowBuilder) -> void
Microsoft.Maui.Controls.PlatformDragStartingEventArgs.SetLocalData(Java.Lang.Object! localData) -> void
Microsoft.Maui.Controls.PlatformDropCompletedEventArgs
Microsoft.Maui.Controls.PlatformDropCompletedEventArgs.DragEvent.get -> Android.Views.DragEvent!
Microsoft.Maui.Controls.PlatformDropCompletedEventArgs.Sender.get -> Android.Views.View!
Microsoft.Maui.Controls.PlatformDropEventArgs
Microsoft.Maui.Controls.PlatformDropEventArgs.DragEvent.get -> Android.Views.DragEvent!
Microsoft.Maui.Controls.PlatformDropEventArgs.Sender.get -> Android.Views.View!
Microsoft.Maui.Controls.PlatformEffect<TContainer, TControl>.PlatformEffect() -> void
Microsoft.Maui.Controls.PlatformPointerEventArgs
Microsoft.Maui.Controls.PlatformPointerEventArgs.MotionEvent.get -> Android.Views.MotionEvent!
Microsoft.Maui.Controls.PlatformPointerEventArgs.Sender.get -> Android.Views.View!
Microsoft.Maui.Controls.PointCollection
Microsoft.Maui.Controls.PointCollection.PointCollection() -> void
Microsoft.Maui.Controls.PointerEventArgs
Microsoft.Maui.Controls.PointerEventArgs.PlatformArgs.get -> Microsoft.Maui.Controls.PlatformPointerEventArgs?
Microsoft.Maui.Controls.PointerEventArgs.PointerEventArgs() -> void
Microsoft.Maui.Controls.PointerGestureRecognizer
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerEntered -> System.EventHandler<Microsoft.Maui.Controls.PointerEventArgs!>?
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerEnteredCommand.get -> System.Windows.Input.ICommand!
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerEnteredCommand.set -> void
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerEnteredCommandParameter.get -> object!
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerEnteredCommandParameter.set -> void
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerExited -> System.EventHandler<Microsoft.Maui.Controls.PointerEventArgs!>?
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerExitedCommand.get -> System.Windows.Input.ICommand!
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerExitedCommand.set -> void
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerExitedCommandParameter.get -> object!
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerExitedCommandParameter.set -> void
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerGestureRecognizer() -> void
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerMoved -> System.EventHandler<Microsoft.Maui.Controls.PointerEventArgs!>?
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerMovedCommand.get -> System.Windows.Input.ICommand!
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerMovedCommand.set -> void
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerMovedCommandParameter.get -> object!
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerMovedCommandParameter.set -> void
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerPressed -> System.EventHandler<Microsoft.Maui.Controls.PointerEventArgs!>?
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerPressedCommand.get -> System.Windows.Input.ICommand!
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerPressedCommand.set -> void
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerPressedCommandParameter.get -> object!
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerPressedCommandParameter.set -> void
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerReleased -> System.EventHandler<Microsoft.Maui.Controls.PointerEventArgs!>?
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerReleasedCommand.get -> System.Windows.Input.ICommand!
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerReleasedCommand.set -> void
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerReleasedCommandParameter.get -> object!
Microsoft.Maui.Controls.PointerGestureRecognizer.PointerReleasedCommandParameter.set -> void
Microsoft.Maui.Controls.PoppedToRootEventArgs
Microsoft.Maui.Controls.PositionChangedEventArgs
Microsoft.Maui.Controls.PositionChangedEventArgs.CurrentPosition.get -> int
Microsoft.Maui.Controls.PositionChangedEventArgs.PreviousPosition.get -> int
Microsoft.Maui.Controls.PresentationMode
Microsoft.Maui.Controls.PresentationMode.Animated = 2 -> Microsoft.Maui.Controls.PresentationMode
Microsoft.Maui.Controls.PresentationMode.Modal = 4 -> Microsoft.Maui.Controls.PresentationMode
Microsoft.Maui.Controls.PresentationMode.ModalAnimated = Microsoft.Maui.Controls.PresentationMode.Animated | Microsoft.Maui.Controls.PresentationMode.Modal -> Microsoft.Maui.Controls.PresentationMode
Microsoft.Maui.Controls.PresentationMode.ModalNotAnimated = Microsoft.Maui.Controls.PresentationMode.NotAnimated | Microsoft.Maui.Controls.PresentationMode.Modal -> Microsoft.Maui.Controls.PresentationMode
Microsoft.Maui.Controls.PresentationMode.NotAnimated = 1 -> Microsoft.Maui.Controls.PresentationMode
Microsoft.Maui.Controls.ProgressBar
Microsoft.Maui.Controls.ProgressBar.Progress.get -> double
Microsoft.Maui.Controls.ProgressBar.Progress.set -> void
Microsoft.Maui.Controls.ProgressBar.ProgressBar() -> void
Microsoft.Maui.Controls.PropertyChangingEventArgs
Microsoft.Maui.Controls.PropertyChangingEventHandler
Microsoft.Maui.Controls.PropertyCondition
Microsoft.Maui.Controls.PropertyCondition.PropertyCondition() -> void
Microsoft.Maui.Controls.QueryPropertyAttribute
Microsoft.Maui.Controls.RadialGradientBrush
Microsoft.Maui.Controls.RadialGradientBrush.Center.get -> Microsoft.Maui.Graphics.Point
Microsoft.Maui.Controls.RadialGradientBrush.Center.set -> void
Microsoft.Maui.Controls.RadialGradientBrush.RadialGradientBrush() -> void
Microsoft.Maui.Controls.RadialGradientBrush.Radius.get -> double
Microsoft.Maui.Controls.RadialGradientBrush.Radius.set -> void
Microsoft.Maui.Controls.RadioButton
Microsoft.Maui.Controls.RadioButton.BorderWidth.get -> double
Microsoft.Maui.Controls.RadioButton.BorderWidth.set -> void
Microsoft.Maui.Controls.RadioButton.CharacterSpacing.get -> double
Microsoft.Maui.Controls.RadioButton.CharacterSpacing.set -> void
Microsoft.Maui.Controls.RadioButton.CheckedChanged -> System.EventHandler<Microsoft.Maui.Controls.CheckedChangedEventArgs>
Microsoft.Maui.Controls.RadioButton.CornerRadius.get -> int
Microsoft.Maui.Controls.RadioButton.CornerRadius.set -> void
Microsoft.Maui.Controls.RadioButton.FontAttributes.get -> Microsoft.Maui.Controls.FontAttributes
Microsoft.Maui.Controls.RadioButton.FontAttributes.set -> void
Microsoft.Maui.Controls.RadioButton.FontAutoScalingEnabled.get -> bool
Microsoft.Maui.Controls.RadioButton.FontAutoScalingEnabled.set -> void
Microsoft.Maui.Controls.RadioButton.FontSize.get -> double
Microsoft.Maui.Controls.RadioButton.FontSize.set -> void
Microsoft.Maui.Controls.RadioButton.IsChecked.get -> bool
Microsoft.Maui.Controls.RadioButton.IsChecked.set -> void
Microsoft.Maui.Controls.RadioButton.RadioButton() -> void
Microsoft.Maui.Controls.RadioButton.TextTransform.get -> Microsoft.Maui.TextTransform
Microsoft.Maui.Controls.RadioButton.TextTransform.set -> void
Microsoft.Maui.Controls.RadioButtonGroup
Microsoft.Maui.Controls.ReferenceTypeConverter
Microsoft.Maui.Controls.ReferenceTypeConverter.ReferenceTypeConverter() -> void
Microsoft.Maui.Controls.RefreshView
Microsoft.Maui.Controls.RefreshView.IsRefreshing.get -> bool
Microsoft.Maui.Controls.RefreshView.IsRefreshing.set -> void
Microsoft.Maui.Controls.RefreshView.Refreshing -> System.EventHandler
Microsoft.Maui.Controls.RefreshView.RefreshView() -> void
Microsoft.Maui.Controls.Region
Microsoft.Maui.Controls.Region.Contains(double x, double y) -> bool
Microsoft.Maui.Controls.Region.Contains(Microsoft.Maui.Graphics.Point pt) -> bool
Microsoft.Maui.Controls.Region.Deflate() -> Microsoft.Maui.Controls.Region
Microsoft.Maui.Controls.Region.Equals(Microsoft.Maui.Controls.Region other) -> bool
Microsoft.Maui.Controls.Region.Inflate(double left, double top, double right, double bottom) -> Microsoft.Maui.Controls.Region
Microsoft.Maui.Controls.Region.Inflate(double size) -> Microsoft.Maui.Controls.Region
Microsoft.Maui.Controls.Region.Region() -> void
Microsoft.Maui.Controls.RelativeBindingSource
Microsoft.Maui.Controls.RelativeBindingSource.AncestorLevel.get -> int
Microsoft.Maui.Controls.RelativeBindingSource.Mode.get -> Microsoft.Maui.Controls.RelativeBindingSourceMode
Microsoft.Maui.Controls.RelativeBindingSourceMode
Microsoft.Maui.Controls.RelativeBindingSourceMode.FindAncestor = 3 -> Microsoft.Maui.Controls.RelativeBindingSourceMode
Microsoft.Maui.Controls.RelativeBindingSourceMode.FindAncestorBindingContext = 4 -> Microsoft.Maui.Controls.RelativeBindingSourceMode
Microsoft.Maui.Controls.RelativeBindingSourceMode.Self = 2 -> Microsoft.Maui.Controls.RelativeBindingSourceMode
Microsoft.Maui.Controls.RelativeBindingSourceMode.TemplatedParent = 1 -> Microsoft.Maui.Controls.RelativeBindingSourceMode
Microsoft.Maui.Controls.RenderWithAttribute
Microsoft.Maui.Controls.ReorderableItemsView
Microsoft.Maui.Controls.ReorderableItemsView.CanMixGroups.get -> bool
Microsoft.Maui.Controls.ReorderableItemsView.CanMixGroups.set -> void
Microsoft.Maui.Controls.ReorderableItemsView.CanReorderItems.get -> bool
Microsoft.Maui.Controls.ReorderableItemsView.CanReorderItems.set -> void
Microsoft.Maui.Controls.ReorderableItemsView.ReorderableItemsView() -> void
Microsoft.Maui.Controls.ReorderableItemsView.ReorderCompleted -> System.EventHandler
Microsoft.Maui.Controls.ReorderableItemsView.SendReorderCompleted() -> void
Microsoft.Maui.Controls.ResolutionGroupNameAttribute
Microsoft.Maui.Controls.Resource
Microsoft.Maui.Controls.Resource.Resource() -> void
Microsoft.Maui.Controls.ResourceDictionary
Microsoft.Maui.Controls.ResourceDictionary.Clear() -> void
Microsoft.Maui.Controls.ResourceDictionary.Count.get -> int
Microsoft.Maui.Controls.ResourceDictionary.RDSourceTypeConverter
Microsoft.Maui.Controls.ResourceDictionary.RDSourceTypeConverter.RDSourceTypeConverter() -> void
Microsoft.Maui.Controls.ResourceDictionary.ResourceDictionary() -> void
Microsoft.Maui.Controls.RouteFactory
Microsoft.Maui.Controls.RouteFactory.RouteFactory() -> void
Microsoft.Maui.Controls.Routing
Microsoft.Maui.Controls.RoutingEffect
Microsoft.Maui.Controls.RoutingEffect.RoutingEffect() -> void
Microsoft.Maui.Controls.RowDefinition
Microsoft.Maui.Controls.RowDefinition.Height.get -> Microsoft.Maui.GridLength
Microsoft.Maui.Controls.RowDefinition.Height.set -> void
Microsoft.Maui.Controls.RowDefinition.RowDefinition() -> void
Microsoft.Maui.Controls.RowDefinition.RowDefinition(Microsoft.Maui.GridLength height) -> void
Microsoft.Maui.Controls.RowDefinition.SizeChanged -> System.EventHandler
Microsoft.Maui.Controls.RowDefinitionCollection
Microsoft.Maui.Controls.RowDefinitionCollection.RowDefinitionCollection() -> void
Microsoft.Maui.Controls.RowDefinitionCollectionTypeConverter
Microsoft.Maui.Controls.RowDefinitionCollectionTypeConverter.RowDefinitionCollectionTypeConverter() -> void
Microsoft.Maui.Controls.ScrolledEventArgs
Microsoft.Maui.Controls.ScrolledEventArgs.ScrolledEventArgs(double x, double y) -> void
Microsoft.Maui.Controls.ScrolledEventArgs.ScrollX.get -> double
Microsoft.Maui.Controls.ScrolledEventArgs.ScrollY.get -> double
Microsoft.Maui.Controls.ScrollMode
Microsoft.Maui.Controls.ScrollMode.Auto = 2 -> Microsoft.Maui.Controls.ScrollMode
Microsoft.Maui.Controls.ScrollMode.Disabled = 0 -> Microsoft.Maui.Controls.ScrollMode
Microsoft.Maui.Controls.ScrollMode.Enabled = 1 -> Microsoft.Maui.Controls.ScrollMode
Microsoft.Maui.Controls.ScrollToMode
Microsoft.Maui.Controls.ScrollToMode.Element = 0 -> Microsoft.Maui.Controls.ScrollToMode
Microsoft.Maui.Controls.ScrollToMode.Position = 1 -> Microsoft.Maui.Controls.ScrollToMode
Microsoft.Maui.Controls.ScrollToPosition
Microsoft.Maui.Controls.ScrollToPosition.Center = 2 -> Microsoft.Maui.Controls.ScrollToPosition
Microsoft.Maui.Controls.ScrollToPosition.End = 3 -> Microsoft.Maui.Controls.ScrollToPosition
Microsoft.Maui.Controls.ScrollToPosition.MakeVisible = 0 -> Microsoft.Maui.Controls.ScrollToPosition
Microsoft.Maui.Controls.ScrollToPosition.Start = 1 -> Microsoft.Maui.Controls.ScrollToPosition
Microsoft.Maui.Controls.ScrollToRequestedEventArgs
Microsoft.Maui.Controls.ScrollToRequestedEventArgs.Mode.get -> Microsoft.Maui.Controls.ScrollToMode
Microsoft.Maui.Controls.ScrollToRequestedEventArgs.Position.get -> Microsoft.Maui.Controls.ScrollToPosition
Microsoft.Maui.Controls.ScrollToRequestedEventArgs.ScrollX.get -> double
Microsoft.Maui.Controls.ScrollToRequestedEventArgs.ScrollY.get -> double
Microsoft.Maui.Controls.ScrollToRequestedEventArgs.ShouldAnimate.get -> bool
Microsoft.Maui.Controls.ScrollToRequestEventArgs
Microsoft.Maui.Controls.ScrollToRequestEventArgs.GroupIndex.get -> int
Microsoft.Maui.Controls.ScrollToRequestEventArgs.Index.get -> int
Microsoft.Maui.Controls.ScrollToRequestEventArgs.IsAnimated.get -> bool
Microsoft.Maui.Controls.ScrollToRequestEventArgs.Mode.get -> Microsoft.Maui.Controls.ScrollToMode
Microsoft.Maui.Controls.ScrollToRequestEventArgs.ScrollToPosition.get -> Microsoft.Maui.Controls.ScrollToPosition
Microsoft.Maui.Controls.ScrollToRequestEventArgs.ScrollToRequestEventArgs(int index, int groupIndex, Microsoft.Maui.Controls.ScrollToPosition scrollToPosition, bool isAnimated) -> void
Microsoft.Maui.Controls.ScrollView
Microsoft.Maui.Controls.ScrollView.ContentSize.get -> Microsoft.Maui.Graphics.Size
Microsoft.Maui.Controls.ScrollView.HorizontalScrollBarVisibility.get -> Microsoft.Maui.ScrollBarVisibility
Microsoft.Maui.Controls.ScrollView.HorizontalScrollBarVisibility.set -> void
Microsoft.Maui.Controls.ScrollView.LayoutAreaOverride.get -> Microsoft.Maui.Graphics.Rect
Microsoft.Maui.Controls.ScrollView.LayoutAreaOverride.set -> void
Microsoft.Maui.Controls.ScrollView.Orientation.get -> Microsoft.Maui.ScrollOrientation
Microsoft.Maui.Controls.ScrollView.Orientation.set -> void
Microsoft.Maui.Controls.ScrollView.Scrolled -> System.EventHandler<Microsoft.Maui.Controls.ScrolledEventArgs>
Microsoft.Maui.Controls.ScrollView.ScrollToRequested -> System.EventHandler<Microsoft.Maui.Controls.ScrollToRequestedEventArgs>
Microsoft.Maui.Controls.ScrollView.ScrollView() -> void
Microsoft.Maui.Controls.ScrollView.ScrollX.get -> double
Microsoft.Maui.Controls.ScrollView.ScrollY.get -> double
Microsoft.Maui.Controls.ScrollView.SendScrollFinished() -> void
Microsoft.Maui.Controls.ScrollView.SetScrolledPosition(double x, double y) -> void
Microsoft.Maui.Controls.ScrollView.VerticalScrollBarVisibility.get -> Microsoft.Maui.ScrollBarVisibility
Microsoft.Maui.Controls.ScrollView.VerticalScrollBarVisibility.set -> void
Microsoft.Maui.Controls.SearchBar
Microsoft.Maui.Controls.SearchBar.HorizontalTextAlignment.get -> Microsoft.Maui.TextAlignment
Microsoft.Maui.Controls.SearchBar.HorizontalTextAlignment.set -> void
Microsoft.Maui.Controls.SearchBar.OnSearchButtonPressed() -> void
Microsoft.Maui.Controls.SearchBar.SearchBar() -> void
Microsoft.Maui.Controls.SearchBar.SearchButtonPressed -> System.EventHandler
Microsoft.Maui.Controls.SearchBar.VerticalTextAlignment.get -> Microsoft.Maui.TextAlignment
Microsoft.Maui.Controls.SearchBar.VerticalTextAlignment.set -> void
Microsoft.Maui.Controls.SearchBoxVisibility
Microsoft.Maui.Controls.SearchBoxVisibility.Collapsible = 1 -> Microsoft.Maui.Controls.SearchBoxVisibility
Microsoft.Maui.Controls.SearchBoxVisibility.Expanded = 2 -> Microsoft.Maui.Controls.SearchBoxVisibility
Microsoft.Maui.Controls.SearchBoxVisibility.Hidden = 0 -> Microsoft.Maui.Controls.SearchBoxVisibility
Microsoft.Maui.Controls.SearchHandler
Microsoft.Maui.Controls.SearchHandler.CharacterSpacing.get -> double
Microsoft.Maui.Controls.SearchHandler.CharacterSpacing.set -> void
Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderEnabled.get -> bool
Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderEnabled.set -> void
Microsoft.Maui.Controls.SearchHandler.Focus() -> bool
Microsoft.Maui.Controls.SearchHandler.FocusChangeRequested -> System.EventHandler<Microsoft.Maui.Controls.VisualElement.FocusRequestArgs>
Microsoft.Maui.Controls.SearchHandler.Focused -> System.EventHandler<System.EventArgs>
Microsoft.Maui.Controls.SearchHandler.FontAttributes.get -> Microsoft.Maui.Controls.FontAttributes
Microsoft.Maui.Controls.SearchHandler.FontAttributes.set -> void
Microsoft.Maui.Controls.SearchHandler.FontAutoScalingEnabled.get -> bool
Microsoft.Maui.Controls.SearchHandler.FontAutoScalingEnabled.set -> void
Microsoft.Maui.Controls.SearchHandler.FontSize.get -> double
Microsoft.Maui.Controls.SearchHandler.FontSize.set -> void
Microsoft.Maui.Controls.SearchHandler.HorizontalTextAlignment.get -> Microsoft.Maui.TextAlignment
Microsoft.Maui.Controls.SearchHandler.HorizontalTextAlignment.set -> void
Microsoft.Maui.Controls.SearchHandler.IsFocused.get -> bool
Microsoft.Maui.Controls.SearchHandler.IsSearchEnabled.get -> bool
Microsoft.Maui.Controls.SearchHandler.IsSearchEnabled.set -> void
Microsoft.Maui.Controls.SearchHandler.SearchBoxVisibility.get -> Microsoft.Maui.Controls.SearchBoxVisibility
Microsoft.Maui.Controls.SearchHandler.SearchBoxVisibility.set -> void
Microsoft.Maui.Controls.SearchHandler.SearchHandler() -> void
Microsoft.Maui.Controls.SearchHandler.SetIsFocused(bool value) -> void
Microsoft.Maui.Controls.SearchHandler.ShowsResults.get -> bool
Microsoft.Maui.Controls.SearchHandler.ShowsResults.set -> void
Microsoft.Maui.Controls.SearchHandler.TextTransform.get -> Microsoft.Maui.TextTransform
Microsoft.Maui.Controls.SearchHandler.TextTransform.set -> void
Microsoft.Maui.Controls.SearchHandler.Unfocus() -> void
Microsoft.Maui.Controls.SearchHandler.Unfocused -> System.EventHandler<System.EventArgs>
Microsoft.Maui.Controls.SearchHandler.VerticalTextAlignment.get -> Microsoft.Maui.TextAlignment
Microsoft.Maui.Controls.SearchHandler.VerticalTextAlignment.set -> void
Microsoft.Maui.Controls.SelectableItemsView
Microsoft.Maui.Controls.SelectableItemsView.SelectableItemsView() -> void
Microsoft.Maui.Controls.SelectableItemsView.SelectionChanged -> System.EventHandler<Microsoft.Maui.Controls.SelectionChangedEventArgs>
Microsoft.Maui.Controls.SelectableItemsView.SelectionMode.get -> Microsoft.Maui.Controls.SelectionMode
Microsoft.Maui.Controls.SelectableItemsView.SelectionMode.set -> void
Microsoft.Maui.Controls.SelectedItemChangedEventArgs
Microsoft.Maui.Controls.SelectedItemChangedEventArgs.SelectedItemIndex.get -> int
Microsoft.Maui.Controls.SelectedPositionChangedEventArgs
Microsoft.Maui.Controls.SelectedPositionChangedEventArgs.SelectedPositionChangedEventArgs(int selectedPosition) -> void
Microsoft.Maui.Controls.SelectionChangedEventArgs
Microsoft.Maui.Controls.SelectionMode
Microsoft.Maui.Controls.SelectionMode.Multiple = 2 -> Microsoft.Maui.Controls.SelectionMode
Microsoft.Maui.Controls.SelectionMode.None = 0 -> Microsoft.Maui.Controls.SelectionMode
Microsoft.Maui.Controls.SelectionMode.Single = 1 -> Microsoft.Maui.Controls.SelectionMode
Microsoft.Maui.Controls.SemanticProperties
Microsoft.Maui.Controls.SemanticProperties.SemanticProperties() -> void
Microsoft.Maui.Controls.SeparatorVisibility
Microsoft.Maui.Controls.SeparatorVisibility.Default = 0 -> Microsoft.Maui.Controls.SeparatorVisibility
Microsoft.Maui.Controls.SeparatorVisibility.None = 1 -> Microsoft.Maui.Controls.SeparatorVisibility
Microsoft.Maui.Controls.Setter
Microsoft.Maui.Controls.Setter.Setter() -> void
Microsoft.Maui.Controls.SettersExtensions
Microsoft.Maui.Controls.Shadow
Microsoft.Maui.Controls.Shadow.Offset.get -> Microsoft.Maui.Graphics.Point
Microsoft.Maui.Controls.Shadow.Offset.set -> void
Microsoft.Maui.Controls.Shadow.Opacity.get -> float
Microsoft.Maui.Controls.Shadow.Opacity.set -> void
Microsoft.Maui.Controls.Shadow.Radius.get -> float
Microsoft.Maui.Controls.Shadow.Radius.set -> void
Microsoft.Maui.Controls.Shadow.Shadow() -> void
Microsoft.Maui.Controls.Shapes.ArcSegment
Microsoft.Maui.Controls.Shapes.ArcSegment.ArcSegment() -> void
Microsoft.Maui.Controls.Shapes.ArcSegment.ArcSegment(Microsoft.Maui.Graphics.Point point, Microsoft.Maui.Graphics.Size size, double rotationAngle, Microsoft.Maui.Controls.SweepDirection sweepDirection, bool isLargeArc) -> void
Microsoft.Maui.Controls.Shapes.ArcSegment.IsLargeArc.get -> bool
Microsoft.Maui.Controls.Shapes.ArcSegment.IsLargeArc.set -> void
Microsoft.Maui.Controls.Shapes.ArcSegment.Point.get -> Microsoft.Maui.Graphics.Point
Microsoft.Maui.Controls.Shapes.ArcSegment.Point.set -> void
Microsoft.Maui.Controls.Shapes.ArcSegment.RotationAngle.get -> double
Microsoft.Maui.Controls.Shapes.ArcSegment.RotationAngle.set -> void
Microsoft.Maui.Controls.Shapes.ArcSegment.Size.get -> Microsoft.Maui.Graphics.Size
Microsoft.Maui.Controls.Shapes.ArcSegment.Size.set -> void
Microsoft.Maui.Controls.Shapes.ArcSegment.SweepDirection.get -> Microsoft.Maui.Controls.SweepDirection
Microsoft.Maui.Controls.Shapes.ArcSegment.SweepDirection.set -> void
Microsoft.Maui.Controls.Shapes.BezierSegment
Microsoft.Maui.Controls.Shapes.BezierSegment.BezierSegment() -> void
Microsoft.Maui.Controls.Shapes.BezierSegment.BezierSegment(Microsoft.Maui.Graphics.Point point1, Microsoft.Maui.Graphics.Point point2, Microsoft.Maui.Graphics.Point point3) -> void
Microsoft.Maui.Controls.Shapes.BezierSegment.Point1.get -> Microsoft.Maui.Graphics.Point
Microsoft.Maui.Controls.Shapes.BezierSegment.Point1.set -> void
Microsoft.Maui.Controls.Shapes.BezierSegment.Point2.get -> Microsoft.Maui.Graphics.Point
Microsoft.Maui.Controls.Shapes.BezierSegment.Point2.set -> void
Microsoft.Maui.Controls.Shapes.BezierSegment.Point3.get -> Microsoft.Maui.Graphics.Point
Microsoft.Maui.Controls.Shapes.BezierSegment.Point3.set -> void
Microsoft.Maui.Controls.Shapes.CompositeTransform
Microsoft.Maui.Controls.Shapes.CompositeTransform.CenterX.get -> double
Microsoft.Maui.Controls.Shapes.CompositeTransform.CenterX.set -> void
Microsoft.Maui.Controls.Shapes.CompositeTransform.CenterY.get -> double
Microsoft.Maui.Controls.Shapes.CompositeTransform.CenterY.set -> void
Microsoft.Maui.Controls.Shapes.CompositeTransform.CompositeTransform() -> void
Microsoft.Maui.Controls.Shapes.CompositeTransform.Rotation.get -> double
Microsoft.Maui.Controls.Shapes.CompositeTransform.Rotation.set -> void
Microsoft.Maui.Controls.Shapes.CompositeTransform.ScaleX.get -> double
Microsoft.Maui.Controls.Shapes.CompositeTransform.ScaleX.set -> void
Microsoft.Maui.Controls.Shapes.CompositeTransform.ScaleY.get -> double
Microsoft.Maui.Controls.Shapes.CompositeTransform.ScaleY.set -> void
Microsoft.Maui.Controls.Shapes.CompositeTransform.SkewX.get -> double
Microsoft.Maui.Controls.Shapes.CompositeTransform.SkewX.set -> void
Microsoft.Maui.Controls.Shapes.CompositeTransform.SkewY.get -> double
Microsoft.Maui.Controls.Shapes.CompositeTransform.SkewY.set -> void
Microsoft.Maui.Controls.Shapes.CompositeTransform.TranslateX.get -> double
Microsoft.Maui.Controls.Shapes.CompositeTransform.TranslateX.set -> void
Microsoft.Maui.Controls.Shapes.CompositeTransform.TranslateY.get -> double
Microsoft.Maui.Controls.Shapes.CompositeTransform.TranslateY.set -> void
Microsoft.Maui.Controls.Shapes.Ellipse
Microsoft.Maui.Controls.Shapes.Ellipse.Ellipse() -> void
Microsoft.Maui.Controls.Shapes.EllipseGeometry
Microsoft.Maui.Controls.Shapes.EllipseGeometry.Center.get -> Microsoft.Maui.Graphics.Point
Microsoft.Maui.Controls.Shapes.EllipseGeometry.Center.set -> void
Microsoft.Maui.Controls.Shapes.EllipseGeometry.EllipseGeometry() -> void
Microsoft.Maui.Controls.Shapes.EllipseGeometry.EllipseGeometry(Microsoft.Maui.Graphics.Point center, double radiusX, double radiusY) -> void
Microsoft.Maui.Controls.Shapes.EllipseGeometry.RadiusX.get -> double
Microsoft.Maui.Controls.Shapes.EllipseGeometry.RadiusX.set -> void
Microsoft.Maui.Controls.Shapes.EllipseGeometry.RadiusY.get -> double
Microsoft.Maui.Controls.Shapes.EllipseGeometry.RadiusY.set -> void
Microsoft.Maui.Controls.Shapes.FillRule
Microsoft.Maui.Controls.Shapes.FillRule.EvenOdd = 0 -> Microsoft.Maui.Controls.Shapes.FillRule
Microsoft.Maui.Controls.Shapes.FillRule.Nonzero = 1 -> Microsoft.Maui.Controls.Shapes.FillRule
Microsoft.Maui.Controls.Shapes.Geometry
Microsoft.Maui.Controls.Shapes.Geometry.Geometry() -> void
Microsoft.Maui.Controls.Shapes.GeometryCollection
Microsoft.Maui.Controls.Shapes.GeometryCollection.GeometryCollection() -> void
Microsoft.Maui.Controls.Shapes.GeometryGroup
Microsoft.Maui.Controls.Shapes.GeometryGroup.FillRule.get -> Microsoft.Maui.Controls.Shapes.FillRule
Microsoft.Maui.Controls.Shapes.GeometryGroup.FillRule.set -> void
Microsoft.Maui.Controls.Shapes.GeometryGroup.GeometryGroup() -> void
Microsoft.Maui.Controls.Shapes.GeometryGroup.InvalidateGeometryRequested -> System.EventHandler
Microsoft.Maui.Controls.Shapes.GeometryHelper
Microsoft.Maui.Controls.Shapes.IGeometry
Microsoft.Maui.Controls.Shapes.Line
Microsoft.Maui.Controls.Shapes.Line.Line() -> void
Microsoft.Maui.Controls.Shapes.Line.Line(double x1, double y1, double x2, double y2) -> void
Microsoft.Maui.Controls.Shapes.Line.X1.get -> double
Microsoft.Maui.Controls.Shapes.Line.X1.set -> void
Microsoft.Maui.Controls.Shapes.Line.X2.get -> double
Microsoft.Maui.Controls.Shapes.Line.X2.set -> void
Microsoft.Maui.Controls.Shapes.Line.Y1.get -> double
Microsoft.Maui.Controls.Shapes.Line.Y1.set -> void
Microsoft.Maui.Controls.Shapes.Line.Y2.get -> double
Microsoft.Maui.Controls.Shapes.Line.Y2.set -> void
Microsoft.Maui.Controls.Shapes.LineGeometry
Microsoft.Maui.Controls.Shapes.LineGeometry.EndPoint.get -> Microsoft.Maui.Graphics.Point
Microsoft.Maui.Controls.Shapes.LineGeometry.EndPoint.set -> void
Microsoft.Maui.Controls.Shapes.LineGeometry.LineGeometry() -> void
Microsoft.Maui.Controls.Shapes.LineGeometry.LineGeometry(Microsoft.Maui.Graphics.Point startPoint, Microsoft.Maui.Graphics.Point endPoint) -> void
Microsoft.Maui.Controls.Shapes.LineGeometry.StartPoint.get -> Microsoft.Maui.Graphics.Point
Microsoft.Maui.Controls.Shapes.LineGeometry.StartPoint.set -> void
Microsoft.Maui.Controls.Shapes.LineSegment
Microsoft.Maui.Controls.Shapes.LineSegment.LineSegment() -> void
Microsoft.Maui.Controls.Shapes.LineSegment.LineSegment(Microsoft.Maui.Graphics.Point point) -> void
Microsoft.Maui.Controls.Shapes.LineSegment.Point.get -> Microsoft.Maui.Graphics.Point
Microsoft.Maui.Controls.Shapes.LineSegment.Point.set -> void
Microsoft.Maui.Controls.Shapes.Matrix
Microsoft.Maui.Controls.Shapes.Matrix.Append(Microsoft.Maui.Controls.Shapes.Matrix matrix) -> void
Microsoft.Maui.Controls.Shapes.Matrix.Determinant.get -> double
Microsoft.Maui.Controls.Shapes.Matrix.Equals(Microsoft.Maui.Controls.Shapes.Matrix other) -> bool
Microsoft.Maui.Controls.Shapes.Matrix.HasInverse.get -> bool
Microsoft.Maui.Controls.Shapes.Matrix.Invert() -> void
Microsoft.Maui.Controls.Shapes.Matrix.IsIdentity.get -> bool
Microsoft.Maui.Controls.Shapes.Matrix.M11.get -> double
Microsoft.Maui.Controls.Shapes.Matrix.M11.set -> void
Microsoft.Maui.Controls.Shapes.Matrix.M12.get -> double
Microsoft.Maui.Controls.Shapes.Matrix.M12.set -> void
Microsoft.Maui.Controls.Shapes.Matrix.M21.get -> double
Microsoft.Maui.Controls.Shapes.Matrix.M21.set -> void
Microsoft.Maui.Controls.Shapes.Matrix.M22.get -> double
Microsoft.Maui.Controls.Shapes.Matrix.M22.set -> void
Microsoft.Maui.Controls.Shapes.Matrix.Matrix() -> void
Microsoft.Maui.Controls.Shapes.Matrix.Matrix(double m11, double m12, double m21, double m22, double offsetX, double offsetY) -> void
Microsoft.Maui.Controls.Shapes.Matrix.OffsetX.get -> double
Microsoft.Maui.Controls.Shapes.Matrix.OffsetX.set -> void
Microsoft.Maui.Controls.Shapes.Matrix.OffsetY.get -> double
Microsoft.Maui.Controls.Shapes.Matrix.OffsetY.set -> void
Microsoft.Maui.Controls.Shapes.Matrix.Prepend(Microsoft.Maui.Controls.Shapes.Matrix matrix) -> void
Microsoft.Maui.Controls.Shapes.Matrix.Rotate(double angle) -> void
Microsoft.Maui.Controls.Shapes.Matrix.RotateAt(double angle, double centerX, double centerY) -> void
Microsoft.Maui.Controls.Shapes.Matrix.RotateAtPrepend(double angle, double centerX, double centerY) -> void
Microsoft.Maui.Controls.Shapes.Matrix.RotatePrepend(double angle) -> void
Microsoft.Maui.Controls.Shapes.Matrix.Scale(double scaleX, double scaleY) -> void
Microsoft.Maui.Controls.Shapes.Matrix.ScaleAt(double scaleX, double scaleY, double centerX, double centerY) -> void
Microsoft.Maui.Controls.Shapes.Matrix.ScaleAtPrepend(double scaleX, double scaleY, double centerX, double centerY) -> void
Microsoft.Maui.Controls.Shapes.Matrix.ScalePrepend(double scaleX, double scaleY) -> void
Microsoft.Maui.Controls.Shapes.Matrix.SetIdentity() -> void
Microsoft.Maui.Controls.Shapes.Matrix.Skew(double skewX, double skewY) -> void
Microsoft.Maui.Controls.Shapes.Matrix.SkewPrepend(double skewX, double skewY) -> void
Microsoft.Maui.Controls.Shapes.Matrix.Transform(Microsoft.Maui.Graphics.Point point) -> Microsoft.Maui.Graphics.Point
Microsoft.Maui.Controls.Shapes.Matrix.Translate(double offsetX, double offsetY) -> void
Microsoft.Maui.Controls.Shapes.Matrix.TranslatePrepend(double offsetX, double offsetY) -> void
Microsoft.Maui.Controls.Shapes.MatrixExtensions
Microsoft.Maui.Controls.Shapes.MatrixTransform
Microsoft.Maui.Controls.Shapes.MatrixTransform.Matrix.get -> Microsoft.Maui.Controls.Shapes.Matrix
Microsoft.Maui.Controls.Shapes.MatrixTransform.Matrix.set -> void
Microsoft.Maui.Controls.Shapes.MatrixTransform.MatrixTransform() -> void
Microsoft.Maui.Controls.Shapes.MatrixTypeConverter
Microsoft.Maui.Controls.Shapes.MatrixTypeConverter.MatrixTypeConverter() -> void
Microsoft.Maui.Controls.Shapes.Path
Microsoft.Maui.Controls.Shapes.Path.Path() -> void
Microsoft.Maui.Controls.Shapes.PathFigure
Microsoft.Maui.Controls.Shapes.PathFigure.BatchBegin() -> void
Microsoft.Maui.Controls.Shapes.PathFigure.BatchCommit() -> void
Microsoft.Maui.Controls.Shapes.PathFigure.IsClosed.get -> bool
Microsoft.Maui.Controls.Shapes.PathFigure.IsClosed.set -> void
Microsoft.Maui.Controls.Shapes.PathFigure.IsFilled.get -> bool
Microsoft.Maui.Controls.Shapes.PathFigure.IsFilled.set -> void
Microsoft.Maui.Controls.Shapes.PathFigure.PathFigure() -> void
Microsoft.Maui.Controls.Shapes.PathFigure.StartPoint.get -> Microsoft.Maui.Graphics.Point
Microsoft.Maui.Controls.Shapes.PathFigure.StartPoint.set -> void
Microsoft.Maui.Controls.Shapes.PathFigureCollection
Microsoft.Maui.Controls.Shapes.PathFigureCollection.PathFigureCollection() -> void
Microsoft.Maui.Controls.Shapes.PathFigureCollectionConverter
Microsoft.Maui.Controls.Shapes.PathFigureCollectionConverter.PathFigureCollectionConverter() -> void
Microsoft.Maui.Controls.Shapes.PathGeometry
Microsoft.Maui.Controls.Shapes.PathGeometry.FillRule.get -> Microsoft.Maui.Controls.Shapes.FillRule
Microsoft.Maui.Controls.Shapes.PathGeometry.FillRule.set -> void
Microsoft.Maui.Controls.Shapes.PathGeometry.PathGeometry() -> void
Microsoft.Maui.Controls.Shapes.PathGeometryConverter
Microsoft.Maui.Controls.Shapes.PathGeometryConverter.PathGeometryConverter() -> void
Microsoft.Maui.Controls.Shapes.PathSegment
Microsoft.Maui.Controls.Shapes.PathSegment.BatchBegin() -> void
Microsoft.Maui.Controls.Shapes.PathSegment.BatchCommit() -> void
Microsoft.Maui.Controls.Shapes.PathSegment.PathSegment() -> void
Microsoft.Maui.Controls.Shapes.PathSegmentCollection
Microsoft.Maui.Controls.Shapes.PathSegmentCollection.PathSegmentCollection() -> void
Microsoft.Maui.Controls.Shapes.PenLineCap
Microsoft.Maui.Controls.Shapes.PenLineCap.Flat = 0 -> Microsoft.Maui.Controls.Shapes.PenLineCap
Microsoft.Maui.Controls.Shapes.PenLineCap.Round = 2 -> Microsoft.Maui.Controls.Shapes.PenLineCap
Microsoft.Maui.Controls.Shapes.PenLineCap.Square = 1 -> Microsoft.Maui.Controls.Shapes.PenLineCap
Microsoft.Maui.Controls.Shapes.PenLineJoin
Microsoft.Maui.Controls.Shapes.PenLineJoin.Bevel = 1 -> Microsoft.Maui.Controls.Shapes.PenLineJoin
Microsoft.Maui.Controls.Shapes.PenLineJoin.Miter = 0 -> Microsoft.Maui.Controls.Shapes.PenLineJoin
Microsoft.Maui.Controls.Shapes.PenLineJoin.Round = 2 -> Microsoft.Maui.Controls.Shapes.PenLineJoin
Microsoft.Maui.Controls.Shapes.PointCollectionConverter
Microsoft.Maui.Controls.Shapes.PointCollectionConverter.PointCollectionConverter() -> void
Microsoft.Maui.Controls.Shapes.PolyBezierSegment
Microsoft.Maui.Controls.Shapes.PolyBezierSegment.PolyBezierSegment() -> void
Microsoft.Maui.Controls.Shapes.Polygon
Microsoft.Maui.Controls.Shapes.Polygon.FillRule.get -> Microsoft.Maui.Controls.Shapes.FillRule
Microsoft.Maui.Controls.Shapes.Polygon.FillRule.set -> void
Microsoft.Maui.Controls.Shapes.Polygon.Polygon() -> void
Microsoft.Maui.Controls.Shapes.Polyline
Microsoft.Maui.Controls.Shapes.Polyline.FillRule.get -> Microsoft.Maui.Controls.Shapes.FillRule
Microsoft.Maui.Controls.Shapes.Polyline.FillRule.set -> void
Microsoft.Maui.Controls.Shapes.Polyline.Polyline() -> void
Microsoft.Maui.Controls.Shapes.PolyLineSegment
Microsoft.Maui.Controls.Shapes.PolyLineSegment.PolyLineSegment() -> void
Microsoft.Maui.Controls.Shapes.PolyQuadraticBezierSegment
Microsoft.Maui.Controls.Shapes.PolyQuadraticBezierSegment.PolyQuadraticBezierSegment() -> void
Microsoft.Maui.Controls.Shapes.QuadraticBezierSegment
Microsoft.Maui.Controls.Shapes.QuadraticBezierSegment.Point1.get -> Microsoft.Maui.Graphics.Point
Microsoft.Maui.Controls.Shapes.QuadraticBezierSegment.Point1.set -> void
Microsoft.Maui.Controls.Shapes.QuadraticBezierSegment.Point2.get -> Microsoft.Maui.Graphics.Point
Microsoft.Maui.Controls.Shapes.QuadraticBezierSegment.Point2.set -> void
Microsoft.Maui.Controls.Shapes.QuadraticBezierSegment.QuadraticBezierSegment() -> void
Microsoft.Maui.Controls.Shapes.QuadraticBezierSegment.QuadraticBezierSegment(Microsoft.Maui.Graphics.Point point1, Microsoft.Maui.Graphics.Point point2) -> void
Microsoft.Maui.Controls.Shapes.Rectangle
Microsoft.Maui.Controls.Shapes.Rectangle.RadiusX.get -> double
Microsoft.Maui.Controls.Shapes.Rectangle.RadiusX.set -> void
Microsoft.Maui.Controls.Shapes.Rectangle.RadiusY.get -> double
Microsoft.Maui.Controls.Shapes.Rectangle.RadiusY.set -> void
Microsoft.Maui.Controls.Shapes.Rectangle.Rectangle() -> void
Microsoft.Maui.Controls.Shapes.RectangleGeometry
Microsoft.Maui.Controls.Shapes.RectangleGeometry.Rect.get -> Microsoft.Maui.Graphics.Rect
Microsoft.Maui.Controls.Shapes.RectangleGeometry.Rect.set -> void
Microsoft.Maui.Controls.Shapes.RectangleGeometry.RectangleGeometry() -> void
Microsoft.Maui.Controls.Shapes.RectangleGeometry.RectangleGeometry(Microsoft.Maui.Graphics.Rect rect) -> void
Microsoft.Maui.Controls.Shapes.RotateTransform
Microsoft.Maui.Controls.Shapes.RotateTransform.Angle.get -> double
Microsoft.Maui.Controls.Shapes.RotateTransform.Angle.set -> void
Microsoft.Maui.Controls.Shapes.RotateTransform.CenterX.get -> double
Microsoft.Maui.Controls.Shapes.RotateTransform.CenterX.set -> void
Microsoft.Maui.Controls.Shapes.RotateTransform.CenterY.get -> double
Microsoft.Maui.Controls.Shapes.RotateTransform.CenterY.set -> void
Microsoft.Maui.Controls.Shapes.RotateTransform.RotateTransform() -> void
Microsoft.Maui.Controls.Shapes.RotateTransform.RotateTransform(double angle, double centerX, double centerY) -> void
Microsoft.Maui.Controls.Shapes.RotateTransform.RotateTransform(double angle) -> void
Microsoft.Maui.Controls.Shapes.RoundRectangle
Microsoft.Maui.Controls.Shapes.RoundRectangle.CornerRadius.get -> Microsoft.Maui.CornerRadius
Microsoft.Maui.Controls.Shapes.RoundRectangle.CornerRadius.set -> void
Microsoft.Maui.Controls.Shapes.RoundRectangle.RoundRectangle() -> void
Microsoft.Maui.Controls.Shapes.RoundRectangleGeometry
Microsoft.Maui.Controls.Shapes.RoundRectangleGeometry.CornerRadius.get -> Microsoft.Maui.CornerRadius
Microsoft.Maui.Controls.Shapes.RoundRectangleGeometry.CornerRadius.set -> void
Microsoft.Maui.Controls.Shapes.RoundRectangleGeometry.Rect.get -> Microsoft.Maui.Graphics.Rect
Microsoft.Maui.Controls.Shapes.RoundRectangleGeometry.Rect.set -> void
Microsoft.Maui.Controls.Shapes.RoundRectangleGeometry.RoundRectangleGeometry() -> void
Microsoft.Maui.Controls.Shapes.RoundRectangleGeometry.RoundRectangleGeometry(Microsoft.Maui.CornerRadius cornerRadius, Microsoft.Maui.Graphics.Rect rect) -> void
Microsoft.Maui.Controls.Shapes.ScaleTransform
Microsoft.Maui.Controls.Shapes.ScaleTransform.CenterX.get -> double
Microsoft.Maui.Controls.Shapes.ScaleTransform.CenterX.set -> void
Microsoft.Maui.Controls.Shapes.ScaleTransform.CenterY.get -> double
Microsoft.Maui.Controls.Shapes.ScaleTransform.CenterY.set -> void
Microsoft.Maui.Controls.Shapes.ScaleTransform.ScaleTransform() -> void
Microsoft.Maui.Controls.Shapes.ScaleTransform.ScaleTransform(double scaleX, double scaleY, double centerX, double centerY) -> void
Microsoft.Maui.Controls.Shapes.ScaleTransform.ScaleTransform(double scaleX, double scaleY) -> void
Microsoft.Maui.Controls.Shapes.ScaleTransform.ScaleX.get -> double
Microsoft.Maui.Controls.Shapes.ScaleTransform.ScaleX.set -> void
Microsoft.Maui.Controls.Shapes.ScaleTransform.ScaleY.get -> double
Microsoft.Maui.Controls.Shapes.ScaleTransform.ScaleY.set -> void
Microsoft.Maui.Controls.Shapes.Shape
Microsoft.Maui.Controls.Shapes.Shape.~Shape() -> void
Microsoft.Maui.Controls.Shapes.Shape.Aspect.get -> Microsoft.Maui.Controls.Stretch
Microsoft.Maui.Controls.Shapes.Shape.Aspect.set -> void
Microsoft.Maui.Controls.Shapes.Shape.Fill.get -> Microsoft.Maui.Controls.Brush!
Microsoft.Maui.Controls.Shapes.Shape.Fill.set -> void
Microsoft.Maui.Controls.Shapes.Shape.Shape() -> void
Microsoft.Maui.Controls.Shapes.Shape.Stroke.get -> Microsoft.Maui.Controls.Brush!
Microsoft.Maui.Controls.Shapes.Shape.Stroke.set -> void
Microsoft.Maui.Controls.Shapes.Shape.StrokeDashArray.get -> Microsoft.Maui.Controls.DoubleCollection!
Microsoft.Maui.Controls.Shapes.Shape.StrokeDashArray.set -> void
Microsoft.Maui.Controls.Shapes.Shape.StrokeDashOffset.get -> double
Microsoft.Maui.Controls.Shapes.Shape.StrokeDashOffset.set -> void
Microsoft.Maui.Controls.Shapes.Shape.StrokeDashPattern.get -> float[]!
Microsoft.Maui.Controls.Shapes.Shape.StrokeLineCap.get -> Microsoft.Maui.Controls.Shapes.PenLineCap
Microsoft.Maui.Controls.Shapes.Shape.StrokeLineCap.set -> void
Microsoft.Maui.Controls.Shapes.Shape.StrokeLineJoin.get -> Microsoft.Maui.Controls.Shapes.PenLineJoin
Microsoft.Maui.Controls.Shapes.Shape.StrokeLineJoin.set -> void
Microsoft.Maui.Controls.Shapes.Shape.StrokeMiterLimit.get -> double
Microsoft.Maui.Controls.Shapes.Shape.StrokeMiterLimit.set -> void
Microsoft.Maui.Controls.Shapes.Shape.StrokeThickness.get -> double
Microsoft.Maui.Controls.Shapes.Shape.StrokeThickness.set -> void
Microsoft.Maui.Controls.Shapes.SkewTransform
Microsoft.Maui.Controls.Shapes.SkewTransform.AngleX.get -> double
Microsoft.Maui.Controls.Shapes.SkewTransform.AngleX.set -> void
Microsoft.Maui.Controls.Shapes.SkewTransform.AngleY.get -> double
Microsoft.Maui.Controls.Shapes.SkewTransform.AngleY.set -> void
Microsoft.Maui.Controls.Shapes.SkewTransform.CenterX.get -> double
Microsoft.Maui.Controls.Shapes.SkewTransform.CenterX.set -> void
Microsoft.Maui.Controls.Shapes.SkewTransform.CenterY.get -> double
Microsoft.Maui.Controls.Shapes.SkewTransform.CenterY.set -> void
Microsoft.Maui.Controls.Shapes.SkewTransform.SkewTransform() -> void
Microsoft.Maui.Controls.Shapes.SkewTransform.SkewTransform(double angleX, double angleY, double centerX, double centerY) -> void
Microsoft.Maui.Controls.Shapes.SkewTransform.SkewTransform(double angleX, double angleY) -> void
Microsoft.Maui.Controls.Shapes.StrokeShapeTypeConverter
Microsoft.Maui.Controls.Shapes.StrokeShapeTypeConverter.StrokeShapeTypeConverter() -> void
Microsoft.Maui.Controls.Shapes.Transform
Microsoft.Maui.Controls.Shapes.Transform.Transform() -> void
Microsoft.Maui.Controls.Shapes.Transform.Value.get -> Microsoft.Maui.Controls.Shapes.Matrix
Microsoft.Maui.Controls.Shapes.Transform.Value.set -> void
Microsoft.Maui.Controls.Shapes.TransformCollection
Microsoft.Maui.Controls.Shapes.TransformCollection.TransformCollection() -> void
Microsoft.Maui.Controls.Shapes.TransformGroup
Microsoft.Maui.Controls.Shapes.TransformGroup.TransformGroup() -> void
Microsoft.Maui.Controls.Shapes.TransformTypeConverter
Microsoft.Maui.Controls.Shapes.TransformTypeConverter.TransformTypeConverter() -> void
Microsoft.Maui.Controls.Shapes.TranslateTransform
Microsoft.Maui.Controls.Shapes.TranslateTransform.TranslateTransform() -> void
Microsoft.Maui.Controls.Shapes.TranslateTransform.TranslateTransform(double x, double y) -> void
Microsoft.Maui.Controls.Shapes.TranslateTransform.X.get -> double
Microsoft.Maui.Controls.Shapes.TranslateTransform.X.set -> void
Microsoft.Maui.Controls.Shapes.TranslateTransform.Y.get -> double
Microsoft.Maui.Controls.Shapes.TranslateTransform.Y.set -> void
Microsoft.Maui.Controls.Shell
Microsoft.Maui.Controls.Shell.FlyoutBackgroundImageAspect.get -> Microsoft.Maui.Aspect
Microsoft.Maui.Controls.Shell.FlyoutBackgroundImageAspect.set -> void
Microsoft.Maui.Controls.Shell.FlyoutBehavior.get -> Microsoft.Maui.FlyoutBehavior
Microsoft.Maui.Controls.Shell.FlyoutBehavior.set -> void
Microsoft.Maui.Controls.Shell.FlyoutHeaderBehavior.get -> Microsoft.Maui.Controls.FlyoutHeaderBehavior
Microsoft.Maui.Controls.Shell.FlyoutHeaderBehavior.set -> void
Microsoft.Maui.Controls.Shell.FlyoutHeight.get -> double
Microsoft.Maui.Controls.Shell.FlyoutHeight.set -> void
Microsoft.Maui.Controls.Shell.FlyoutIsPresented.get -> bool
Microsoft.Maui.Controls.Shell.FlyoutIsPresented.set -> void
Microsoft.Maui.Controls.Shell.FlyoutVerticalScrollMode.get -> Microsoft.Maui.Controls.ScrollMode
Microsoft.Maui.Controls.Shell.FlyoutVerticalScrollMode.set -> void
Microsoft.Maui.Controls.Shell.FlyoutWidth.get -> double
Microsoft.Maui.Controls.Shell.FlyoutWidth.set -> void
Microsoft.Maui.Controls.Shell.Navigated -> System.EventHandler<Microsoft.Maui.Controls.ShellNavigatedEventArgs>
Microsoft.Maui.Controls.Shell.Navigating -> System.EventHandler<Microsoft.Maui.Controls.ShellNavigatingEventArgs>
Microsoft.Maui.Controls.Shell.Shell() -> void
Microsoft.Maui.Controls.ShellAppearance
Microsoft.Maui.Controls.ShellAppearance.FlyoutHeight.get -> double
Microsoft.Maui.Controls.ShellAppearance.FlyoutWidth.get -> double
Microsoft.Maui.Controls.ShellAppearance.MakeComplete() -> void
Microsoft.Maui.Controls.ShellContent
Microsoft.Maui.Controls.ShellContent.ShellContent() -> void
Microsoft.Maui.Controls.ShellGroupItem
Microsoft.Maui.Controls.ShellGroupItem.FlyoutDisplayOptions.get -> Microsoft.Maui.Controls.FlyoutDisplayOptions
Microsoft.Maui.Controls.ShellGroupItem.FlyoutDisplayOptions.set -> void
Microsoft.Maui.Controls.ShellGroupItem.ShellGroupItem() -> void
Microsoft.Maui.Controls.ShellItem
Microsoft.Maui.Controls.ShellItem.ShellItem() -> void
Microsoft.Maui.Controls.ShellNavigatedEventArgs
Microsoft.Maui.Controls.ShellNavigatedEventArgs.Source.get -> Microsoft.Maui.Controls.ShellNavigationSource
Microsoft.Maui.Controls.ShellNavigatingDeferral
Microsoft.Maui.Controls.ShellNavigatingDeferral.Complete() -> void
Microsoft.Maui.Controls.ShellNavigatingEventArgs
Microsoft.Maui.Controls.ShellNavigatingEventArgs.CanCancel.get -> bool
Microsoft.Maui.Controls.ShellNavigatingEventArgs.Cancel() -> bool
Microsoft.Maui.Controls.ShellNavigatingEventArgs.Cancelled.get -> bool
Microsoft.Maui.Controls.ShellNavigatingEventArgs.Source.get -> Microsoft.Maui.Controls.ShellNavigationSource
Microsoft.Maui.Controls.ShellNavigationQueryParameters
Microsoft.Maui.Controls.ShellNavigationQueryParameters.Add(string! key, object! value) -> void
Microsoft.Maui.Controls.ShellNavigationQueryParameters.Add(System.Collections.Generic.KeyValuePair<string!, object!> item) -> void
Microsoft.Maui.Controls.ShellNavigationQueryParameters.Clear() -> void
Microsoft.Maui.Controls.ShellNavigationQueryParameters.Contains(System.Collections.Generic.KeyValuePair<string!, object!> item) -> bool
Microsoft.Maui.Controls.ShellNavigationQueryParameters.ContainsKey(string! key) -> bool
Microsoft.Maui.Controls.ShellNavigationQueryParameters.CopyTo(System.Collections.Generic.KeyValuePair<string!, object!>[]! array, int arrayIndex) -> void
Microsoft.Maui.Controls.ShellNavigationQueryParameters.Count.get -> int
Microsoft.Maui.Controls.ShellNavigationQueryParameters.GetEnumerator() -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string!, object!>>!
Microsoft.Maui.Controls.ShellNavigationQueryParameters.IsReadOnly.get -> bool
Microsoft.Maui.Controls.ShellNavigationQueryParameters.Keys.get -> System.Collections.Generic.ICollection<string!>!
Microsoft.Maui.Controls.ShellNavigationQueryParameters.Remove(string! key) -> bool
Microsoft.Maui.Controls.ShellNavigationQueryParameters.Remove(System.Collections.Generic.KeyValuePair<string!, object!> item) -> bool
Microsoft.Maui.Controls.ShellNavigationQueryParameters.ShellNavigationQueryParameters() -> void
Microsoft.Maui.Controls.ShellNavigationQueryParameters.ShellNavigationQueryParameters(System.Collections.Generic.IDictionary<string!, object!>! dictionary) -> void
Microsoft.Maui.Controls.ShellNavigationQueryParameters.ShellNavigationQueryParameters(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string!, object!>>! collection) -> void
Microsoft.Maui.Controls.ShellNavigationQueryParameters.this[string! key].get -> object!
Microsoft.Maui.Controls.ShellNavigationQueryParameters.this[string! key].set -> void
Microsoft.Maui.Controls.ShellNavigationQueryParameters.TryGetValue(string! key, out object! value) -> bool
Microsoft.Maui.Controls.ShellNavigationQueryParameters.Values.get -> System.Collections.Generic.ICollection<object!>!
Microsoft.Maui.Controls.ShellNavigationSource
Microsoft.Maui.Controls.ShellNavigationSource.Insert = 4 -> Microsoft.Maui.Controls.ShellNavigationSource
Microsoft.Maui.Controls.ShellNavigationSource.Pop = 2 -> Microsoft.Maui.Controls.ShellNavigationSource
Microsoft.Maui.Controls.ShellNavigationSource.PopToRoot = 3 -> Microsoft.Maui.Controls.ShellNavigationSource
Microsoft.Maui.Controls.ShellNavigationSource.Push = 1 -> Microsoft.Maui.Controls.ShellNavigationSource
Microsoft.Maui.Controls.ShellNavigationSource.Remove = 5 -> Microsoft.Maui.Controls.ShellNavigationSource
Microsoft.Maui.Controls.ShellNavigationSource.ShellContentChanged = 8 -> Microsoft.Maui.Controls.ShellNavigationSource
Microsoft.Maui.Controls.ShellNavigationSource.ShellItemChanged = 6 -> Microsoft.Maui.Controls.ShellNavigationSource
Microsoft.Maui.Controls.ShellNavigationSource.ShellSectionChanged = 7 -> Microsoft.Maui.Controls.ShellNavigationSource
Microsoft.Maui.Controls.ShellNavigationSource.Unknown = 0 -> Microsoft.Maui.Controls.ShellNavigationSource
Microsoft.Maui.Controls.ShellNavigationState
Microsoft.Maui.Controls.ShellNavigationState.ShellNavigationState() -> void
Microsoft.Maui.Controls.ShellSection
Microsoft.Maui.Controls.ShellSection.ShellSection() -> void
Microsoft.Maui.Controls.ShellTemplatedViewManager
Microsoft.Maui.Controls.Slider
Microsoft.Maui.Controls.Slider.DragCompleted -> System.EventHandler
Microsoft.Maui.Controls.Slider.DragStarted -> System.EventHandler
Microsoft.Maui.Controls.Slider.Maximum.get -> double
Microsoft.Maui.Controls.Slider.Maximum.set -> void
Microsoft.Maui.Controls.Slider.Minimum.get -> double
Microsoft.Maui.Controls.Slider.Minimum.set -> void
Microsoft.Maui.Controls.Slider.Slider() -> void
Microsoft.Maui.Controls.Slider.Slider(double min, double max, double val) -> void
Microsoft.Maui.Controls.Slider.Value.get -> double
Microsoft.Maui.Controls.Slider.Value.set -> void
Microsoft.Maui.Controls.Slider.ValueChanged -> System.EventHandler<Microsoft.Maui.Controls.ValueChangedEventArgs>
Microsoft.Maui.Controls.SnapPointsAlignment
Microsoft.Maui.Controls.SnapPointsAlignment.Center = 1 -> Microsoft.Maui.Controls.SnapPointsAlignment
Microsoft.Maui.Controls.SnapPointsAlignment.End = 2 -> Microsoft.Maui.Controls.SnapPointsAlignment
Microsoft.Maui.Controls.SnapPointsAlignment.Start = 0 -> Microsoft.Maui.Controls.SnapPointsAlignment
Microsoft.Maui.Controls.SnapPointsType
Microsoft.Maui.Controls.SnapPointsType.Mandatory = 1 -> Microsoft.Maui.Controls.SnapPointsType
Microsoft.Maui.Controls.SnapPointsType.MandatorySingle = 2 -> Microsoft.Maui.Controls.SnapPointsType
Microsoft.Maui.Controls.SnapPointsType.None = 0 -> Microsoft.Maui.Controls.SnapPointsType
Microsoft.Maui.Controls.SolidColorBrush
Microsoft.Maui.Controls.SolidColorBrush.SolidColorBrush() -> void
Microsoft.Maui.Controls.Span
Microsoft.Maui.Controls.Span.CharacterSpacing.get -> double
Microsoft.Maui.Controls.Span.CharacterSpacing.set -> void
Microsoft.Maui.Controls.Span.FontAttributes.get -> Microsoft.Maui.Controls.FontAttributes
Microsoft.Maui.Controls.Span.FontAttributes.set -> void
Microsoft.Maui.Controls.Span.FontAutoScalingEnabled.get -> bool
Microsoft.Maui.Controls.Span.FontAutoScalingEnabled.set -> void
Microsoft.Maui.Controls.Span.FontSize.get -> double
Microsoft.Maui.Controls.Span.FontSize.set -> void
Microsoft.Maui.Controls.Span.LineHeight.get -> double
Microsoft.Maui.Controls.Span.LineHeight.set -> void
Microsoft.Maui.Controls.Span.Span() -> void
Microsoft.Maui.Controls.Span.TextDecorations.get -> Microsoft.Maui.TextDecorations
Microsoft.Maui.Controls.Span.TextDecorations.set -> void
Microsoft.Maui.Controls.Span.TextTransform.get -> Microsoft.Maui.TextTransform
Microsoft.Maui.Controls.Span.TextTransform.set -> void
Microsoft.Maui.Controls.StackBase
Microsoft.Maui.Controls.StackBase.Spacing.get -> double
Microsoft.Maui.Controls.StackBase.Spacing.set -> void
Microsoft.Maui.Controls.StackBase.StackBase() -> void
Microsoft.Maui.Controls.StackLayout
Microsoft.Maui.Controls.StackLayout.Orientation.get -> Microsoft.Maui.Controls.StackOrientation
Microsoft.Maui.Controls.StackLayout.Orientation.set -> void
Microsoft.Maui.Controls.StackLayout.StackLayout() -> void
Microsoft.Maui.Controls.StackLayoutManager
Microsoft.Maui.Controls.StackLayoutManager.ArrangeChildren(Microsoft.Maui.Graphics.Rect bounds) -> Microsoft.Maui.Graphics.Size
Microsoft.Maui.Controls.StackLayoutManager.Measure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
Microsoft.Maui.Controls.StackOrientation
Microsoft.Maui.Controls.StackOrientation.Horizontal = 1 -> Microsoft.Maui.Controls.StackOrientation
Microsoft.Maui.Controls.StackOrientation.Vertical = 0 -> Microsoft.Maui.Controls.StackOrientation
Microsoft.Maui.Controls.StateTrigger
Microsoft.Maui.Controls.StateTrigger.IsActive.get -> bool
Microsoft.Maui.Controls.StateTrigger.IsActive.set -> void
Microsoft.Maui.Controls.StateTrigger.StateTrigger() -> void
Microsoft.Maui.Controls.StateTriggerBase
Microsoft.Maui.Controls.StateTriggerBase.IsActive.get -> bool
Microsoft.Maui.Controls.StateTriggerBase.IsActiveChanged -> System.EventHandler
Microsoft.Maui.Controls.StateTriggerBase.IsAttached.get -> bool
Microsoft.Maui.Controls.StateTriggerBase.SetActive(bool active) -> void
Microsoft.Maui.Controls.StateTriggerBase.StateTriggerBase() -> void
Microsoft.Maui.Controls.Stepper
Microsoft.Maui.Controls.Stepper.Increment.get -> double
Microsoft.Maui.Controls.Stepper.Increment.set -> void
Microsoft.Maui.Controls.Stepper.Maximum.get -> double
Microsoft.Maui.Controls.Stepper.Maximum.set -> void
Microsoft.Maui.Controls.Stepper.Minimum.get -> double
Microsoft.Maui.Controls.Stepper.Minimum.set -> void
Microsoft.Maui.Controls.Stepper.Stepper() -> void
Microsoft.Maui.Controls.Stepper.Stepper(double min, double max, double val, double increment) -> void
Microsoft.Maui.Controls.Stepper.Value.get -> double
Microsoft.Maui.Controls.Stepper.Value.set -> void
Microsoft.Maui.Controls.Stepper.ValueChanged -> System.EventHandler<Microsoft.Maui.Controls.ValueChangedEventArgs>
Microsoft.Maui.Controls.StreamImageSource
Microsoft.Maui.Controls.StreamImageSource.StreamImageSource() -> void
Microsoft.Maui.Controls.Stretch
Microsoft.Maui.Controls.Stretch.Fill = 1 -> Microsoft.Maui.Controls.Stretch
Microsoft.Maui.Controls.Stretch.None = 0 -> Microsoft.Maui.Controls.Stretch
Microsoft.Maui.Controls.Stretch.Uniform = 2 -> Microsoft.Maui.Controls.Stretch
Microsoft.Maui.Controls.Stretch.UniformToFill = 3 -> Microsoft.Maui.Controls.Stretch
Microsoft.Maui.Controls.StructuredItemsView
Microsoft.Maui.Controls.StructuredItemsView.ItemSizingStrategy.get -> Microsoft.Maui.Controls.ItemSizingStrategy
Microsoft.Maui.Controls.StructuredItemsView.ItemSizingStrategy.set -> void
Microsoft.Maui.Controls.StructuredItemsView.StructuredItemsView() -> void
Microsoft.Maui.Controls.Style
Microsoft.Maui.Controls.Style.ApplyToDerivedTypes.get -> bool
Microsoft.Maui.Controls.Style.ApplyToDerivedTypes.set -> void
Microsoft.Maui.Controls.Style.CanCascade.get -> bool
Microsoft.Maui.Controls.Style.CanCascade.set -> void
Microsoft.Maui.Controls.StyleSheets.StyleSheet
Microsoft.Maui.Controls.SweepDirection
Microsoft.Maui.Controls.SweepDirection.Clockwise = 1 -> Microsoft.Maui.Controls.SweepDirection
Microsoft.Maui.Controls.SweepDirection.CounterClockwise = 0 -> Microsoft.Maui.Controls.SweepDirection
Microsoft.Maui.Controls.SwipeChangingEventArgs
Microsoft.Maui.Controls.SwipeChangingEventArgs.Offset.get -> double
Microsoft.Maui.Controls.SwipeChangingEventArgs.Offset.set -> void
Microsoft.Maui.Controls.SwipeChangingEventArgs.SwipeChangingEventArgs(Microsoft.Maui.SwipeDirection swipeDirection, double offset) -> void
Microsoft.Maui.Controls.SwipedEventArgs
Microsoft.Maui.Controls.SwipedEventArgs.Direction.get -> Microsoft.Maui.SwipeDirection
Microsoft.Maui.Controls.SwipeEndedEventArgs
Microsoft.Maui.Controls.SwipeEndedEventArgs.IsOpen.get -> bool
Microsoft.Maui.Controls.SwipeEndedEventArgs.IsOpen.set -> void
Microsoft.Maui.Controls.SwipeEndedEventArgs.SwipeEndedEventArgs(Microsoft.Maui.SwipeDirection swipeDirection, bool isOpen) -> void
Microsoft.Maui.Controls.SwipeGestureRecognizer
Microsoft.Maui.Controls.SwipeGestureRecognizer.Direction.get -> Microsoft.Maui.SwipeDirection
Microsoft.Maui.Controls.SwipeGestureRecognizer.Direction.set -> void
Microsoft.Maui.Controls.SwipeGestureRecognizer.Swiped -> System.EventHandler<Microsoft.Maui.Controls.SwipedEventArgs>
Microsoft.Maui.Controls.SwipeGestureRecognizer.SwipeGestureRecognizer() -> void
Microsoft.Maui.Controls.SwipeGestureRecognizer.Threshold.get -> uint
Microsoft.Maui.Controls.SwipeGestureRecognizer.Threshold.set -> void
Microsoft.Maui.Controls.SwipeItem
Microsoft.Maui.Controls.SwipeItem.Invoked -> System.EventHandler<System.EventArgs>
Microsoft.Maui.Controls.SwipeItem.IsVisible.get -> bool
Microsoft.Maui.Controls.SwipeItem.IsVisible.set -> void
Microsoft.Maui.Controls.SwipeItem.SwipeItem() -> void
Microsoft.Maui.Controls.SwipeItems
Microsoft.Maui.Controls.SwipeItems.Clear() -> void
Microsoft.Maui.Controls.SwipeItems.CollectionChanged -> System.Collections.Specialized.NotifyCollectionChangedEventHandler
Microsoft.Maui.Controls.SwipeItems.Count.get -> int
Microsoft.Maui.Controls.SwipeItems.IsReadOnly.get -> bool
Microsoft.Maui.Controls.SwipeItems.Mode.get -> Microsoft.Maui.SwipeMode
Microsoft.Maui.Controls.SwipeItems.Mode.set -> void
Microsoft.Maui.Controls.SwipeItems.RemoveAt(int index) -> void
Microsoft.Maui.Controls.SwipeItems.SwipeBehaviorOnInvoked.get -> Microsoft.Maui.SwipeBehaviorOnInvoked
Microsoft.Maui.Controls.SwipeItems.SwipeBehaviorOnInvoked.set -> void
Microsoft.Maui.Controls.SwipeItems.SwipeItems() -> void
Microsoft.Maui.Controls.SwipeItemView
Microsoft.Maui.Controls.SwipeItemView.Invoked -> System.EventHandler<System.EventArgs>
Microsoft.Maui.Controls.SwipeItemView.OnInvoked() -> void
Microsoft.Maui.Controls.SwipeItemView.SwipeItemView() -> void
Microsoft.Maui.Controls.SwipeStartedEventArgs
Microsoft.Maui.Controls.SwipeStartedEventArgs.SwipeStartedEventArgs(Microsoft.Maui.SwipeDirection swipeDirection) -> void
Microsoft.Maui.Controls.SwipeView
Microsoft.Maui.Controls.SwipeView.Close(bool animated = true) -> void
Microsoft.Maui.Controls.SwipeView.CloseRequested -> System.EventHandler<Microsoft.Maui.Controls.CloseRequestedEventArgs>
Microsoft.Maui.Controls.SwipeView.Open(Microsoft.Maui.OpenSwipeItem openSwipeItem, bool animated = true) -> void
Microsoft.Maui.Controls.SwipeView.OpenRequested -> System.EventHandler<Microsoft.Maui.Controls.OpenRequestedEventArgs>
Microsoft.Maui.Controls.SwipeView.SwipeChanging -> System.EventHandler<Microsoft.Maui.Controls.SwipeChangingEventArgs>
Microsoft.Maui.Controls.SwipeView.SwipeEnded -> System.EventHandler<Microsoft.Maui.Controls.SwipeEndedEventArgs>
Microsoft.Maui.Controls.SwipeView.SwipeStarted -> System.EventHandler<Microsoft.Maui.Controls.SwipeStartedEventArgs>
Microsoft.Maui.Controls.SwipeView.SwipeView() -> void
Microsoft.Maui.Controls.SwipeView.Threshold.get -> double
Microsoft.Maui.Controls.SwipeView.Threshold.set -> void
Microsoft.Maui.Controls.Switch
Microsoft.Maui.Controls.Switch.IsToggled.get -> bool
Microsoft.Maui.Controls.Switch.IsToggled.set -> void
Microsoft.Maui.Controls.Switch.Switch() -> void
Microsoft.Maui.Controls.Switch.Toggled -> System.EventHandler<Microsoft.Maui.Controls.ToggledEventArgs>
Microsoft.Maui.Controls.SwitchCell
Microsoft.Maui.Controls.SwitchCell.On.get -> bool
Microsoft.Maui.Controls.SwitchCell.On.set -> void
Microsoft.Maui.Controls.SwitchCell.OnChanged -> System.EventHandler<Microsoft.Maui.Controls.ToggledEventArgs>
Microsoft.Maui.Controls.SwitchCell.SwitchCell() -> void
Microsoft.Maui.Controls.Tab
Microsoft.Maui.Controls.Tab.Tab() -> void
Microsoft.Maui.Controls.TabBar
Microsoft.Maui.Controls.TabBar.TabBar() -> void
Microsoft.Maui.Controls.TabbedPage
Microsoft.Maui.Controls.TabbedPage.TabbedPage() -> void
Microsoft.Maui.Controls.TableIntent
Microsoft.Maui.Controls.TableIntent.Data = 3 -> Microsoft.Maui.Controls.TableIntent
Microsoft.Maui.Controls.TableIntent.Form = 2 -> Microsoft.Maui.Controls.TableIntent
Microsoft.Maui.Controls.TableIntent.Menu = 0 -> Microsoft.Maui.Controls.TableIntent
Microsoft.Maui.Controls.TableIntent.Settings = 1 -> Microsoft.Maui.Controls.TableIntent
Microsoft.Maui.Controls.TableRoot
Microsoft.Maui.Controls.TableRoot.TableRoot() -> void
Microsoft.Maui.Controls.TableSection
Microsoft.Maui.Controls.TableSection.TableSection() -> void
Microsoft.Maui.Controls.TableSectionBase
Microsoft.Maui.Controls.TableSectionBase.TableSectionBase() -> void
Microsoft.Maui.Controls.TableSectionBase<T>.Clear() -> void
Microsoft.Maui.Controls.TableSectionBase<T>.CollectionChanged -> System.Collections.Specialized.NotifyCollectionChangedEventHandler
Microsoft.Maui.Controls.TableSectionBase<T>.Count.get -> int
Microsoft.Maui.Controls.TableSectionBase<T>.RemoveAt(int index) -> void
Microsoft.Maui.Controls.TableSectionBase<T>.TableSectionBase() -> void
Microsoft.Maui.Controls.TableView
Microsoft.Maui.Controls.TableView.HasUnevenRows.get -> bool
Microsoft.Maui.Controls.TableView.HasUnevenRows.set -> void
Microsoft.Maui.Controls.TableView.Intent.get -> Microsoft.Maui.Controls.TableIntent
Microsoft.Maui.Controls.TableView.Intent.set -> void
Microsoft.Maui.Controls.TableView.ModelChanged -> System.EventHandler
Microsoft.Maui.Controls.TableView.RowHeight.get -> int
Microsoft.Maui.Controls.TableView.RowHeight.set -> void
Microsoft.Maui.Controls.TableView.TableView() -> void
Microsoft.Maui.Controls.TabsStyle
Microsoft.Maui.Controls.TabsStyle.Default = 0 -> Microsoft.Maui.Controls.TabsStyle
Microsoft.Maui.Controls.TabsStyle.Hidden = 1 -> Microsoft.Maui.Controls.TabsStyle
Microsoft.Maui.Controls.TabsStyle.Icons = 2 -> Microsoft.Maui.Controls.TabsStyle
Microsoft.Maui.Controls.TabsStyle.OnBottom = 4 -> Microsoft.Maui.Controls.TabsStyle
Microsoft.Maui.Controls.TabsStyle.OnNavigation = 3 -> Microsoft.Maui.Controls.TabsStyle
Microsoft.Maui.Controls.TapGestureRecognizer
Microsoft.Maui.Controls.TapGestureRecognizer.Buttons.get -> Microsoft.Maui.Controls.ButtonsMask
Microsoft.Maui.Controls.TapGestureRecognizer.Buttons.set -> void
Microsoft.Maui.Controls.TapGestureRecognizer.Command.get -> System.Windows.Input.ICommand?
Microsoft.Maui.Controls.TapGestureRecognizer.Command.set -> void
Microsoft.Maui.Controls.TapGestureRecognizer.CommandParameter.get -> object?
Microsoft.Maui.Controls.TapGestureRecognizer.CommandParameter.set -> void
Microsoft.Maui.Controls.TapGestureRecognizer.NumberOfTapsRequired.get -> int
Microsoft.Maui.Controls.TapGestureRecognizer.NumberOfTapsRequired.set -> void
Microsoft.Maui.Controls.TapGestureRecognizer.TapGestureRecognizer() -> void
Microsoft.Maui.Controls.TapGestureRecognizer.Tapped -> System.EventHandler<Microsoft.Maui.Controls.TappedEventArgs!>?
Microsoft.Maui.Controls.TappedEventArgs
Microsoft.Maui.Controls.TappedEventArgs.Buttons.get -> Microsoft.Maui.Controls.ButtonsMask
Microsoft.Maui.Controls.TappedEventArgs.Parameter.get -> object?
Microsoft.Maui.Controls.TappedEventArgs.TappedEventArgs(object? parameter) -> void
Microsoft.Maui.Controls.TargetIdiom
Microsoft.Maui.Controls.TargetIdiom.Desktop = 3 -> Microsoft.Maui.Controls.TargetIdiom
Microsoft.Maui.Controls.TargetIdiom.Phone = 1 -> Microsoft.Maui.Controls.TargetIdiom
Microsoft.Maui.Controls.TargetIdiom.Tablet = 2 -> Microsoft.Maui.Controls.TargetIdiom
Microsoft.Maui.Controls.TargetIdiom.TV = 4 -> Microsoft.Maui.Controls.TargetIdiom
Microsoft.Maui.Controls.TargetIdiom.Unsupported = 0 -> Microsoft.Maui.Controls.TargetIdiom
Microsoft.Maui.Controls.TargetIdiom.Watch = 5 -> Microsoft.Maui.Controls.TargetIdiom
Microsoft.Maui.Controls.TemplateBinding
Microsoft.Maui.Controls.TemplateBinding.TemplateBinding() -> void
Microsoft.Maui.Controls.TemplatedPage
Microsoft.Maui.Controls.TemplatedPage.TemplatedPage() -> void
Microsoft.Maui.Controls.TemplatedView
Microsoft.Maui.Controls.TemplatedView.TemplatedView() -> void
Microsoft.Maui.Controls.TemplateExtensions
Microsoft.Maui.Controls.TextAlignmentConverter
Microsoft.Maui.Controls.TextAlignmentConverter.TextAlignmentConverter() -> void
Microsoft.Maui.Controls.TextCell
Microsoft.Maui.Controls.TextCell.TextCell() -> void
Microsoft.Maui.Controls.TextChangedEventArgs
Microsoft.Maui.Controls.TextDecorationConverter
Microsoft.Maui.Controls.TextDecorationConverter.TextDecorationConverter() -> void
Microsoft.Maui.Controls.TimePicker
Microsoft.Maui.Controls.TimePicker.CharacterSpacing.get -> double
Microsoft.Maui.Controls.TimePicker.CharacterSpacing.set -> void
Microsoft.Maui.Controls.TimePicker.FontAttributes.get -> Microsoft.Maui.Controls.FontAttributes
Microsoft.Maui.Controls.TimePicker.FontAttributes.set -> void
Microsoft.Maui.Controls.TimePicker.FontAutoScalingEnabled.get -> bool
Microsoft.Maui.Controls.TimePicker.FontAutoScalingEnabled.set -> void
Microsoft.Maui.Controls.TimePicker.FontSize.get -> double
Microsoft.Maui.Controls.TimePicker.FontSize.set -> void
Microsoft.Maui.Controls.TimePicker.Time.get -> System.TimeSpan
Microsoft.Maui.Controls.TimePicker.Time.set -> void
Microsoft.Maui.Controls.TimePicker.TimePicker() -> void
Microsoft.Maui.Controls.ToggledEventArgs
Microsoft.Maui.Controls.ToggledEventArgs.ToggledEventArgs(bool value) -> void
Microsoft.Maui.Controls.ToggledEventArgs.Value.get -> bool
Microsoft.Maui.Controls.Toolbar
Microsoft.Maui.Controls.Toolbar.BackButtonEnabled.get -> bool
Microsoft.Maui.Controls.Toolbar.BackButtonEnabled.set -> void
Microsoft.Maui.Controls.Toolbar.BarHeight.get -> double?
Microsoft.Maui.Controls.Toolbar.BarHeight.set -> void
Microsoft.Maui.Controls.Toolbar.DynamicOverflowEnabled.get -> bool
Microsoft.Maui.Controls.Toolbar.DynamicOverflowEnabled.set -> void
Microsoft.Maui.Controls.Toolbar.IsVisible.get -> bool
Microsoft.Maui.Controls.Toolbar.IsVisible.set -> void
Microsoft.Maui.Controls.Toolbar.PropertyChanged -> System.ComponentModel.PropertyChangedEventHandler
Microsoft.Maui.Controls.ToolbarItem
Microsoft.Maui.Controls.ToolbarItem.Order.get -> Microsoft.Maui.Controls.ToolbarItemOrder
Microsoft.Maui.Controls.ToolbarItem.Order.set -> void
Microsoft.Maui.Controls.ToolbarItem.Priority.get -> int
Microsoft.Maui.Controls.ToolbarItem.Priority.set -> void
Microsoft.Maui.Controls.ToolbarItem.ToolbarItem() -> void
Microsoft.Maui.Controls.ToolbarItemOrder
Microsoft.Maui.Controls.ToolbarItemOrder.Default = 0 -> Microsoft.Maui.Controls.ToolbarItemOrder
Microsoft.Maui.Controls.ToolbarItemOrder.Primary = 1 -> Microsoft.Maui.Controls.ToolbarItemOrder
Microsoft.Maui.Controls.ToolbarItemOrder.Secondary = 2 -> Microsoft.Maui.Controls.ToolbarItemOrder
Microsoft.Maui.Controls.ToolTipProperties
Microsoft.Maui.Controls.ToolTipProperties.ToolTipProperties() -> void
Microsoft.Maui.Controls.TouchEventArgs
Microsoft.Maui.Controls.TouchEventArgs.IsInsideBounds.get -> bool
Microsoft.Maui.Controls.TouchEventArgs.TouchEventArgs() -> void
Microsoft.Maui.Controls.Trigger
Microsoft.Maui.Controls.TriggerAction
Microsoft.Maui.Controls.TriggerAction<T>.TriggerAction() -> void
Microsoft.Maui.Controls.TriggerBase
Microsoft.Maui.Controls.TriggerBase.IsSealed.get -> bool
Microsoft.Maui.Controls.TypeTypeConverter
Microsoft.Maui.Controls.TypeTypeConverter.TypeTypeConverter() -> void
Microsoft.Maui.Controls.UnsolvableConstraintsException
Microsoft.Maui.Controls.UnsolvableConstraintsException.UnsolvableConstraintsException() -> void
Microsoft.Maui.Controls.UriImageSource
Microsoft.Maui.Controls.UriImageSource.CacheValidity.get -> System.TimeSpan
Microsoft.Maui.Controls.UriImageSource.CacheValidity.set -> void
Microsoft.Maui.Controls.UriImageSource.CachingEnabled.get -> bool
Microsoft.Maui.Controls.UriImageSource.CachingEnabled.set -> void
Microsoft.Maui.Controls.UriImageSource.UriImageSource() -> void
Microsoft.Maui.Controls.UriTypeConverter
Microsoft.Maui.Controls.UriTypeConverter.UriTypeConverter() -> void
Microsoft.Maui.Controls.UrlWebViewSource
Microsoft.Maui.Controls.UrlWebViewSource.UrlWebViewSource() -> void
Microsoft.Maui.Controls.ValueChangedEventArgs
Microsoft.Maui.Controls.ValueChangedEventArgs.NewValue.get -> double
Microsoft.Maui.Controls.ValueChangedEventArgs.OldValue.get -> double
Microsoft.Maui.Controls.ValueChangedEventArgs.ValueChangedEventArgs(double oldValue, double newValue) -> void
Microsoft.Maui.Controls.VerticalStackLayout
Microsoft.Maui.Controls.VerticalStackLayout.VerticalStackLayout() -> void
Microsoft.Maui.Controls.View
Microsoft.Maui.Controls.View.GetRendererOverrides<T>() -> Microsoft.Maui.PropertyMapper<T>!
Microsoft.Maui.Controls.View.HorizontalOptions.get -> Microsoft.Maui.Controls.LayoutOptions
Microsoft.Maui.Controls.View.HorizontalOptions.set -> void
Microsoft.Maui.Controls.View.Margin.get -> Microsoft.Maui.Thickness
Microsoft.Maui.Controls.View.Margin.set -> void
Microsoft.Maui.Controls.View.propertyMapper -> Microsoft.Maui.PropertyMapper!
Microsoft.Maui.Controls.View.VerticalOptions.get -> Microsoft.Maui.Controls.LayoutOptions
Microsoft.Maui.Controls.View.VerticalOptions.set -> void
Microsoft.Maui.Controls.View.View() -> void
Microsoft.Maui.Controls.ViewCell
Microsoft.Maui.Controls.ViewCell.ViewCell() -> void
Microsoft.Maui.Controls.ViewExtensions
Microsoft.Maui.Controls.ViewState
Microsoft.Maui.Controls.ViewState.Default = 0 -> Microsoft.Maui.Controls.ViewState
Microsoft.Maui.Controls.ViewState.Prelight = 1 -> Microsoft.Maui.Controls.ViewState
Microsoft.Maui.Controls.ViewState.Pressed = 2 -> Microsoft.Maui.Controls.ViewState
Microsoft.Maui.Controls.VisibilityExtensions
Microsoft.Maui.Controls.VisualAttribute
Microsoft.Maui.Controls.VisualElement
Microsoft.Maui.Controls.VisualElement.~VisualElement() -> void
Microsoft.Maui.Controls.VisualElement.AnchorX.get -> double
Microsoft.Maui.Controls.VisualElement.AnchorX.set -> void
Microsoft.Maui.Controls.VisualElement.AnchorY.get -> double
Microsoft.Maui.Controls.VisualElement.AnchorY.set -> void
Microsoft.Maui.Controls.VisualElement.Arrange(Microsoft.Maui.Graphics.Rect bounds) -> void
Microsoft.Maui.Controls.VisualElement.BatchBegin() -> void
Microsoft.Maui.Controls.VisualElement.BatchCommit() -> void
Microsoft.Maui.Controls.VisualElement.BatchCommitted -> System.EventHandler<Microsoft.Maui.Controls.Internals.EventArg<Microsoft.Maui.Controls.VisualElement>>
Microsoft.Maui.Controls.VisualElement.Batched.get -> bool
Microsoft.Maui.Controls.VisualElement.Bounds.get -> Microsoft.Maui.Graphics.Rect
Microsoft.Maui.Controls.VisualElement.ChildrenReordered -> System.EventHandler
Microsoft.Maui.Controls.VisualElement.DesiredSize.get -> Microsoft.Maui.Graphics.Size
Microsoft.Maui.Controls.VisualElement.DesiredSize.set -> void
Microsoft.Maui.Controls.VisualElement.DisableLayout.get -> bool
Microsoft.Maui.Controls.VisualElement.DisableLayout.set -> void
Microsoft.Maui.Controls.VisualElement.FlowDirection.get -> Microsoft.Maui.FlowDirection
Microsoft.Maui.Controls.VisualElement.FlowDirection.set -> void
Microsoft.Maui.Controls.VisualElement.Focus() -> bool
Microsoft.Maui.Controls.VisualElement.FocusChangeRequested -> System.EventHandler<Microsoft.Maui.Controls.VisualElement.FocusRequestArgs>
Microsoft.Maui.Controls.VisualElement.Focused -> System.EventHandler<Microsoft.Maui.Controls.FocusEventArgs>
Microsoft.Maui.Controls.VisualElement.FocusRequestArgs
Microsoft.Maui.Controls.VisualElement.FocusRequestArgs.Focus.get -> bool
Microsoft.Maui.Controls.VisualElement.FocusRequestArgs.Focus.set -> void
Microsoft.Maui.Controls.VisualElement.FocusRequestArgs.FocusRequestArgs() -> void
Microsoft.Maui.Controls.VisualElement.FocusRequestArgs.Result.get -> bool
Microsoft.Maui.Controls.VisualElement.FocusRequestArgs.Result.set -> void
Microsoft.Maui.Controls.VisualElement.Frame.get -> Microsoft.Maui.Graphics.Rect
Microsoft.Maui.Controls.VisualElement.Frame.set -> void
Microsoft.Maui.Controls.VisualElement.Handler.get -> Microsoft.Maui.IViewHandler?
Microsoft.Maui.Controls.VisualElement.Handler.set -> void
Microsoft.Maui.Controls.VisualElement.Height.get -> double
Microsoft.Maui.Controls.VisualElement.HeightRequest.get -> double
Microsoft.Maui.Controls.VisualElement.HeightRequest.set -> void
Microsoft.Maui.Controls.VisualElement.InputTransparent.get -> bool
Microsoft.Maui.Controls.VisualElement.InputTransparent.set -> void
Microsoft.Maui.Controls.VisualElement.InvalidateMeasureNonVirtual(Microsoft.Maui.Controls.Internals.InvalidationTrigger trigger) -> void
Microsoft.Maui.Controls.VisualElement.IsEnabled.get -> bool
Microsoft.Maui.Controls.VisualElement.IsEnabled.set -> void
Microsoft.Maui.Controls.VisualElement.IsFocused.get -> bool
Microsoft.Maui.Controls.VisualElement.IsInPlatformLayout.get -> bool
Microsoft.Maui.Controls.VisualElement.IsInPlatformLayout.set -> void
Microsoft.Maui.Controls.VisualElement.IsLoaded.get -> bool
Microsoft.Maui.Controls.VisualElement.IsPlatformEnabled.get -> bool
Microsoft.Maui.Controls.VisualElement.IsPlatformEnabled.set -> void
Microsoft.Maui.Controls.VisualElement.IsPlatformStateConsistent.get -> bool
Microsoft.Maui.Controls.VisualElement.IsPlatformStateConsistent.set -> void
Microsoft.Maui.Controls.VisualElement.IsVisible.get -> bool
Microsoft.Maui.Controls.VisualElement.IsVisible.set -> void
Microsoft.Maui.Controls.VisualElement.Layout(Microsoft.Maui.Graphics.Rect bounds) -> void
Microsoft.Maui.Controls.VisualElement.Loaded -> System.EventHandler?
Microsoft.Maui.Controls.VisualElement.MaximumHeightRequest.get -> double
Microsoft.Maui.Controls.VisualElement.MaximumHeightRequest.set -> void
Microsoft.Maui.Controls.VisualElement.MaximumWidthRequest.get -> double
Microsoft.Maui.Controls.VisualElement.MaximumWidthRequest.set -> void
Microsoft.Maui.Controls.VisualElement.MeasureInvalidated -> System.EventHandler
Microsoft.Maui.Controls.VisualElement.MinimumHeightRequest.get -> double
Microsoft.Maui.Controls.VisualElement.MinimumHeightRequest.set -> void
Microsoft.Maui.Controls.VisualElement.MinimumWidthRequest.get -> double
Microsoft.Maui.Controls.VisualElement.MinimumWidthRequest.set -> void
Microsoft.Maui.Controls.VisualElement.OnChildrenReordered() -> void
Microsoft.Maui.Controls.VisualElement.Opacity.get -> double
Microsoft.Maui.Controls.VisualElement.Opacity.set -> void
Microsoft.Maui.Controls.VisualElement.PlatformSizeChanged() -> void
Microsoft.Maui.Controls.VisualElement.RefreshIsEnabledProperty() -> void
Microsoft.Maui.Controls.VisualElement.Rotation.get -> double
Microsoft.Maui.Controls.VisualElement.Rotation.set -> void
Microsoft.Maui.Controls.VisualElement.RotationX.get -> double
Microsoft.Maui.Controls.VisualElement.RotationX.set -> void
Microsoft.Maui.Controls.VisualElement.RotationY.get -> double
Microsoft.Maui.Controls.VisualElement.RotationY.set -> void
Microsoft.Maui.Controls.VisualElement.Scale.get -> double
Microsoft.Maui.Controls.VisualElement.Scale.set -> void
Microsoft.Maui.Controls.VisualElement.ScaleX.get -> double
Microsoft.Maui.Controls.VisualElement.ScaleX.set -> void
Microsoft.Maui.Controls.VisualElement.ScaleY.get -> double
Microsoft.Maui.Controls.VisualElement.ScaleY.set -> void
Microsoft.Maui.Controls.VisualElement.Shadow.get -> Microsoft.Maui.Controls.Shadow!
Microsoft.Maui.Controls.VisualElement.Shadow.set -> void
Microsoft.Maui.Controls.VisualElement.SizeAllocated(double width, double height) -> void
Microsoft.Maui.Controls.VisualElement.SizeChanged -> System.EventHandler
Microsoft.Maui.Controls.VisualElement.TranslationX.get -> double
Microsoft.Maui.Controls.VisualElement.TranslationX.set -> void
Microsoft.Maui.Controls.VisualElement.TranslationY.get -> double
Microsoft.Maui.Controls.VisualElement.TranslationY.set -> void
Microsoft.Maui.Controls.VisualElement.Unfocus() -> void
Microsoft.Maui.Controls.VisualElement.Unfocused -> System.EventHandler<Microsoft.Maui.Controls.FocusEventArgs>
Microsoft.Maui.Controls.VisualElement.Unloaded -> System.EventHandler?
Microsoft.Maui.Controls.VisualElement.VisibilityConverter
Microsoft.Maui.Controls.VisualElement.VisibilityConverter.VisibilityConverter() -> void
Microsoft.Maui.Controls.VisualElement.VisualElement() -> void
Microsoft.Maui.Controls.VisualElement.Width.get -> double
Microsoft.Maui.Controls.VisualElement.WidthRequest.get -> double
Microsoft.Maui.Controls.VisualElement.WidthRequest.set -> void
Microsoft.Maui.Controls.VisualElement.X.get -> double
Microsoft.Maui.Controls.VisualElement.Y.get -> double
Microsoft.Maui.Controls.VisualElement.ZIndex.get -> int
Microsoft.Maui.Controls.VisualElement.ZIndex.set -> void
Microsoft.Maui.Controls.VisualMarker
Microsoft.Maui.Controls.VisualMarker.DefaultVisual
Microsoft.Maui.Controls.VisualMarker.DefaultVisual.DefaultVisual() -> void
Microsoft.Maui.Controls.VisualState
Microsoft.Maui.Controls.VisualState.VisualState() -> void
Microsoft.Maui.Controls.VisualStateGroup
Microsoft.Maui.Controls.VisualStateGroup.VisualStateGroup() -> void
Microsoft.Maui.Controls.VisualStateGroupList
Microsoft.Maui.Controls.VisualStateGroupList.Clear() -> void
Microsoft.Maui.Controls.VisualStateGroupList.Count.get -> int
Microsoft.Maui.Controls.VisualStateGroupList.IsReadOnly.get -> bool
Microsoft.Maui.Controls.VisualStateGroupList.RemoveAt(int index) -> void
Microsoft.Maui.Controls.VisualStateGroupList.VisualStateGroupList() -> void
Microsoft.Maui.Controls.VisualStateGroupList.VisualStateGroupList(bool isDefault) -> void
Microsoft.Maui.Controls.VisualStateManager
Microsoft.Maui.Controls.VisualStateManager.CommonStates
Microsoft.Maui.Controls.VisualStateManager.CommonStates.CommonStates() -> void
Microsoft.Maui.Controls.VisualTypeConverter
Microsoft.Maui.Controls.VisualTypeConverter.VisualTypeConverter() -> void
Microsoft.Maui.Controls.WebNavigatedEventArgs
Microsoft.Maui.Controls.WebNavigatedEventArgs.Result.get -> Microsoft.Maui.WebNavigationResult
Microsoft.Maui.Controls.WebNavigatingEventArgs
Microsoft.Maui.Controls.WebNavigatingEventArgs.Cancel.get -> bool
Microsoft.Maui.Controls.WebNavigatingEventArgs.Cancel.set -> void
Microsoft.Maui.Controls.WebNavigationEventArgs
Microsoft.Maui.Controls.WebNavigationEventArgs.NavigationEvent.get -> Microsoft.Maui.WebNavigationEvent
Microsoft.Maui.Controls.WebView
Microsoft.Maui.Controls.WebView.CanGoBack.get -> bool
Microsoft.Maui.Controls.WebView.CanGoForward.get -> bool
Microsoft.Maui.Controls.WebView.GoBack() -> void
Microsoft.Maui.Controls.WebView.GoForward() -> void
Microsoft.Maui.Controls.WebView.Navigated -> System.EventHandler<Microsoft.Maui.Controls.WebNavigatedEventArgs>
Microsoft.Maui.Controls.WebView.Navigating -> System.EventHandler<Microsoft.Maui.Controls.WebNavigatingEventArgs>
Microsoft.Maui.Controls.WebView.Reload() -> void
Microsoft.Maui.Controls.WebView.WebView() -> void
Microsoft.Maui.Controls.WebViewSource
Microsoft.Maui.Controls.WebViewSource.OnSourceChanged() -> void
Microsoft.Maui.Controls.WebViewSource.WebViewSource() -> void
Microsoft.Maui.Controls.WebViewSourceTypeConverter
Microsoft.Maui.Controls.WebViewSourceTypeConverter.WebViewSourceTypeConverter() -> void
Microsoft.Maui.Controls.Window
Microsoft.Maui.Controls.Window.Activated -> System.EventHandler?
Microsoft.Maui.Controls.Window.AddOverlay(Microsoft.Maui.IWindowOverlay! overlay) -> bool
Microsoft.Maui.Controls.Window.Backgrounding -> System.EventHandler<Microsoft.Maui.Controls.BackgroundingEventArgs!>?
Microsoft.Maui.Controls.Window.Created -> System.EventHandler?
Microsoft.Maui.Controls.Window.Deactivated -> System.EventHandler?
Microsoft.Maui.Controls.Window.Destroying -> System.EventHandler?
Microsoft.Maui.Controls.Window.DisplayDensity.get -> float
Microsoft.Maui.Controls.Window.DisplayDensityChanged -> System.EventHandler<Microsoft.Maui.Controls.DisplayDensityChangedEventArgs!>?
Microsoft.Maui.Controls.Window.FlowDirection.get -> Microsoft.Maui.FlowDirection
Microsoft.Maui.Controls.Window.FlowDirection.set -> void
Microsoft.Maui.Controls.Window.Height.get -> double
Microsoft.Maui.Controls.Window.Height.set -> void
Microsoft.Maui.Controls.Window.MaximumHeight.get -> double
Microsoft.Maui.Controls.Window.MaximumHeight.set -> void
Microsoft.Maui.Controls.Window.MaximumWidth.get -> double
Microsoft.Maui.Controls.Window.MaximumWidth.set -> void
Microsoft.Maui.Controls.Window.MinimumHeight.get -> double
Microsoft.Maui.Controls.Window.MinimumHeight.set -> void
Microsoft.Maui.Controls.Window.MinimumWidth.get -> double
Microsoft.Maui.Controls.Window.MinimumWidth.set -> void
Microsoft.Maui.Controls.Window.ModalPopped -> System.EventHandler<Microsoft.Maui.Controls.ModalPoppedEventArgs!>?
Microsoft.Maui.Controls.Window.ModalPopping -> System.EventHandler<Microsoft.Maui.Controls.ModalPoppingEventArgs!>?
Microsoft.Maui.Controls.Window.ModalPushed -> System.EventHandler<Microsoft.Maui.Controls.ModalPushedEventArgs!>?
Microsoft.Maui.Controls.Window.ModalPushing -> System.EventHandler<Microsoft.Maui.Controls.ModalPushingEventArgs!>?
Microsoft.Maui.Controls.Window.Overlays.get -> System.Collections.Generic.IReadOnlyCollection<Microsoft.Maui.IWindowOverlay!>!
Microsoft.Maui.Controls.Window.Page.get -> Microsoft.Maui.Controls.Page?
Microsoft.Maui.Controls.Window.Page.set -> void
Microsoft.Maui.Controls.Window.PopCanceled -> System.EventHandler?
Microsoft.Maui.Controls.Window.RemoveOverlay(Microsoft.Maui.IWindowOverlay! overlay) -> bool
Microsoft.Maui.Controls.Window.Resumed -> System.EventHandler?
Microsoft.Maui.Controls.Window.SizeChanged -> System.EventHandler?
Microsoft.Maui.Controls.Window.Stopped -> System.EventHandler?
Microsoft.Maui.Controls.Window.Title.get -> string?
Microsoft.Maui.Controls.Window.Title.set -> void
Microsoft.Maui.Controls.Window.VisualDiagnosticsOverlay.get -> Microsoft.Maui.IVisualDiagnosticsOverlay!
Microsoft.Maui.Controls.Window.Width.get -> double
Microsoft.Maui.Controls.Window.Width.set -> void
Microsoft.Maui.Controls.Window.Window() -> void
Microsoft.Maui.Controls.Window.Window(Microsoft.Maui.Controls.Page! page) -> void
Microsoft.Maui.Controls.Window.X.get -> double
Microsoft.Maui.Controls.Window.X.set -> void
Microsoft.Maui.Controls.Window.Y.get -> double
Microsoft.Maui.Controls.Window.Y.set -> void
Microsoft.Maui.Controls.Xaml.AcceptEmptyServiceProviderAttribute
Microsoft.Maui.Controls.Xaml.AcceptEmptyServiceProviderAttribute.AcceptEmptyServiceProviderAttribute() -> void
Microsoft.Maui.Controls.Xaml.Diagnostics.BindingBaseErrorEventArgs
Microsoft.Maui.Controls.Xaml.Diagnostics.BindingDiagnostics
Microsoft.Maui.Controls.Xaml.Diagnostics.BindingDiagnostics.BindingDiagnostics() -> void
Microsoft.Maui.Controls.Xaml.Diagnostics.BindingErrorEventArgs
Microsoft.Maui.Controls.Xaml.IMarkupExtension
Microsoft.Maui.Controls.Xaml.IMarkupExtension<T>
Microsoft.Maui.Controls.Xaml.Internals.INativeBindingService
Microsoft.Maui.Controls.Xaml.Internals.INativeValueConverterService
Microsoft.Maui.Controls.Xaml.IProvideValueTarget
Microsoft.Maui.Controls.Xaml.IReferenceProvider
Microsoft.Maui.Controls.Xaml.IRootObjectProvider
Microsoft.Maui.Controls.Xaml.IValueProvider
Microsoft.Maui.Controls.Xaml.IXamlTypeResolver
Microsoft.Maui.Controls.Xaml.IXmlLineInfoProvider
Microsoft.Maui.Controls.Xaml.XamlParseException
Microsoft.Maui.Controls.Xaml.XamlParseException.XamlParseException() -> void
Microsoft.Maui.Controls.Xaml.XamlResourceIdAttribute
Microsoft.Maui.Controls.Xaml.XmlLineInfo
Microsoft.Maui.Controls.Xaml.XmlLineInfo.HasLineInfo() -> bool
Microsoft.Maui.Controls.Xaml.XmlLineInfo.LineNumber.get -> int
Microsoft.Maui.Controls.Xaml.XmlLineInfo.LinePosition.get -> int
Microsoft.Maui.Controls.Xaml.XmlLineInfo.XmlLineInfo() -> void
Microsoft.Maui.Controls.Xaml.XmlLineInfo.XmlLineInfo(int linenumber, int lineposition) -> void
Microsoft.Maui.Controls.XmlnsDefinitionAttribute
Microsoft.Maui.Controls.XmlnsPrefixAttribute
Microsoft.Maui.Foldable.FoldEventArgs
Microsoft.Maui.Foldable.FoldEventArgs.FoldEventArgs() -> void
Microsoft.Maui.Foldable.FoldEventArgs.FoldingFeatureBounds.get -> Microsoft.Maui.Graphics.Rect
Microsoft.Maui.Foldable.FoldEventArgs.FoldingFeatureBounds.set -> void
Microsoft.Maui.Foldable.FoldEventArgs.isSeparating.get -> bool
Microsoft.Maui.Foldable.FoldEventArgs.isSeparating.set -> void
Microsoft.Maui.Foldable.FoldEventArgs.WindowBounds.get -> Microsoft.Maui.Graphics.Rect
Microsoft.Maui.Foldable.FoldEventArgs.WindowBounds.set -> void
override Microsoft.Maui.Controls.AbsoluteLayout.OnClear() -> void
override Microsoft.Maui.Controls.Accelerator.GetHashCode() -> int
override Microsoft.Maui.Controls.Animation.Reset() -> void
override Microsoft.Maui.Controls.Application.OnParentSet() -> void
override Microsoft.Maui.Controls.Border.OnPropertyChanged(string? propertyName = null) -> void
override Microsoft.Maui.Controls.BoxView.OnMeasure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
override Microsoft.Maui.Controls.BoxView.OnPropertyChanged(string? propertyName = null) -> void
override Microsoft.Maui.Controls.Button.ChangeVisualState() -> void
override Microsoft.Maui.Controls.Button.IsEnabledCore.get -> bool
override Microsoft.Maui.Controls.Button.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.Cell.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.Cell.OnParentSet() -> void
override Microsoft.Maui.Controls.CheckBox.ChangeVisualState() -> void
override Microsoft.Maui.Controls.Compatibility.AbsoluteLayout.LayoutChildren(double x, double y, double width, double height) -> void
override Microsoft.Maui.Controls.Compatibility.AbsoluteLayout.OnMeasure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
override Microsoft.Maui.Controls.Compatibility.FlexLayout.LayoutChildren(double x, double y, double width, double height) -> void
override Microsoft.Maui.Controls.Compatibility.FlexLayout.OnMeasure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
override Microsoft.Maui.Controls.Compatibility.FlexLayout.OnParentSet() -> void
override Microsoft.Maui.Controls.Compatibility.Grid.LayoutChildren(double x, double y, double width, double height) -> void
override Microsoft.Maui.Controls.Compatibility.Grid.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.Compatibility.Grid.OnMeasure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
override Microsoft.Maui.Controls.Compatibility.Layout.ArrangeOverride(Microsoft.Maui.Graphics.Rect bounds) -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.Compatibility.Layout.InvalidateMeasureOverride() -> void
override Microsoft.Maui.Controls.Compatibility.Layout.Measure(double widthConstraint, double heightConstraint, Microsoft.Maui.Controls.MeasureFlags flags = Microsoft.Maui.Controls.MeasureFlags.None) -> Microsoft.Maui.SizeRequest
override Microsoft.Maui.Controls.Compatibility.Layout.MeasureOverride(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.Compatibility.Layout.OnSizeAllocated(double width, double height) -> void
override Microsoft.Maui.Controls.Compatibility.RelativeLayout.LayoutChildren(double x, double y, double width, double height) -> void
override Microsoft.Maui.Controls.Compatibility.RelativeLayout.OnMeasure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
override Microsoft.Maui.Controls.Compatibility.StackLayout.LayoutChildren(double x, double y, double width, double height) -> void
override Microsoft.Maui.Controls.Compatibility.StackLayout.OnMeasure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
override Microsoft.Maui.Controls.ContentPage.ArrangeOverride(Microsoft.Maui.Graphics.Rect bounds) -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.ContentPage.InvalidateMeasureOverride() -> void
override Microsoft.Maui.Controls.ContentPage.MeasureOverride(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.ContentPage.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.ContentPresenter.ArrangeOverride(Microsoft.Maui.Graphics.Rect bounds) -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.ContentPresenter.LayoutChildren(double x, double y, double width, double height) -> void
override Microsoft.Maui.Controls.ContentPresenter.MeasureOverride(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.ContentPresenter.OnMeasure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
override Microsoft.Maui.Controls.ContentView.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.Editor.ArrangeOverride(Microsoft.Maui.Graphics.Rect bounds) -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.Editor.MeasureOverride(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.Element.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.FileImageSource.IsEmpty.get -> bool
override Microsoft.Maui.Controls.FlexLayout.OnClear() -> void
override Microsoft.Maui.Controls.FlexLayout.OnParentSet() -> void
override Microsoft.Maui.Controls.FlyoutPage.LayoutChildren(double x, double y, double width, double height) -> void
override Microsoft.Maui.Controls.FlyoutPage.OnAppearing() -> void
override Microsoft.Maui.Controls.FlyoutPage.OnBackButtonPressed() -> bool
override Microsoft.Maui.Controls.FlyoutPage.OnDisappearing() -> void
override Microsoft.Maui.Controls.FlyoutPage.OnParentSet() -> void
override Microsoft.Maui.Controls.FontImageSource.IsEmpty.get -> bool
override Microsoft.Maui.Controls.FormattedString.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.GradientBrush.IsEmpty.get -> bool
override Microsoft.Maui.Controls.GradientBrush.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.GradientStop.GetHashCode() -> int
override Microsoft.Maui.Controls.Grid.InvalidateMeasure() -> void
override Microsoft.Maui.Controls.Grid.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.Grid.OnClear() -> void
override Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer.Draw(Android.Graphics.Canvas? canvas) -> void
override Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer.OnLayout(bool changed, int l, int t, int r, int b) -> void
override Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer.OnMeasure(int widthMeasureSpec, int heightMeasureSpec) -> void
override Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer.OnSizeChanged(int w, int h, int oldw, int oldh) -> void
override Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer.OnTouchEvent(Android.Views.MotionEvent? e) -> bool
override Microsoft.Maui.Controls.Handlers.Compatibility.ListViewRenderer.GetDesiredSize(double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
override Microsoft.Maui.Controls.Handlers.Compatibility.ListViewRenderer.MinimumSize() -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.Handlers.Compatibility.ListViewRenderer.OnAttachedToWindow() -> void
override Microsoft.Maui.Controls.Handlers.Compatibility.ListViewRenderer.OnDetachedFromWindow() -> void
override Microsoft.Maui.Controls.Handlers.Compatibility.ListViewRenderer.OnLayout(bool changed, int l, int t, int r, int b) -> void
override Microsoft.Maui.Controls.Handlers.Compatibility.TableViewModelRenderer.AreAllItemsEnabled() -> bool
override Microsoft.Maui.Controls.Handlers.Compatibility.TableViewModelRenderer.Count.get -> int
override Microsoft.Maui.Controls.Handlers.Compatibility.TableViewModelRenderer.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Handlers.Compatibility.TableViewModelRenderer.GetItemId(int position) -> long
override Microsoft.Maui.Controls.Handlers.Compatibility.TableViewModelRenderer.GetItemViewType(int position) -> int
override Microsoft.Maui.Controls.Handlers.Compatibility.TableViewModelRenderer.IsEnabled(int position) -> bool
override Microsoft.Maui.Controls.Handlers.Compatibility.TableViewModelRenderer.ViewTypeCount.get -> int
override Microsoft.Maui.Controls.Handlers.Compatibility.TableViewRenderer.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Handlers.Compatibility.TableViewRenderer.GetDesiredSize(double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
override Microsoft.Maui.Controls.Handlers.Compatibility.TableViewRenderer.MinimumSize() -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.Handlers.Compatibility.TableViewRenderer.OnAttachedToWindow() -> void
override Microsoft.Maui.Controls.Handlers.Compatibility.TableViewRenderer.OnMeasure(int widthMeasureSpec, int heightMeasureSpec) -> void
override Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.OnLayout(bool changed, int l, int t, int r, int b) -> void
override Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.OnMeasure(int widthMeasureSpec, int heightMeasureSpec) -> void
override Microsoft.Maui.Controls.Handlers.Items.CarouselViewAdapter<TItemsView, TItemsViewSource>.GetItemViewType(int position) -> int
override Microsoft.Maui.Controls.Handlers.Items.CarouselViewAdapter<TItemsView, TItemsViewSource>.ItemCount.get -> int
override Microsoft.Maui.Controls.Handlers.Items.CarouselViewHandler.GetDesiredSize(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.Handlers.Items.CarouselViewHandler.PlatformArrange(Microsoft.Maui.Graphics.Rect frame) -> void
override Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.GetItemViewType(int position) -> int
override Microsoft.Maui.Controls.Handlers.Items.EmptyViewAdapter.ItemCount.get -> int
override Microsoft.Maui.Controls.Handlers.Items.GroupableItemsViewAdapter<TItemsView, TItemsViewSource>.CreateItemsSource() -> TItemsViewSource
override Microsoft.Maui.Controls.Handlers.Items.GroupableItemsViewAdapter<TItemsView, TItemsViewSource>.GetItemViewType(int position) -> int
override Microsoft.Maui.Controls.Handlers.Items.ItemContentView.OnLayout(bool changed, int l, int t, int r, int b) -> void
override Microsoft.Maui.Controls.Handlers.Items.ItemContentView.OnMeasure(int widthMeasureSpec, int heightMeasureSpec) -> void
override Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<TItemsView, TItemsViewSource>.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<TItemsView, TItemsViewSource>.GetItemId(int position) -> long
override Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<TItemsView, TItemsViewSource>.GetItemViewType(int position) -> int
override Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<TItemsView, TItemsViewSource>.ItemCount.get -> int
override Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>.GetDesiredSize(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.Handlers.Items.ItemsViewHandler<TItemsView>.PlatformArrange(Microsoft.Maui.Graphics.Rect frame) -> void
override Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView.OnAttachedToWindow() -> void
override Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView.OnDetachedFromWindow() -> void
override Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView.OnMeasure(int widthMeasureSpec, int heightMeasureSpec) -> void
override Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView.UpdateAdapter() -> void
override Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView.UpdateItemSpacing() -> void
override Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView.UpdateItemsSource() -> void
override Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.OnLayout(bool changed, int l, int t, int r, int b) -> void
override Microsoft.Maui.Controls.Handlers.Items.RecyclerViewScrollListener<TItemsView, TItemsViewSource>.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Handlers.Items.SimpleItemTouchHelperCallback.IsLongPressDragEnabled.get -> bool
override Microsoft.Maui.Controls.Handlers.Items.StructuredItemsViewAdapter<TItemsView, TItemsViewSource>.GetItemViewType(int position) -> int
override Microsoft.Maui.Controls.Handlers.Items.TemplatedItemViewHolder.OnSelectedChanged() -> void
override Microsoft.Maui.Controls.Handlers.Items.TemplatedItemViewHolder.UseDefaultSelectionColor.get -> bool
override Microsoft.Maui.Controls.Image.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.Image.OnMeasure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
override Microsoft.Maui.Controls.ImageButton.ChangeVisualState() -> void
override Microsoft.Maui.Controls.ImageButton.IsEnabledCore.get -> bool
override Microsoft.Maui.Controls.ImageButton.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.ImageButton.OnMeasure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
override Microsoft.Maui.Controls.ImageCell.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.IndicatorView.OnMeasure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
override Microsoft.Maui.Controls.ItemsView.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.ItemsView.OnMeasure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
override Microsoft.Maui.Controls.Label.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.Layout.InvalidateMeasureOverride() -> void
override Microsoft.Maui.Controls.Layout.Measure(double widthConstraint, double heightConstraint, Microsoft.Maui.Controls.MeasureFlags flags = Microsoft.Maui.Controls.MeasureFlags.None) -> Microsoft.Maui.SizeRequest
override Microsoft.Maui.Controls.LayoutOptions.GetHashCode() -> int
override Microsoft.Maui.Controls.LinearGradientBrush.IsEmpty.get -> bool
override Microsoft.Maui.Controls.ListView.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.ListView.OnMeasure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
override Microsoft.Maui.Controls.MultiPage<T>.OnBackButtonPressed() -> bool
override Microsoft.Maui.Controls.NavigationPage.LayoutChildren(double x, double y, double width, double height) -> void
override Microsoft.Maui.Controls.NavigationPage.OnBackButtonPressed() -> bool
override Microsoft.Maui.Controls.NullEffect.OnAttached() -> void
override Microsoft.Maui.Controls.NullEffect.OnDetached() -> void
override Microsoft.Maui.Controls.Page.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.Page.OnParentSet() -> void
override Microsoft.Maui.Controls.Page.OnSizeAllocated(double width, double height) -> void
override Microsoft.Maui.Controls.Platform.ColorChangeRevealDrawable.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ContainerView.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ContainerView.OnLayout(bool changed, int l, int t, int r, int b) -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ContainerView.OnMeasure(int widthMeasureSpec, int heightMeasureSpec) -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellContentFragment.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellContentFragment.OnDestroy() -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellContentFragment.OnResume() -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.ElementViewHolder.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.GetItemViewType(int position) -> int
override Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRecyclerAdapter.ItemCount.get -> int
override Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRenderer.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.HeaderContainer.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.HeaderContainer.OnLayout(bool changed, int l, int t, int r, int b) -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.HeaderContainer.OnMeasure(int widthMeasureSpec, int heightMeasureSpec) -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.OnDestroy() -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.OnShellSectionChanged() -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.OnDestroy() -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchView.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchView.OnAttachedToWindow() -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchView.OnLayout(bool changed, int left, int top, int right, int bottom) -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchView.OnMeasure(int widthMeasureSpec, int heightMeasureSpec) -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchViewAdapter.Count.get -> int
override Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchViewAdapter.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellSearchViewAdapter.GetItemId(int position) -> long
override Microsoft.Maui.Controls.Platform.Compatibility.ShellSectionRenderer.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellSectionRenderer.OnDestroy() -> void
override Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.Dispose(bool disposing) -> void
override Microsoft.Maui.Controls.Platform.ControlsAccessibilityDelegate.OnInitializeAccessibilityNodeInfo(Android.Views.View! host, AndroidX.Core.View.Accessibility.AccessibilityNodeInfoCompat! info) -> void
override Microsoft.Maui.Controls.Platform.GenericAnimatorListener.JavaFinalize() -> void
override Microsoft.Maui.Controls.RadialGradientBrush.IsEmpty.get -> bool
override Microsoft.Maui.Controls.RadioButton.ChangeVisualState() -> void
override Microsoft.Maui.Controls.RadioButton.OnApplyTemplate() -> void
override Microsoft.Maui.Controls.RadioButton.OnMeasure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
override Microsoft.Maui.Controls.RefreshView.IsEnabledCore.get -> bool
override Microsoft.Maui.Controls.Region.GetHashCode() -> int
override Microsoft.Maui.Controls.RoutingEffect.OnAttached() -> void
override Microsoft.Maui.Controls.RoutingEffect.OnDetached() -> void
override Microsoft.Maui.Controls.ScrollView.ArrangeOverride(Microsoft.Maui.Graphics.Rect bounds) -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.ScrollView.LayoutChildren(double x, double y, double width, double height) -> void
override Microsoft.Maui.Controls.ScrollView.MeasureOverride(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.ScrollView.OnMeasure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
override Microsoft.Maui.Controls.SearchBar.IsEnabledCore.get -> bool
override Microsoft.Maui.Controls.Shapes.Matrix.GetHashCode() -> int
override Microsoft.Maui.Controls.Shapes.Shape.MeasureOverride(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.Shapes.Shape.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.Shell.LayoutChildren(double x, double y, double width, double height) -> void
override Microsoft.Maui.Controls.Shell.OnBackButtonPressed() -> bool
override Microsoft.Maui.Controls.Shell.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.ShellAppearance.GetHashCode() -> int
override Microsoft.Maui.Controls.ShellItem.OnParentSet() -> void
override Microsoft.Maui.Controls.ShellSection.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.ShellSection.OnParentSet() -> void
override Microsoft.Maui.Controls.SolidColorBrush.GetHashCode() -> int
override Microsoft.Maui.Controls.SolidColorBrush.IsEmpty.get -> bool
override Microsoft.Maui.Controls.Span.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.StreamImageSource.IsEmpty.get -> bool
override Microsoft.Maui.Controls.SwipeView.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.SwipeView.OnChildAdded(Microsoft.Maui.Controls.Element! child) -> void
override Microsoft.Maui.Controls.SwipeView.OnChildRemoved(Microsoft.Maui.Controls.Element! child, int oldLogicalIndex) -> void
override Microsoft.Maui.Controls.Switch.ChangeVisualState() -> void
override Microsoft.Maui.Controls.TabbedPage.LayoutChildren(double x, double y, double width, double height) -> void
override Microsoft.Maui.Controls.TableSectionBase<T>.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.TableView.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.TableView.OnMeasure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
override Microsoft.Maui.Controls.TemplatedView.ArrangeOverride(Microsoft.Maui.Graphics.Rect bounds) -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.TemplatedView.LayoutChildren(double x, double y, double width, double height) -> void
override Microsoft.Maui.Controls.TemplatedView.MeasureOverride(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
override Microsoft.Maui.Controls.TemplatedView.OnMeasure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
override Microsoft.Maui.Controls.TextCell.OnTapped() -> void
override Microsoft.Maui.Controls.UriImageSource.IsEmpty.get -> bool
override Microsoft.Maui.Controls.View.ChangeVisualState() -> void
override Microsoft.Maui.Controls.View.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.VisualElement.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.VisualState.GetHashCode() -> int
override Microsoft.Maui.Controls.VisualStateGroup.GetHashCode() -> int
override Microsoft.Maui.Controls.VisualStateGroupList.GetHashCode() -> int
override Microsoft.Maui.Controls.WebView.OnBindingContextChanged() -> void
override Microsoft.Maui.Controls.Window.OnPropertyChanged(string? propertyName = null) -> void
override sealed Microsoft.Maui.Controls.PlatformBehavior<TView, TPlatformView>.OnAttachedTo(Microsoft.Maui.Controls.BindableObject! bindable) -> void
override sealed Microsoft.Maui.Controls.PlatformBehavior<TView, TPlatformView>.OnAttachedTo(TView! bindable) -> void
override sealed Microsoft.Maui.Controls.PlatformBehavior<TView, TPlatformView>.OnDetachingFrom(Microsoft.Maui.Controls.BindableObject! bindable) -> void
override sealed Microsoft.Maui.Controls.PlatformBehavior<TView, TPlatformView>.OnDetachingFrom(TView! bindable) -> void
static Microsoft.Maui.Controls.AbsoluteLayout.AutoSize -> double
static Microsoft.Maui.Controls.Application.AccentColor.get -> Microsoft.Maui.Graphics.Color?
static Microsoft.Maui.Controls.Application.AccentColor.set -> void
static Microsoft.Maui.Controls.Application.Current.get -> Microsoft.Maui.Controls.Application?
static Microsoft.Maui.Controls.Application.Current.set -> void
static Microsoft.Maui.Controls.Application.SetCurrentApplication(Microsoft.Maui.Controls.Application! value) -> void
static Microsoft.Maui.Controls.Border.ContentChanged(Microsoft.Maui.Controls.BindableObject! bindable, object! oldValue, object! newValue) -> void
static Microsoft.Maui.Controls.Border.StrokeThicknessChanged(Microsoft.Maui.Controls.BindableObject! bindable, object! oldValue, object! newValue) -> void
static Microsoft.Maui.Controls.Compatibility.AbsoluteLayout.AutoSize.get -> double
static Microsoft.Maui.Controls.DesignMode.IsDesignModeEnabled.get -> bool
static Microsoft.Maui.Controls.Device.FlowDirection.get -> Microsoft.Maui.FlowDirection
static Microsoft.Maui.Controls.Device.Idiom.get -> Microsoft.Maui.Controls.TargetIdiom
static Microsoft.Maui.Controls.Device.IsInvokeRequired.get -> bool
static Microsoft.Maui.Controls.Element.MapAutomationPropertiesExcludedWithChildren(Microsoft.Maui.IElementHandler! handler, Microsoft.Maui.Controls.Element! element) -> void
static Microsoft.Maui.Controls.Element.MapAutomationPropertiesIsInAccessibleTree(Microsoft.Maui.IElementHandler! handler, Microsoft.Maui.Controls.Element! element) -> void
static Microsoft.Maui.Controls.FlyoutPage.ControlsFlyoutPageMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.IFlyoutView!, Microsoft.Maui.Handlers.FlyoutViewHandler!>!
static Microsoft.Maui.Controls.FontExtensions.GetFontAttributes(this Microsoft.Maui.Font font) -> Microsoft.Maui.Controls.FontAttributes
static Microsoft.Maui.Controls.FontExtensions.ToFont(this Microsoft.Maui.Controls.Internals.IFontElement! element, double? defaultSize = null) -> Microsoft.Maui.Font
static Microsoft.Maui.Controls.FontExtensions.WithAttributes(this Microsoft.Maui.Font font, Microsoft.Maui.Controls.FontAttributes attributes) -> Microsoft.Maui.Font
static Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer.CommandMapper -> Microsoft.Maui.CommandMapper<Microsoft.Maui.Controls.Frame!, Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer!>!
static Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer.Mapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.Controls.Frame!, Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer!>!
static Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.MapAutomationId(Microsoft.Maui.IPlatformViewHandler! handler, TElement! view) -> void
static Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.MapAutomationPropertiesIsInAccessibleTree(Microsoft.Maui.IPlatformViewHandler! handler, TElement! view) -> void
static Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.MapBackground(Microsoft.Maui.IPlatformViewHandler! handler, TElement! view) -> void
static Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.MapBackgroundColor(Microsoft.Maui.IPlatformViewHandler! handler, TElement! view) -> void
static Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.MapIsEnabled(Microsoft.Maui.IPlatformViewHandler! handler, TElement! view) -> void
static Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.VisualElementRendererCommandMapper -> Microsoft.Maui.CommandMapper<TElement!, Microsoft.Maui.IPlatformViewHandler!>!
static Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.VisualElementRendererMapper -> Microsoft.Maui.IPropertyMapper<TElement!, Microsoft.Maui.IPlatformViewHandler!>!
static Microsoft.Maui.Controls.Internals.Profile.Enable() -> void
static Microsoft.Maui.Controls.Internals.Profile.IsEnabled.get -> bool
static Microsoft.Maui.Controls.Internals.Profile.Start() -> void
static Microsoft.Maui.Controls.Internals.Profile.Stop() -> void
static Microsoft.Maui.Controls.Internals.Registrar.RegisterStylesheets(Microsoft.Maui.Controls.InitializationFlags flags) -> void
static Microsoft.Maui.Controls.LayoutDirectionExtensions.ToFlowDirection(this Microsoft.Maui.ApplicationModel.LayoutDirection layoutDirection) -> Microsoft.Maui.FlowDirection
static Microsoft.Maui.Controls.LayoutOptions.operator !=(Microsoft.Maui.Controls.LayoutOptions left, Microsoft.Maui.Controls.LayoutOptions right) -> bool
static Microsoft.Maui.Controls.LayoutOptions.operator ==(Microsoft.Maui.Controls.LayoutOptions left, Microsoft.Maui.Controls.LayoutOptions right) -> bool
static Microsoft.Maui.Controls.Platform.Android.ImeActionExtensions.ToPlatform(this Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific.ImeFlags flags) -> Android.Views.InputMethods.ImeAction
static Microsoft.Maui.Controls.Platform.FontExtensions.ToTypeface(this Microsoft.Maui.Controls.Internals.IFontElement! self, Microsoft.Maui.IFontManager! fontManager) -> Android.Graphics.Typeface!
static Microsoft.Maui.Controls.Platform.FontExtensions.ToTypeface(this Microsoft.Maui.Font self, Microsoft.Maui.IFontManager! fontManager) -> Android.Graphics.Typeface!
static Microsoft.Maui.Controls.Platform.FontExtensions.ToTypeface<TFontElement>(this TFontElement! self) -> Android.Graphics.Typeface!
static Microsoft.Maui.Controls.Platform.FormattedStringExtensions.RecalculateSpanPositions(this Android.Widget.TextView! textView, Microsoft.Maui.Controls.Label! element, Android.Text.SpannableString! spannableString, Microsoft.Maui.SizeRequest finalSize) -> void
static Microsoft.Maui.Controls.Platform.FormattedStringExtensions.ToSpannableString(this Microsoft.Maui.Controls.FormattedString! formattedString, Microsoft.Maui.IFontManager! fontManager, Android.Text.TextPaint? textPaint = null, Android.Content.Context? context = null, double defaultLineHeight = 0, Microsoft.Maui.TextAlignment defaultHorizontalAlignment = Microsoft.Maui.TextAlignment.Start, Microsoft.Maui.Font? defaultFont = null, Microsoft.Maui.Graphics.Color? defaultColor = null, Microsoft.Maui.TextTransform defaultTextTransform = Microsoft.Maui.TextTransform.Default) -> Android.Text.SpannableString!
static Microsoft.Maui.Controls.Platform.FormattedStringExtensions.ToSpannableString(this Microsoft.Maui.Controls.Label! label) -> Android.Text.SpannableString!
static Microsoft.Maui.Controls.Platform.SemanticExtensions.UpdateSemanticNodeInfo(this Microsoft.Maui.Controls.View! virtualView, AndroidX.Core.View.Accessibility.AccessibilityNodeInfoCompat? info) -> void
static Microsoft.Maui.Controls.Platform.ShapesExtensions.UpdatePath(this Microsoft.Maui.Graphics.Platform.PlatformGraphicsView! platformView, Microsoft.Maui.IShapeView! shapeView) -> void
static Microsoft.Maui.Controls.RadioButton.MapContent(Microsoft.Maui.Handlers.IRadioButtonHandler! handler, Microsoft.Maui.Controls.RadioButton! radioButton) -> void
static Microsoft.Maui.Controls.RadioButton.MapContent(Microsoft.Maui.Handlers.RadioButtonHandler! handler, Microsoft.Maui.Controls.RadioButton! radioButton) -> void
static Microsoft.Maui.Controls.Region.operator !=(Microsoft.Maui.Controls.Region left, Microsoft.Maui.Controls.Region right) -> bool
static Microsoft.Maui.Controls.Region.operator ==(Microsoft.Maui.Controls.Region left, Microsoft.Maui.Controls.Region right) -> bool
static Microsoft.Maui.Controls.Shapes.Matrix.Identity.get -> Microsoft.Maui.Controls.Shapes.Matrix
static Microsoft.Maui.Controls.Shapes.Matrix.Multiply(Microsoft.Maui.Controls.Shapes.Matrix trans1, Microsoft.Maui.Controls.Shapes.Matrix trans2) -> Microsoft.Maui.Controls.Shapes.Matrix
static Microsoft.Maui.Controls.Shapes.Matrix.operator !=(Microsoft.Maui.Controls.Shapes.Matrix left, Microsoft.Maui.Controls.Shapes.Matrix right) -> bool
static Microsoft.Maui.Controls.Shapes.Matrix.operator *(Microsoft.Maui.Controls.Shapes.Matrix trans1, Microsoft.Maui.Controls.Shapes.Matrix trans2) -> Microsoft.Maui.Controls.Shapes.Matrix
static Microsoft.Maui.Controls.Shapes.Matrix.operator ==(Microsoft.Maui.Controls.Shapes.Matrix left, Microsoft.Maui.Controls.Shapes.Matrix right) -> bool
static Microsoft.Maui.Controls.Shapes.MatrixExtensions.ToMatrix(this System.Numerics.Matrix3x2 matrix3x2) -> Microsoft.Maui.Controls.Shapes.Matrix
static Microsoft.Maui.Controls.Shapes.MatrixExtensions.ToMatrix3X2(this Microsoft.Maui.Controls.Shapes.Matrix matrix) -> System.Numerics.Matrix3x2
static Microsoft.Maui.Controls.TabbedPage.MapIsSwipePagingEnabled(Microsoft.Maui.Handlers.ITabbedViewHandler! handler, Microsoft.Maui.Controls.TabbedPage! view) -> void
static Microsoft.Maui.Controls.Toolbar.ControlsToolbarMapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.Controls.Toolbar!, Microsoft.Maui.Handlers.ToolbarHandler!>!
static Microsoft.Maui.Controls.Toolbar.MapBackButtonTitle(Microsoft.Maui.Handlers.IToolbarHandler! arg1, Microsoft.Maui.Controls.Toolbar! arg2) -> void
static Microsoft.Maui.Controls.Toolbar.MapBackButtonTitle(Microsoft.Maui.Handlers.ToolbarHandler! arg1, Microsoft.Maui.Controls.Toolbar! arg2) -> void
static Microsoft.Maui.Controls.Toolbar.MapBackButtonVisible(Microsoft.Maui.Handlers.IToolbarHandler! arg1, Microsoft.Maui.Controls.Toolbar! arg2) -> void
static Microsoft.Maui.Controls.Toolbar.MapBackButtonVisible(Microsoft.Maui.Handlers.ToolbarHandler! arg1, Microsoft.Maui.Controls.Toolbar! arg2) -> void
static Microsoft.Maui.Controls.Toolbar.MapBarBackground(Microsoft.Maui.Handlers.IToolbarHandler! arg1, Microsoft.Maui.Controls.Toolbar! arg2) -> void
static Microsoft.Maui.Controls.Toolbar.MapBarBackground(Microsoft.Maui.Handlers.ToolbarHandler! arg1, Microsoft.Maui.Controls.Toolbar! arg2) -> void
static Microsoft.Maui.Controls.Toolbar.MapBarTextColor(Microsoft.Maui.Handlers.IToolbarHandler! arg1, Microsoft.Maui.Controls.Toolbar! arg2) -> void
static Microsoft.Maui.Controls.Toolbar.MapBarTextColor(Microsoft.Maui.Handlers.ToolbarHandler! arg1, Microsoft.Maui.Controls.Toolbar! arg2) -> void
static Microsoft.Maui.Controls.Toolbar.MapIconColor(Microsoft.Maui.Handlers.IToolbarHandler! arg1, Microsoft.Maui.Controls.Toolbar! arg2) -> void
static Microsoft.Maui.Controls.Toolbar.MapIconColor(Microsoft.Maui.Handlers.ToolbarHandler! arg1, Microsoft.Maui.Controls.Toolbar! arg2) -> void
static Microsoft.Maui.Controls.Toolbar.MapIsVisible(Microsoft.Maui.Handlers.IToolbarHandler! arg1, Microsoft.Maui.Controls.Toolbar! arg2) -> void
static Microsoft.Maui.Controls.Toolbar.MapIsVisible(Microsoft.Maui.Handlers.ToolbarHandler! arg1, Microsoft.Maui.Controls.Toolbar! arg2) -> void
static Microsoft.Maui.Controls.Toolbar.MapTitle(Microsoft.Maui.Handlers.IToolbarHandler! arg1, Microsoft.Maui.Controls.Toolbar! arg2) -> void
static Microsoft.Maui.Controls.Toolbar.MapTitle(Microsoft.Maui.Handlers.ToolbarHandler! arg1, Microsoft.Maui.Controls.Toolbar! arg2) -> void
static Microsoft.Maui.Controls.Toolbar.MapTitleIcon(Microsoft.Maui.Handlers.IToolbarHandler! arg1, Microsoft.Maui.Controls.Toolbar! arg2) -> void
static Microsoft.Maui.Controls.Toolbar.MapTitleIcon(Microsoft.Maui.Handlers.ToolbarHandler! arg1, Microsoft.Maui.Controls.Toolbar! arg2) -> void
static Microsoft.Maui.Controls.Toolbar.MapTitleView(Microsoft.Maui.Handlers.IToolbarHandler! arg1, Microsoft.Maui.Controls.Toolbar! arg2) -> void
static Microsoft.Maui.Controls.Toolbar.MapTitleView(Microsoft.Maui.Handlers.ToolbarHandler! arg1, Microsoft.Maui.Controls.Toolbar! arg2) -> void
static Microsoft.Maui.Controls.Toolbar.MapToolbarItems(Microsoft.Maui.Handlers.IToolbarHandler! arg1, Microsoft.Maui.Controls.Toolbar! arg2) -> void
static Microsoft.Maui.Controls.Toolbar.MapToolbarItems(Microsoft.Maui.Handlers.ToolbarHandler! arg1, Microsoft.Maui.Controls.Toolbar! arg2) -> void
static Microsoft.Maui.Controls.ToolTipProperties.GetText(Microsoft.Maui.Controls.BindableObject! bindable) -> object!
static Microsoft.Maui.Controls.ToolTipProperties.SetText(Microsoft.Maui.Controls.BindableObject! bindable, object! value) -> void
static Microsoft.Maui.Controls.ViewExtensions.CancelAnimations(this Microsoft.Maui.Controls.VisualElement! view) -> void
static Microsoft.Maui.Controls.ViewExtensions.FadeTo(this Microsoft.Maui.Controls.VisualElement! view, double opacity, uint length = 250, Microsoft.Maui.Easing? easing = null) -> System.Threading.Tasks.Task<bool>!
static Microsoft.Maui.Controls.ViewExtensions.LayoutTo(this Microsoft.Maui.Controls.VisualElement! view, Microsoft.Maui.Graphics.Rect bounds, uint length = 250, Microsoft.Maui.Easing? easing = null) -> System.Threading.Tasks.Task<bool>!
static Microsoft.Maui.Controls.ViewExtensions.RelRotateTo(this Microsoft.Maui.Controls.VisualElement! view, double drotation, uint length = 250, Microsoft.Maui.Easing? easing = null) -> System.Threading.Tasks.Task<bool>!
static Microsoft.Maui.Controls.ViewExtensions.RelScaleTo(this Microsoft.Maui.Controls.VisualElement! view, double dscale, uint length = 250, Microsoft.Maui.Easing? easing = null) -> System.Threading.Tasks.Task<bool>!
static Microsoft.Maui.Controls.ViewExtensions.RotateTo(this Microsoft.Maui.Controls.VisualElement! view, double rotation, uint length = 250, Microsoft.Maui.Easing? easing = null) -> System.Threading.Tasks.Task<bool>!
static Microsoft.Maui.Controls.ViewExtensions.RotateXTo(this Microsoft.Maui.Controls.VisualElement! view, double rotation, uint length = 250, Microsoft.Maui.Easing? easing = null) -> System.Threading.Tasks.Task<bool>!
static Microsoft.Maui.Controls.ViewExtensions.RotateYTo(this Microsoft.Maui.Controls.VisualElement! view, double rotation, uint length = 250, Microsoft.Maui.Easing? easing = null) -> System.Threading.Tasks.Task<bool>!
static Microsoft.Maui.Controls.ViewExtensions.ScaleTo(this Microsoft.Maui.Controls.VisualElement! view, double scale, uint length = 250, Microsoft.Maui.Easing? easing = null) -> System.Threading.Tasks.Task<bool>!
static Microsoft.Maui.Controls.ViewExtensions.ScaleXTo(this Microsoft.Maui.Controls.VisualElement! view, double scale, uint length = 250, Microsoft.Maui.Easing? easing = null) -> System.Threading.Tasks.Task<bool>!
static Microsoft.Maui.Controls.ViewExtensions.ScaleYTo(this Microsoft.Maui.Controls.VisualElement! view, double scale, uint length = 250, Microsoft.Maui.Easing? easing = null) -> System.Threading.Tasks.Task<bool>!
static Microsoft.Maui.Controls.ViewExtensions.TranslateTo(this Microsoft.Maui.Controls.VisualElement! view, double x, double y, uint length = 250, Microsoft.Maui.Easing? easing = null) -> System.Threading.Tasks.Task<bool>!
static Microsoft.Maui.Controls.VisibilityExtensions.ToVisibility(this bool isVisible) -> Microsoft.Maui.Visibility
static Microsoft.Maui.Controls.Window.MapContent(Microsoft.Maui.Handlers.IWindowHandler! handler, Microsoft.Maui.IWindow! view) -> void
static Microsoft.Maui.Controls.Window.MapContent(Microsoft.Maui.Handlers.WindowHandler! handler, Microsoft.Maui.IWindow! view) -> void
static Microsoft.Maui.Controls.Xaml.Diagnostics.BindingDiagnostics.BindingFailed -> System.EventHandler<Microsoft.Maui.Controls.Xaml.Diagnostics.BindingBaseErrorEventArgs>
static readonly Microsoft.Maui.Controls.AdaptiveTrigger.MinWindowHeightProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.AdaptiveTrigger.MinWindowWidthProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Border.ContentProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Border.PaddingProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Border.StrokeDashArrayProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Border.StrokeDashOffsetProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Border.StrokeLineCapProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Border.StrokeLineJoinProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Border.StrokeMiterLimitProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Border.StrokeProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Border.StrokeShapeProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Border.StrokeThicknessProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.DragGestureRecognizer.CanDragProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.DragGestureRecognizer.DragStartingCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.DragGestureRecognizer.DragStartingCommandProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.DragGestureRecognizer.DropCompletedCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.DragGestureRecognizer.DropCompletedCommandProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.KeyboardAccelerator.KeyProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.KeyboardAccelerator.ModifiersProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.LayoutOptions.Center -> Microsoft.Maui.Controls.LayoutOptions
static readonly Microsoft.Maui.Controls.LayoutOptions.CenterAndExpand -> Microsoft.Maui.Controls.LayoutOptions
static readonly Microsoft.Maui.Controls.LayoutOptions.End -> Microsoft.Maui.Controls.LayoutOptions
static readonly Microsoft.Maui.Controls.LayoutOptions.EndAndExpand -> Microsoft.Maui.Controls.LayoutOptions
static readonly Microsoft.Maui.Controls.LayoutOptions.Fill -> Microsoft.Maui.Controls.LayoutOptions
static readonly Microsoft.Maui.Controls.LayoutOptions.FillAndExpand -> Microsoft.Maui.Controls.LayoutOptions
static readonly Microsoft.Maui.Controls.LayoutOptions.Start -> Microsoft.Maui.Controls.LayoutOptions
static readonly Microsoft.Maui.Controls.LayoutOptions.StartAndExpand -> Microsoft.Maui.Controls.LayoutOptions
static readonly Microsoft.Maui.Controls.PointerGestureRecognizer.PointerEnteredCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.PointerGestureRecognizer.PointerEnteredCommandProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.PointerGestureRecognizer.PointerExitedCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.PointerGestureRecognizer.PointerExitedCommandProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.PointerGestureRecognizer.PointerMovedCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.PointerGestureRecognizer.PointerMovedCommandProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.PointerGestureRecognizer.PointerPressedCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.PointerGestureRecognizer.PointerPressedCommandProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.PointerGestureRecognizer.PointerReleasedCommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.PointerGestureRecognizer.PointerReleasedCommandProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Shapes.Shape.AspectProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Shapes.Shape.FillProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Shapes.Shape.StrokeDashArrayProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Shapes.Shape.StrokeDashOffsetProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Shapes.Shape.StrokeLineCapProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Shapes.Shape.StrokeLineJoinProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Shapes.Shape.StrokeMiterLimitProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Shapes.Shape.StrokeProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Shapes.Shape.StrokeThicknessProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.TapGestureRecognizer.ButtonsProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.TapGestureRecognizer.CommandParameterProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.TapGestureRecognizer.CommandProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.TapGestureRecognizer.NumberOfTapsRequiredProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.ToolTipProperties.TextProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.VisualElement.ShadowProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.VisualElement.ZIndexProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Window.FlowDirectionProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Window.HeightProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Window.MaximumHeightProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Window.MaximumWidthProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Window.MinimumHeightProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Window.MinimumWidthProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Window.PageProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Window.TitleProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Window.WidthProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Window.XProperty -> Microsoft.Maui.Controls.BindableProperty!
static readonly Microsoft.Maui.Controls.Window.YProperty -> Microsoft.Maui.Controls.BindableProperty!
virtual Microsoft.Maui.Controls.Application.CleanUp() -> void
virtual Microsoft.Maui.Controls.Application.CloseWindow(Microsoft.Maui.Controls.Window! window) -> void
virtual Microsoft.Maui.Controls.Application.CreateWindow(Microsoft.Maui.IActivationState? activationState) -> Microsoft.Maui.Controls.Window!
virtual Microsoft.Maui.Controls.Application.OnAppLinkRequestReceived(System.Uri! uri) -> void
virtual Microsoft.Maui.Controls.Application.OnResume() -> void
virtual Microsoft.Maui.Controls.Application.OnSleep() -> void
virtual Microsoft.Maui.Controls.Application.OnStart() -> void
virtual Microsoft.Maui.Controls.Application.OpenWindow(Microsoft.Maui.Controls.Window! window) -> void
virtual Microsoft.Maui.Controls.BaseShellItem.OnAppearing() -> void
virtual Microsoft.Maui.Controls.BaseShellItem.OnDisappearing() -> void
virtual Microsoft.Maui.Controls.BindableObject.OnBindingContextChanged() -> void
virtual Microsoft.Maui.Controls.CarouselView.AnimateCurrentItemChanges.get -> bool
virtual Microsoft.Maui.Controls.CarouselView.AnimatePositionChanges.get -> bool
virtual Microsoft.Maui.Controls.Cell.OnAppearing() -> void
virtual Microsoft.Maui.Controls.Cell.OnDisappearing() -> void
virtual Microsoft.Maui.Controls.Cell.OnTapped() -> void
virtual Microsoft.Maui.Controls.Compatibility.Layout.InvalidateLayout() -> void
virtual Microsoft.Maui.Controls.Compatibility.Layout.OnChildMeasureInvalidated() -> void
virtual Microsoft.Maui.Controls.DragEventArgs.GetPosition(Microsoft.Maui.Controls.Element? relativeTo) -> Microsoft.Maui.Graphics.Point?
virtual Microsoft.Maui.Controls.DragStartingEventArgs.GetPosition(Microsoft.Maui.Controls.Element? relativeTo) -> Microsoft.Maui.Graphics.Point?
virtual Microsoft.Maui.Controls.DropEventArgs.GetPosition(Microsoft.Maui.Controls.Element? relativeTo) -> Microsoft.Maui.Graphics.Point?
virtual Microsoft.Maui.Controls.Element.OnHandlerChanged() -> void
virtual Microsoft.Maui.Controls.Element.OnParentChanged() -> void
virtual Microsoft.Maui.Controls.Element.OnParentSet() -> void
virtual Microsoft.Maui.Controls.FlyoutPage.ShouldShowToolbarButton() -> bool
virtual Microsoft.Maui.Controls.HandlerAttribute.ShouldRegister() -> bool
virtual Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer.OnElementChanged(Microsoft.Maui.Controls.Platform.ElementChangedEventArgs<Microsoft.Maui.Controls.Frame!>! e) -> void
virtual Microsoft.Maui.Controls.Handlers.Compatibility.FrameRenderer.OnElementPropertyChanged(object? sender, System.ComponentModel.PropertyChangedEventArgs! e) -> void
virtual Microsoft.Maui.Controls.Handlers.Compatibility.ViewRenderer<TElement, TPlatformView>.CreateNativeControl() -> TPlatformView!
virtual Microsoft.Maui.Controls.Handlers.Compatibility.ViewRenderer<TElement, TPlatformView>.DisconnectHandler(TPlatformView! oldPlatformView) -> void
virtual Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.GetDesiredSize(double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
virtual Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.MinimumSize() -> Microsoft.Maui.Graphics.Size
virtual Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.OnElementChanged(Microsoft.Maui.Controls.Platform.ElementChangedEventArgs<TElement!>! e) -> void
virtual Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.OnElementPropertyChanged(object! sender, System.ComponentModel.PropertyChangedEventArgs! e) -> void
virtual Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.SetAutomationId(string! id) -> void
virtual Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.SetImportantForAccessibility() -> void
virtual Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.SetIsEnabled() -> void
virtual Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.UpdateBackground() -> void
virtual Microsoft.Maui.Controls.Handlers.Compatibility.VisualElementRenderer<TElement>.UpdateBackgroundColor() -> void
virtual Microsoft.Maui.Controls.Handlers.Items.ItemsViewAdapter<TItemsView, TItemsViewSource>.CreateItemsSource() -> TItemsViewSource
virtual Microsoft.Maui.Controls.Handlers.Items.MauiCarouselRecyclerView.IsHorizontal.get -> bool
virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.ReconcileFlowDirectionAndLayout() -> void
virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.UpdateAdapter() -> void
virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.UpdateCanReorderItems() -> void
virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.UpdateEmptyView() -> void
virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.UpdateFlowDirection() -> void
virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.UpdateHorizontalScrollBarVisibility() -> void
virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.UpdateItemSpacing() -> void
virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.UpdateItemsSource() -> void
virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.UpdateItemsUpdatingScrollMode() -> void
virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.UpdateLayoutManager() -> void
virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.UpdateSnapBehavior() -> void
virtual Microsoft.Maui.Controls.Handlers.Items.MauiRecyclerView<TItemsView, TAdapter, TItemsViewSource>.UpdateVerticalScrollBarVisibility() -> void
virtual Microsoft.Maui.Controls.Handlers.Items.SelectableViewHolder.OnSelectedChanged() -> void
virtual Microsoft.Maui.Controls.Handlers.Items.SelectableViewHolder.OnViewHolderClicked(int adapterPosition) -> void
virtual Microsoft.Maui.Controls.Handlers.Items.SelectableViewHolder.UseDefaultSelectionColor.get -> bool
virtual Microsoft.Maui.Controls.ImageSource.IsEmpty.get -> bool
virtual Microsoft.Maui.Controls.ItemsView.OnRemainingItemsThresholdReached() -> void
virtual Microsoft.Maui.Controls.Layout.OnClear() -> void
virtual Microsoft.Maui.Controls.MenuItem.OnClicked() -> void
virtual Microsoft.Maui.Controls.MultiPage<T>.OnCurrentPageChanged() -> void
virtual Microsoft.Maui.Controls.Page.LayoutChildren(double x, double y, double width, double height) -> void
virtual Microsoft.Maui.Controls.Page.OnAppearing() -> void
virtual Microsoft.Maui.Controls.Page.OnBackButtonPressed() -> bool
virtual Microsoft.Maui.Controls.Page.OnDisappearing() -> void
virtual Microsoft.Maui.Controls.Platform.Compatibility.SearchHandlerAppearanceTracker.Dispose(bool disposing) -> void
virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellBottomNavViewAppearanceTracker.Dispose(bool disposing) -> void
virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellContentFragment.ResetAppearance() -> void
virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutRenderer.UpdateDrawerLockMode(Microsoft.Maui.FlyoutBehavior behavior) -> void
virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.UpdateFlyoutBackground() -> void
virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.UpdateFlyoutContent() -> void
virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.UpdateFlyoutFooter() -> void
virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.UpdateFlyoutHeader() -> void
virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellFlyoutTemplatedContentRenderer.UpdateFlyoutHeaderBehavior() -> void
virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.ResetAppearance() -> void
virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRenderer.UpdateTabBarVisibility() -> void
virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellItemRendererBase.OnShellSectionChanged() -> void
virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellSectionRenderer.OnPageSelected(int position) -> void
virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellSectionRenderer.ResetAppearance() -> void
virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellSectionRenderer.SetViewPager2UserInputEnabled(bool value) -> void
virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellTabLayoutAppearanceTracker.Dispose(bool disposing) -> void
virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarAppearanceTracker.Dispose(bool disposing) -> void
virtual Microsoft.Maui.Controls.Platform.Compatibility.ShellToolbarTracker.OnNavigateBack() -> void
virtual Microsoft.Maui.Controls.PlatformBehavior<TView, TPlatformView>.OnAttachedTo(TView! bindable, TPlatformView! platformView) -> void
virtual Microsoft.Maui.Controls.PlatformBehavior<TView, TPlatformView>.OnDetachedFrom(TView! bindable, TPlatformView! platformView) -> void
virtual Microsoft.Maui.Controls.PointerEventArgs.GetPosition(Microsoft.Maui.Controls.Element? relativeTo) -> Microsoft.Maui.Graphics.Point?
virtual Microsoft.Maui.Controls.SearchHandler.OnClearPlaceholderClicked() -> void
virtual Microsoft.Maui.Controls.SearchHandler.OnFocused() -> void
virtual Microsoft.Maui.Controls.SearchHandler.OnQueryConfirmed() -> void
virtual Microsoft.Maui.Controls.SearchHandler.OnUnfocus() -> void
virtual Microsoft.Maui.Controls.StateTriggerBase.OnAttached() -> void
virtual Microsoft.Maui.Controls.StateTriggerBase.OnDetached() -> void
virtual Microsoft.Maui.Controls.TableView.OnModelChanged() -> void
virtual Microsoft.Maui.Controls.TappedEventArgs.GetPosition(Microsoft.Maui.Controls.Element? relativeTo) -> Microsoft.Maui.Graphics.Point?
virtual Microsoft.Maui.Controls.TemplatedPage.OnApplyTemplate() -> void
virtual Microsoft.Maui.Controls.TemplatedView.OnApplyTemplate() -> void
virtual Microsoft.Maui.Controls.Toolbar.BackButtonVisible.get -> bool
virtual Microsoft.Maui.Controls.Toolbar.BackButtonVisible.set -> void
virtual Microsoft.Maui.Controls.Toolbar.DrawerToggleVisible.get -> bool
virtual Microsoft.Maui.Controls.Toolbar.DrawerToggleVisible.set -> void
virtual Microsoft.Maui.Controls.VisualElement.ArrangeOverride(Microsoft.Maui.Graphics.Rect bounds) -> Microsoft.Maui.Graphics.Size
virtual Microsoft.Maui.Controls.VisualElement.ChangeVisualState() -> void
virtual Microsoft.Maui.Controls.VisualElement.InvalidateMeasure() -> void
virtual Microsoft.Maui.Controls.VisualElement.InvalidateMeasureOverride() -> void
virtual Microsoft.Maui.Controls.VisualElement.IsEnabledCore.get -> bool
virtual Microsoft.Maui.Controls.VisualElement.Measure(double widthConstraint, double heightConstraint, Microsoft.Maui.Controls.MeasureFlags flags = Microsoft.Maui.Controls.MeasureFlags.None) -> Microsoft.Maui.SizeRequest
virtual Microsoft.Maui.Controls.VisualElement.MeasureOverride(double widthConstraint, double heightConstraint) -> Microsoft.Maui.Graphics.Size
virtual Microsoft.Maui.Controls.VisualElement.OnMeasure(double widthConstraint, double heightConstraint) -> Microsoft.Maui.SizeRequest
virtual Microsoft.Maui.Controls.VisualElement.OnSizeAllocated(double width, double height) -> void
virtual Microsoft.Maui.Controls.Window.OnActivated() -> void
virtual Microsoft.Maui.Controls.Window.OnBackgrounding(Microsoft.Maui.IPersistedState! state) -> void
virtual Microsoft.Maui.Controls.Window.OnCreated() -> void
virtual Microsoft.Maui.Controls.Window.OnDeactivated() -> void
virtual Microsoft.Maui.Controls.Window.OnDestroying() -> void
virtual Microsoft.Maui.Controls.Window.OnDisplayDensityChanged(float displayDensity) -> void
virtual Microsoft.Maui.Controls.Window.OnResumed() -> void
virtual Microsoft.Maui.Controls.Window.OnStopped() -> void
