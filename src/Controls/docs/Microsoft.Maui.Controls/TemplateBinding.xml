<Type Name="TemplateBinding" FullName="Microsoft.Maui.Controls.TemplateBinding">
  <TypeSignature Language="C#" Value="public sealed class TemplateBinding : Microsoft.Maui.Controls.BindingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TemplateBinding extends Microsoft.Maui.Controls.BindingBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.TemplateBinding" />
  <TypeSignature Language="F#" Value="type TemplateBinding = class&#xA;    inherit BindingBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Maui.Controls.BindingBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Use Binding.Source=RelativeBindingSource.TemplatedParent")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Binds a template property to the parent of the view that owns a <see cref="T:Microsoft.Maui.Controls.ControlTemplate" />.</summary>
    <remarks>
      <para>Control templates provide reusable styling and functionality for common UI elements in an application. They do this by providing a common set of properties that bind to the parents of the View that owns the View to which the control template is bound.</para>
      <example>
        <para>Application developers can assign these properties through XAML, as in the following example: </para>
        <code lang="XAML"><![CDATA[
<ControlTemplate x:Key="LoginTemplate">
  <StackLayout VerticalOptions="CenterAndExpand" Spacing="20" Padding="20">
    <Entry Text="{TemplateBinding Username}" Placeholder="Username" />
    <Entry Text="{TemplateBinding Password}" Placeholder="Password" />
    <Button Command="{TemplateBinding Command}" Text="Click Here To Log In" />
  </StackLayout>
</ControlTemplate>]]></code>
        <para>Additionally, application developers can use the <see cref="M:Microsoft.Maui.Controls.TemplateExtensions.SetBinding(Microsoft.Maui.Controls.DataTemplate,Microsoft.Maui.Controls.BindableProperty,System.String)" /> static method to set template bindings in code.</para>
      </example>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.TemplateBinding.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates an empty template binding.</summary>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateBinding (string path, Microsoft.Maui.Controls.BindingMode mode = Microsoft.Maui.Controls.BindingMode.Default, Microsoft.Maui.Controls.IValueConverter converter = default, object converterParameter = default, string stringFormat = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype Microsoft.Maui.Controls.BindingMode mode, class Microsoft.Maui.Controls.IValueConverter converter, object converterParameter, string stringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.TemplateBinding.#ctor(System.String,Microsoft.Maui.Controls.BindingMode,Microsoft.Maui.Controls.IValueConverter,System.Object,System.String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Maui.Controls.TemplateBinding : string * Microsoft.Maui.Controls.BindingMode * Microsoft.Maui.Controls.IValueConverter * obj * string -&gt; Microsoft.Maui.Controls.TemplateBinding" Usage="new Microsoft.Maui.Controls.TemplateBinding (path, mode, converter, converterParameter, stringFormat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="Microsoft.Maui.Controls.BindingMode" />
        <Parameter Name="converter" Type="Microsoft.Maui.Controls.IValueConverter" />
        <Parameter Name="converterParameter" Type="System.Object" />
        <Parameter Name="stringFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">A string that identifies the property to which to bind.</param>
        <param name="mode">The binding mode.</param>
        <param name="converter">A type converter to use to convert strings into instances of the bound property type.</param>
        <param name="converterParameter">A parameter to pass to the converter.</param>
        <param name="stringFormat">A format string to use for displaying property values.</param>
        <summary>Creates a new TemplateBinding with the specified values. Must be non-empty and non-null.</summary>
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.IValueConverter Converter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.IValueConverter Converter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.TemplateBinding.Converter" />
      <MemberSignature Language="F#" Value="member this.Converter : Microsoft.Maui.Controls.IValueConverter with get, set" Usage="Microsoft.Maui.Controls.TemplateBinding.Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.IValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type converter to use to convert strings into instances of the bound property type.</summary>
      </Docs>
    </Member>
    <Member MemberName="ConverterParameter">
      <MemberSignature Language="C#" Value="public object ConverterParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConverterParameter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.TemplateBinding.ConverterParameter" />
      <MemberSignature Language="F#" Value="member this.ConverterParameter : obj with get, set" Usage="Microsoft.Maui.Controls.TemplateBinding.ConverterParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a format string to use for displaying property values.</summary>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.TemplateBinding.Path" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="Microsoft.Maui.Controls.TemplateBinding.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a string that identifies the property to which to bind.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
