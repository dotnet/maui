<Type Name="TypeTypeConverter" FullName="Microsoft.Maui.Controls.TypeTypeConverter">
  <TypeSignature Language="C#" Value="public sealed class TypeTypeConverter : System.ComponentModel.TypeConverter, Microsoft.Maui.Controls.IExtendedTypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeTypeConverter extends System.ComponentModel.TypeConverter implements class Microsoft.Maui.Controls.IExtendedTypeConverter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.TypeTypeConverter" />
  <TypeSignature Language="F#" Value="type TypeTypeConverter = class&#xA;    inherit TypeConverter&#xA;    interface IExtendedTypeConverter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IExtendedTypeConverter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.Maui.Controls.Xaml.TypeConversion(typeof(System.Type))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Class that takes a string representation of a <see cref="T:System.Type" /> and returns a corresponding <see cref="T:System.Type" />.</summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.TypeTypeConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new <see cref="T:Microsoft.Maui.Controls.TypeTypeConverter" /> with default values.</summary>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public override object ConvertFromInvariantString (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFromInvariantString(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.TypeTypeConverter.ConvertFromInvariantString(System.String)" />
      <MemberSignature Language="F#" Value="override this.ConvertFromInvariantString : string -&gt; obj" Usage="typeTypeConverter.ConvertFromInvariantString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>Returns a type for a valid type name.</summary>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IExtendedTypeConverter.ConvertFrom">
      <MemberSignature Language="C#" Value="object IExtendedTypeConverter.ConvertFrom (System.Globalization.CultureInfo culture, object value, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Microsoft.Maui.Controls.IExtendedTypeConverter.ConvertFrom(class System.Globalization.CultureInfo culture, object value, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.TypeTypeConverter.Xamarin#Forms#IExtendedTypeConverter#ConvertFrom(System.Globalization.CultureInfo,System.Object,System.IServiceProvider)" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.IExtendedTypeConverter.ConvertFrom : System.Globalization.CultureInfo * obj * IServiceProvider -&gt; obj&#xA;override this.Microsoft.Maui.Controls.IExtendedTypeConverter.ConvertFrom : System.Globalization.CultureInfo * obj * IServiceProvider -&gt; obj" Usage="typeTypeConverter.Microsoft.Maui.Controls.IExtendedTypeConverter.ConvertFrom (culture, value, serviceProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IExtendedTypeConverter.ConvertFrom(System.Globalization.CultureInfo,System.Object,System.IServiceProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("IExtendedTypeConverter.ConvertFrom is obsolete as of version 2.2.0. Please use ConvertFromInvariantString (string, IServiceProvider) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="culture">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="value">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="serviceProvider">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use only.</summary>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IExtendedTypeConverter.ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="object IExtendedTypeConverter.ConvertFromInvariantString (string value, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Microsoft.Maui.Controls.IExtendedTypeConverter.ConvertFromInvariantString(string value, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.TypeTypeConverter.Xamarin#Forms#IExtendedTypeConverter#ConvertFromInvariantString(System.String,System.IServiceProvider)" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.IExtendedTypeConverter.ConvertFromInvariantString : string * IServiceProvider -&gt; obj&#xA;override this.Microsoft.Maui.Controls.IExtendedTypeConverter.ConvertFromInvariantString : string * IServiceProvider -&gt; obj" Usage="typeTypeConverter.Microsoft.Maui.Controls.IExtendedTypeConverter.ConvertFromInvariantString (value, serviceProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IExtendedTypeConverter.ConvertFromInvariantString(System.String,System.IServiceProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="value">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="serviceProvider">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use only.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
