<Type Name="Region" FullName="Microsoft.Maui.Controls.Region">
  <TypeSignature Language="C#" Value="public struct Region" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Region extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.Region" />
  <TypeSignature Language="F#" Value="type Region = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a visual region in a Microsoft.Maui.Controls UI.</summary>
    <remarks>
      <para>Currently, regions represent rectangles, or collections of rectangles, only.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (Microsoft.Maui.Controls.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype Microsoft.Maui.Controls.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Region.Contains(Microsoft.Maui.Controls.Point)" />
      <MemberSignature Language="F#" Value="member this.Contains : Microsoft.Maui.Controls.Point -&gt; bool" Usage="region.Contains pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="Microsoft.Maui.Controls.Point" />
      </Parameters>
      <Docs>
        <param name="pt">The point to check.</param>
        <summary>Returns <see langword="true" /> if the specified point is inside the region. Otherwise, returns <see langword="false" />.</summary>
        <returns>
          <see langword="true" /> if the specified point is inside the region. Otherwise, <see langword="false" />.</returns>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Region.Contains(System.Double,System.Double)" />
      <MemberSignature Language="F#" Value="member this.Contains : double * double -&gt; bool" Usage="region.Contains (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">The X-coordinate to check.</param>
        <param name="y">The Y-coordinate to check.</param>
        <summary>Returns <see langword="true" /> if the point that is represented by the specified coordinates is inside the region. Otherwise, returns <see langword="false" />.</summary>
        <returns>
          <see langword="true" /> if the specified point that is represented by the specified coordinates is inside the region. Otherwise, <see langword="false" />.</returns>
      </Docs>
    </Member>
    <Member MemberName="Deflate">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.Region Deflate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Maui.Controls.Region Deflate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Region.Deflate" />
      <MemberSignature Language="F#" Value="member this.Deflate : unit -&gt; Microsoft.Maui.Controls.Region" Usage="region.Deflate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Region</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a region shrunk by the values in the most recent inflation, or does nothing if there has not been a previous inflation.</summary>
        <returns>A region shrunk by the values in the most recent inflation, or does nothing if there has not been a previous inflation.</returns>
      </Docs>
    </Member>
    <Member MemberName="FromLines">
      <MemberSignature Language="C#" Value="public static Microsoft.Maui.Controls.Region FromLines (double[] lineHeights, double maxWidth, double startX, double endX, double startY);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.Maui.Controls.Region FromLines(float64[] lineHeights, float64 maxWidth, float64 startX, float64 endX, float64 startY) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Region.FromLines(System.Double[],System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="F#" Value="static member FromLines : double[] * double * double * double * double -&gt; Microsoft.Maui.Controls.Region" Usage="Microsoft.Maui.Controls.Region.FromLines (lineHeights, maxWidth, startX, endX, startY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Region</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineHeights" Type="System.Double[]" />
        <Parameter Name="maxWidth" Type="System.Double" />
        <Parameter Name="startX" Type="System.Double" />
        <Parameter Name="endX" Type="System.Double" />
        <Parameter Name="startY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="lineHeights">The list of line heights to use.</param>
        <param name="maxWidth">The width of a line that spans the rectangle that encloses the region.</param>
        <param name="startX">The starting X value on the first line, equivalent to an indent.</param>
        <param name="endX">The width of the last line.</param>
        <param name="startY">The top of the region.</param>
        <summary>Creates and returns a region that detects points inside a collection of rectangles created from the lines that are specified by the provided data.</summary>
        <returns>A region that detects points inside a collection of rectangles created from the lines that are specified by the provided data.</returns>
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.Region Inflate (double size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Maui.Controls.Region Inflate(float64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Region.Inflate(System.Double)" />
      <MemberSignature Language="F#" Value="member this.Inflate : double -&gt; Microsoft.Maui.Controls.Region" Usage="region.Inflate size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Region</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="size">The amount by which to move each side of the region or its subregions.</param>
        <summary>Returns a region that is expanded by or has all of its subregions expanded by the specified <paramref name="size" />.</summary>
        <returns>A  region that is expanded by or has all of its subregions expanded by the specified <paramref name="size" />.</returns>
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.Region Inflate (double left, double top, double right, double bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Maui.Controls.Region Inflate(float64 left, float64 top, float64 right, float64 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Region.Inflate(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="F#" Value="member this.Inflate : double * double * double * double -&gt; Microsoft.Maui.Controls.Region" Usage="region.Inflate (left, top, right, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Region</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="right" Type="System.Double" />
        <Parameter Name="bottom" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="left">The amount to move the left side to the left.</param>
        <param name="top">The amount to move the top upward.</param>
        <param name="right">The amount to move the right side to the right.</param>
        <param name="bottom">The amount to move the bottom down.</param>
        <summary>Returns a region that is expanded by or has all of its subregions expanded by the specified values.</summary>
        <returns>A  region that is expanded by or has all of its subregions expanded by the specified values.</returns>
      </Docs>
    </Member>
  </Members>
</Type>
