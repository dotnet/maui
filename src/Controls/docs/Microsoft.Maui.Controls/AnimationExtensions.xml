<Type Name="AnimationExtensions" FullName="Microsoft.Maui.Controls.AnimationExtensions">
  <TypeSignature Language="C#" Value="public static class AnimationExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed AnimationExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.AnimationExtensions" />
  <TypeSignature Language="F#" Value="type AnimationExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Extension methods for <see cref="T:Microsoft.Maui.Controls.IAnimatable" /> objects.</summary>
  </Docs>
  <Members>
    <Member MemberName="AbortAnimation">
      <MemberSignature Language="C#" Value="public static bool AbortAnimation (this Microsoft.Maui.Controls.IAnimatable self, string handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AbortAnimation(class Microsoft.Maui.Controls.IAnimatable self, string handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.AnimationExtensions.AbortAnimation(Microsoft.Maui.Controls.IAnimatable,System.String)" />
      <MemberSignature Language="F#" Value="static member AbortAnimation : Microsoft.Maui.Controls.IAnimatable * string -&gt; bool" Usage="Microsoft.Maui.Controls.AnimationExtensions.AbortAnimation (self, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="self" Type="Microsoft.Maui.Controls.IAnimatable" RefType="this" />
        <Parameter Name="handle" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="self">The object on which this method will be run.</param>
        <param name="handle">An animation key that must be unique among its sibling and parent animations for the duration of the animation.</param>
        <summary>Stops the animation.</summary>
        <remarks>If <paramref name="handle" /> refers to an animation that belongs to this <see cref="T:Microsoft.Maui.Controls.IAnimatable" /> instance, then its tweener handlers are removed, the tweener is stopped, the animation is removed from this <see cref="T:Microsoft.Maui.Controls.IAnimatable" /> instance, and it is marked as finished. If <paramref name="handle" /> refers to one of the kinetics that belong to this <see cref="T:Microsoft.Maui.Controls.IAnimatable" /> instance, then it and its ticker are removed.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Animate">
      <MemberSignature Language="C#" Value="public static void Animate (this Microsoft.Maui.Controls.IAnimatable self, string name, Action&lt;double&gt; callback, uint rate = 16, uint length = 250, Microsoft.Maui.Controls.Easing easing = default, Action&lt;double,bool&gt; finished = default, Func&lt;bool&gt; repeat = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Animate(class Microsoft.Maui.Controls.IAnimatable self, string name, class System.Action`1&lt;float64&gt; callback, unsigned int32 rate, unsigned int32 length, class Microsoft.Maui.Controls.Easing easing, class System.Action`2&lt;float64, bool&gt; finished, class System.Func`1&lt;bool&gt; repeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.AnimationExtensions.Animate(Microsoft.Maui.Controls.IAnimatable,System.String,System.Action{System.Double},System.UInt32,System.UInt32,Microsoft.Maui.Controls.Easing,System.Action{System.Double,System.Boolean},System.Func{System.Boolean})" />
      <MemberSignature Language="F#" Value="static member Animate : Microsoft.Maui.Controls.IAnimatable * string * Action&lt;double&gt; * uint32 * uint32 * Microsoft.Maui.Controls.Easing * Action&lt;double, bool&gt; * Func&lt;bool&gt; -&gt; unit" Usage="Microsoft.Maui.Controls.AnimationExtensions.Animate (self, name, callback, rate, length, easing, finished, repeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="self" Type="Microsoft.Maui.Controls.IAnimatable" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Action&lt;System.Double&gt;" />
        <Parameter Name="rate" Type="System.UInt32" />
        <Parameter Name="length" Type="System.UInt32" />
        <Parameter Name="easing" Type="Microsoft.Maui.Controls.Easing" />
        <Parameter Name="finished" Type="System.Action&lt;System.Double,System.Boolean&gt;" />
        <Parameter Name="repeat" Type="System.Func&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="self">The object on which this method will be run.</param>
        <param name="name">An animation key that should be unique among its sibling and parent animations for the duration of the animation.</param>
        <param name="callback">An action that is called with successive animation values.</param>
        <param name="rate">The time, in milliseconds, between frames.</param>
        <param name="length">The number of milliseconds over which to interpolate the animation.</param>
        <param name="easing">The easing function to use to transision in, out, or in and out of the animation.</param>
        <param name="finished">An action to call when the animation is finished.</param>
        <param name="repeat">A function that returns true if the animation should continue.</param>
        <summary>Sets the specified parameters and starts the animation.</summary>
      </Docs>
    </Member>
    <Member MemberName="Animate">
      <MemberSignature Language="C#" Value="public static void Animate (this Microsoft.Maui.Controls.IAnimatable self, string name, Microsoft.Maui.Controls.Animation animation, uint rate = 16, uint length = 250, Microsoft.Maui.Controls.Easing easing = default, Action&lt;double,bool&gt; finished = default, Func&lt;bool&gt; repeat = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Animate(class Microsoft.Maui.Controls.IAnimatable self, string name, class Microsoft.Maui.Controls.Animation animation, unsigned int32 rate, unsigned int32 length, class Microsoft.Maui.Controls.Easing easing, class System.Action`2&lt;float64, bool&gt; finished, class System.Func`1&lt;bool&gt; repeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.AnimationExtensions.Animate(Microsoft.Maui.Controls.IAnimatable,System.String,Microsoft.Maui.Controls.Animation,System.UInt32,System.UInt32,Microsoft.Maui.Controls.Easing,System.Action{System.Double,System.Boolean},System.Func{System.Boolean})" />
      <MemberSignature Language="F#" Value="static member Animate : Microsoft.Maui.Controls.IAnimatable * string * Microsoft.Maui.Controls.Animation * uint32 * uint32 * Microsoft.Maui.Controls.Easing * Action&lt;double, bool&gt; * Func&lt;bool&gt; -&gt; unit" Usage="Microsoft.Maui.Controls.AnimationExtensions.Animate (self, name, animation, rate, length, easing, finished, repeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="self" Type="Microsoft.Maui.Controls.IAnimatable" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="animation" Type="Microsoft.Maui.Controls.Animation" />
        <Parameter Name="rate" Type="System.UInt32" />
        <Parameter Name="length" Type="System.UInt32" />
        <Parameter Name="easing" Type="Microsoft.Maui.Controls.Easing" />
        <Parameter Name="finished" Type="System.Action&lt;System.Double,System.Boolean&gt;" />
        <Parameter Name="repeat" Type="System.Func&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="self">The object on which this method will be run.</param>
        <param name="name">An animation key that should be unique among its sibling and parent animations for the duration of the animation.</param>
        <param name="animation">The animation to run.</param>
        <param name="rate">The time, in milliseconds, between frames.</param>
        <param name="length">The number of milliseconds over which to interpolate the animation.</param>
        <param name="easing">The easing function to use to transision in, out, or in and out of the animation.</param>
        <param name="finished">An action to call when the animation is finished.</param>
        <param name="repeat">A function that returns true if the animation should continue.</param>
        <summary>Sets the specified parameters and starts the animation.</summary>
      </Docs>
    </Member>
    <Member MemberName="Animate">
      <MemberSignature Language="C#" Value="public static void Animate (this Microsoft.Maui.Controls.IAnimatable self, string name, Action&lt;double&gt; callback, double start, double end, uint rate = 16, uint length = 250, Microsoft.Maui.Controls.Easing easing = default, Action&lt;double,bool&gt; finished = default, Func&lt;bool&gt; repeat = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Animate(class Microsoft.Maui.Controls.IAnimatable self, string name, class System.Action`1&lt;float64&gt; callback, float64 start, float64 end, unsigned int32 rate, unsigned int32 length, class Microsoft.Maui.Controls.Easing easing, class System.Action`2&lt;float64, bool&gt; finished, class System.Func`1&lt;bool&gt; repeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.AnimationExtensions.Animate(Microsoft.Maui.Controls.IAnimatable,System.String,System.Action{System.Double},System.Double,System.Double,System.UInt32,System.UInt32,Microsoft.Maui.Controls.Easing,System.Action{System.Double,System.Boolean},System.Func{System.Boolean})" />
      <MemberSignature Language="F#" Value="static member Animate : Microsoft.Maui.Controls.IAnimatable * string * Action&lt;double&gt; * double * double * uint32 * uint32 * Microsoft.Maui.Controls.Easing * Action&lt;double, bool&gt; * Func&lt;bool&gt; -&gt; unit" Usage="Microsoft.Maui.Controls.AnimationExtensions.Animate (self, name, callback, start, end, rate, length, easing, finished, repeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="self" Type="Microsoft.Maui.Controls.IAnimatable" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Action&lt;System.Double&gt;" />
        <Parameter Name="start" Type="System.Double" />
        <Parameter Name="end" Type="System.Double" />
        <Parameter Name="rate" Type="System.UInt32" />
        <Parameter Name="length" Type="System.UInt32" />
        <Parameter Name="easing" Type="Microsoft.Maui.Controls.Easing" />
        <Parameter Name="finished" Type="System.Action&lt;System.Double,System.Boolean&gt;" />
        <Parameter Name="repeat" Type="System.Func&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="self">The object on which this method will be run.</param>
        <param name="name">An animation key that should be unique among its sibling and parent animations for the duration of the animation.</param>
        <param name="callback">An action that is called with successive animation values.</param>
        <param name="start">The fraction into the current animation at which to start the animation.</param>
        <param name="end">The fraction into the current animation at which to stop the animation.</param>
        <param name="rate">The time, in milliseconds, between frames.</param>
        <param name="length">The number of milliseconds over which to interpolate the animation.</param>
        <param name="easing">The easing function to use to transision in, out, or in and out of the animation.</param>
        <param name="finished">An action to call when the animation is finished.</param>
        <param name="repeat">A function that returns true if the animation should continue.</param>
        <summary>Sets the specified parameters and starts the animation.</summary>
      </Docs>
    </Member>
    <Member MemberName="Animate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Animate&lt;T&gt; (this Microsoft.Maui.Controls.IAnimatable self, string name, Func&lt;double,T&gt; transform, Action&lt;T&gt; callback, uint rate = 16, uint length = 250, Microsoft.Maui.Controls.Easing easing = default, Action&lt;T,bool&gt; finished = default, Func&lt;bool&gt; repeat = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Animate&lt;T&gt;(class Microsoft.Maui.Controls.IAnimatable self, string name, class System.Func`2&lt;float64, !!T&gt; transform, class System.Action`1&lt;!!T&gt; callback, unsigned int32 rate, unsigned int32 length, class Microsoft.Maui.Controls.Easing easing, class System.Action`2&lt;!!T, bool&gt; finished, class System.Func`1&lt;bool&gt; repeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.AnimationExtensions.Animate``1(Microsoft.Maui.Controls.IAnimatable,System.String,System.Func{System.Double,``0},System.Action{``0},System.UInt32,System.UInt32,Microsoft.Maui.Controls.Easing,System.Action{``0,System.Boolean},System.Func{System.Boolean})" />
      <MemberSignature Language="F#" Value="static member Animate : Microsoft.Maui.Controls.IAnimatable * string * Func&lt;double, 'T&gt; * Action&lt;'T&gt; * uint32 * uint32 * Microsoft.Maui.Controls.Easing * Action&lt;'T, bool&gt; * Func&lt;bool&gt; -&gt; unit" Usage="Microsoft.Maui.Controls.AnimationExtensions.Animate (self, name, transform, callback, rate, length, easing, finished, repeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="self" Type="Microsoft.Maui.Controls.IAnimatable" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="transform" Type="System.Func&lt;System.Double,T&gt;" />
        <Parameter Name="callback" Type="System.Action&lt;T&gt;" />
        <Parameter Name="rate" Type="System.UInt32" />
        <Parameter Name="length" Type="System.UInt32" />
        <Parameter Name="easing" Type="Microsoft.Maui.Controls.Easing" />
        <Parameter Name="finished" Type="System.Action&lt;T,System.Boolean&gt;" />
        <Parameter Name="repeat" Type="System.Func&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="self">The object on which this method will be run.</param>
        <param name="name">An animation key that should be unique among its sibling and parent animations for the duration of the animation.</param>
        <param name="transform">A function that maps animation times to new time values.</param>
        <param name="callback">An action that is called with successive animation values.</param>
        <param name="rate">The time, in milliseconds, between frames.</param>
        <param name="length">The number of milliseconds over which to interpolate the animation.</param>
        <param name="easing">The easing function to use to transision in, out, or in and out of the animation.</param>
        <param name="finished">An action to call when the animation is finished.</param>
        <param name="repeat">A function that returns true if the animation should continue.</param>
        <summary>Sets the specified parameters and starts the animation.</summary>
      </Docs>
    </Member>
    <Member MemberName="AnimateKinetic">
      <MemberSignature Language="C#" Value="public static void AnimateKinetic (this Microsoft.Maui.Controls.IAnimatable self, string name, Func&lt;double,double,bool&gt; callback, double velocity, double drag, Action finished = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AnimateKinetic(class Microsoft.Maui.Controls.IAnimatable self, string name, class System.Func`3&lt;float64, float64, bool&gt; callback, float64 velocity, float64 drag, class System.Action finished) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.AnimationExtensions.AnimateKinetic(Microsoft.Maui.Controls.IAnimatable,System.String,System.Func{System.Double,System.Double,System.Boolean},System.Double,System.Double,System.Action)" />
      <MemberSignature Language="F#" Value="static member AnimateKinetic : Microsoft.Maui.Controls.IAnimatable * string * Func&lt;double, double, bool&gt; * double * double * Action -&gt; unit" Usage="Microsoft.Maui.Controls.AnimationExtensions.AnimateKinetic (self, name, callback, velocity, drag, finished)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="self" Type="Microsoft.Maui.Controls.IAnimatable" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Func&lt;System.Double,System.Double,System.Boolean&gt;" />
        <Parameter Name="velocity" Type="System.Double" />
        <Parameter Name="drag" Type="System.Double" />
        <Parameter Name="finished" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="self">The object on which this method will be run.</param>
        <param name="name">An animation key that should be unique among its sibling and parent animations for the duration of the animation.</param>
        <param name="callback">An action that is called with successive animation values.</param>
        <param name="velocity">The amount that the animation progresses in each animation step. For example, a velocity of <c>1</c> progresses at the default speed.</param>
        <param name="drag">The amount that the progression speed is reduced per frame. Can be negative.</param>
        <param name="finished">An action to call when the animation is finished.</param>
        <summary>Sets the specified parameters and starts the kinetic animation.</summary>
      </Docs>
    </Member>
    <Member MemberName="AnimationIsRunning">
      <MemberSignature Language="C#" Value="public static bool AnimationIsRunning (this Microsoft.Maui.Controls.IAnimatable self, string handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AnimationIsRunning(class Microsoft.Maui.Controls.IAnimatable self, string handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.AnimationExtensions.AnimationIsRunning(Microsoft.Maui.Controls.IAnimatable,System.String)" />
      <MemberSignature Language="F#" Value="static member AnimationIsRunning : Microsoft.Maui.Controls.IAnimatable * string -&gt; bool" Usage="Microsoft.Maui.Controls.AnimationExtensions.AnimationIsRunning (self, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="self" Type="Microsoft.Maui.Controls.IAnimatable" RefType="this" />
        <Parameter Name="handle" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="self">The object on which this method will be run.</param>
        <param name="handle">An animation key that must be unique among its sibling and parent animations for the duration of the animation.</param>
        <summary>Returns a Boolean value that indicates whether or not the animation that is specified by <paramref name="handle" /> is running.</summary>
      </Docs>
    </Member>
    <Member MemberName="Batch">
      <MemberSignature Language="C#" Value="public static IDisposable Batch (this Microsoft.Maui.Controls.IAnimatable self);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable Batch(class Microsoft.Maui.Controls.IAnimatable self) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.AnimationExtensions.Batch(Microsoft.Maui.Controls.IAnimatable)" />
      <MemberSignature Language="F#" Value="static member Batch : Microsoft.Maui.Controls.IAnimatable -&gt; IDisposable" Usage="Microsoft.Maui.Controls.AnimationExtensions.Batch self" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="self" Type="Microsoft.Maui.Controls.IAnimatable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="self">To be added.</param>
      </Docs>
    </Member>
    <Member MemberName="Interpolate">
      <MemberSignature Language="C#" Value="public static Func&lt;double,double&gt; Interpolate (double start, double end = 1, double reverseVal = 0, bool reverse = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;float64, float64&gt; Interpolate(float64 start, float64 end, float64 reverseVal, bool reverse) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.AnimationExtensions.Interpolate(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member Interpolate : double * double * double * bool -&gt; Func&lt;double, double&gt;" Usage="Microsoft.Maui.Controls.AnimationExtensions.Interpolate (start, end, reverseVal, reverse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Double,System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Double" />
        <Parameter Name="end" Type="System.Double" />
        <Parameter Name="reverseVal" Type="System.Double" />
        <Parameter Name="reverse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="start">The fraction into the current animation at which to start the animation.</param>
        <param name="end">The fraction into the current animation at which to stop the animation.</param>
        <param name="reverseVal">The inverse scale factor to use if <paramref name="reverse" /> is <see langword="true" />.</param>
        <param name="reverse">Whether to use the inverse scale factor in <paramref name="reverseVal" /> to deinterpolate.</param>
        <summary>Returns a function that performs a linear interpolation between <paramref name="start" /> and <paramref name="end" />.</summary>
        <returns>A function that performs a linear interpolation between <paramref name="start" /> and <paramref name="end" />. Application developers can pass values between 0.0f and 1.0f to this function in order to recieve a value that is offset from <paramref name="start" /> or <paramref name="end" />, depending on the value of <paramref name="reverse" />, by the passed value times the distance between <paramref name="start" /> and <paramref name="end" />.</returns>
        <remarks>If <paramref name="reverse" /> is <see langword="true" />, then the interpolation happens between <paramref name="start" /> and <paramref name="reverseVal" />.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
