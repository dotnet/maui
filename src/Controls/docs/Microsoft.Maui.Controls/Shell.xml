<Type Name="Shell" FullName="Microsoft.Maui.Controls.Shell">
  <TypeSignature Language="C#" Value="public class Shell : Microsoft.Maui.Controls.Page, Microsoft.Maui.Controls.IPageContainer&lt;Microsoft.Maui.Controls.Page&gt;, Microsoft.Maui.Controls.IShellController" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Shell extends Microsoft.Maui.Controls.Page implements class Microsoft.Maui.Controls.IElementController, class Microsoft.Maui.Controls.IPageContainer`1&lt;class Microsoft.Maui.Controls.Page&gt;, class Microsoft.Maui.Controls.IPageController, class Microsoft.Maui.Controls.IShellController, class Microsoft.Maui.Controls.IVisualElementController" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.Shell" />
  <TypeSignature Language="F#" Value="type Shell = class&#xA;    inherit Page&#xA;    interface IShellController&#xA;    interface IPageController&#xA;    interface IVisualElementController&#xA;    interface IElementController&#xA;    interface IPageContainer&lt;Page&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Maui.Controls.Page</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IElementController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IPageContainer&lt;Microsoft.Maui.Controls.Page&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IPageController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IShellController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IVisualElementController</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.Maui.Controls.ContentProperty("Items")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A <see cref="T:Microsoft.Maui.Controls.Page" /> that provides fundamental UI features that most applications require, leaving you to focus on the application's core workload.</summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Shell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new <see cref="T:Microsoft.Maui.Controls.Shell" /> element with default values.</summary>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static Microsoft.Maui.Controls.Shell Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.Maui.Controls.Shell Current" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Shell.Current" />
      <MemberSignature Language="F#" Value="member this.Current : Microsoft.Maui.Controls.Shell" Usage="Microsoft.Maui.Controls.Shell.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Shell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Static property providing access to the current <see cref="T:Microsoft.Maui.Controls.Shell" />.</summary>
        <remarks>
          <para>This is a typecast alias for <c>Microsoft.Maui.Controls.Application.Current.MainPage</c>.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.ShellNavigationState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.ShellNavigationState CurrentState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Shell.CurrentState" />
      <MemberSignature Language="F#" Value="member this.CurrentState : Microsoft.Maui.Controls.ShellNavigationState" Usage="Microsoft.Maui.Controls.Shell.CurrentState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.ShellNavigationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The current navigation state of the <see cref="T:Microsoft.Maui.Controls.Shell" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty CurrentStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty CurrentStateProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Shell.CurrentStateProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable CurrentStateProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.Shell.CurrentStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.Shell.CurrentState" /> field.</summary>
      </Docs>
    </Member>
    <Member MemberName="GoToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task GoToAsync (Microsoft.Maui.Controls.ShellNavigationState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task GoToAsync(class Microsoft.Maui.Controls.ShellNavigationState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.GoToAsync(Microsoft.Maui.Controls.ShellNavigationState)" />
      <MemberSignature Language="F#" Value="member this.GoToAsync : Microsoft.Maui.Controls.ShellNavigationState -&gt; System.Threading.Tasks.Task" Usage="shell.GoToAsync state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.Maui.Controls.ShellNavigationState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
      </Docs>
    </Member>
    <Member MemberName="GoToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task GoToAsync (Microsoft.Maui.Controls.ShellNavigationState state, bool animate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task GoToAsync(class Microsoft.Maui.Controls.ShellNavigationState state, bool animate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.GoToAsync(Microsoft.Maui.Controls.ShellNavigationState,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.GoToAsync : Microsoft.Maui.Controls.ShellNavigationState * bool -&gt; System.Threading.Tasks.Task" Usage="shell.GoToAsync (state, animate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.Maui.Controls.ShellNavigationState" />
        <Parameter Name="animate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <param name="animate">To be added.</param>
        <summary>Asynchronously navigates to <paramref name="state" />, optionally animating.</summary>
        <remarks>
          <para>Note that <see cref="T:Microsoft.Maui.Controls.ShellNavigationState" /> has implicit conversions from <see langword="string" /> and <see cref="T:System.Uri" />, so developers may write code such as the following, with no explicit instantiation of the <see cref="T:Microsoft.Maui.Controls.ShellNavigationState" />:</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
await Shell.Current.GoToAsync("app://xamarin.com/xaminals/animals/monkeys");
    ]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.ShellItem&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Maui.Controls.ShellItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Shell.Items" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.ShellItem&gt;" Usage="Microsoft.Maui.Controls.Shell.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.ShellItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The collection of <see cref="T:Microsoft.Maui.Controls.ShellItem" /> objects managed by <c>this</c><see cref="T:Microsoft.Maui.Controls.Shell" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="ItemsProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty ItemsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty ItemsProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Shell.ItemsProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemsProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.Shell.ItemsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.Shell.Items" /> field.</summary>
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.ShellNavigatedEventArgs&gt; Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.ShellNavigatedEventArgs&gt; Navigated" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.Shell.Navigated" />
      <MemberSignature Language="F#" Value="member this.Navigated : EventHandler&lt;Microsoft.Maui.Controls.ShellNavigatedEventArgs&gt; " Usage="member this.Navigated : System.EventHandler&lt;Microsoft.Maui.Controls.ShellNavigatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.ShellNavigatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The library raises this event after performing navigation.</summary>
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.ShellNavigatingEventArgs&gt; Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.ShellNavigatingEventArgs&gt; Navigating" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.Shell.Navigating" />
      <MemberSignature Language="F#" Value="member this.Navigating : EventHandler&lt;Microsoft.Maui.Controls.ShellNavigatingEventArgs&gt; " Usage="member this.Navigating : System.EventHandler&lt;Microsoft.Maui.Controls.ShellNavigatingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.ShellNavigatingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The library raises this event immediately prior to performing navigation.</summary>
      </Docs>
    </Member>
    <Member MemberName="OnBackButtonPressed">
      <MemberSignature Language="C#" Value="protected override bool OnBackButtonPressed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBackButtonPressed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.OnBackButtonPressed" />
      <MemberSignature Language="F#" Value="override this.OnBackButtonPressed : unit -&gt; bool" Usage="shell.OnBackButtonPressed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns <see langword="true" /> if the <see cref="P:Microsoft.Maui.Controls.Shell.CurrentItem" /> was popped in response to a press of the back button.</summary>
        <returns>
          <see langword="true" /> if <see cref="P:Microsoft.Maui.Controls.Shell.CurrentItem" /> is not <see langword="null" /> and is not the only item in the navigation stack.</returns>
        <remarks>
          <para>This method may return prior to the navigation having completed. (See <see cref="M:Microsoft.Maui.Controls.INavigation.PopAsync" />.)</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingContextChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingContextChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.OnBindingContextChanged" />
      <MemberSignature Language="F#" Value="override this.OnBindingContextChanged : unit -&gt; unit" Usage="shell.OnBindingContextChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Developers may override this method to customize behavior in response to the binding context changing.</summary>
        <remarks>
          <para>Developers should call <c>base.OnBindingContextChanged()</c> at the beginning of their overriding method.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNavigated">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigated (Microsoft.Maui.Controls.ShellNavigatedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigated(class Microsoft.Maui.Controls.ShellNavigatedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.OnNavigated(Microsoft.Maui.Controls.ShellNavigatedEventArgs)" />
      <MemberSignature Language="F#" Value="abstract member OnNavigated : Microsoft.Maui.Controls.ShellNavigatedEventArgs -&gt; unit&#xA;override this.OnNavigated : Microsoft.Maui.Controls.ShellNavigatedEventArgs -&gt; unit" Usage="shell.OnNavigated args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="Microsoft.Maui.Controls.ShellNavigatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>Developers may override this method to customize behavior on navigation.</summary>
        <remarks>
          <para>Developers should call <c>base.OnNavigated()</c> at the end of their overriding method or must raise the <see cref="E:Microsoft.Maui.Controls.Shell.Navigated" /> event themselves.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNavigating">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigating (Microsoft.Maui.Controls.ShellNavigatingEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigating(class Microsoft.Maui.Controls.ShellNavigatingEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.OnNavigating(Microsoft.Maui.Controls.ShellNavigatingEventArgs)" />
      <MemberSignature Language="F#" Value="abstract member OnNavigating : Microsoft.Maui.Controls.ShellNavigatingEventArgs -&gt; unit&#xA;override this.OnNavigating : Microsoft.Maui.Controls.ShellNavigatingEventArgs -&gt; unit" Usage="shell.OnNavigating args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="Microsoft.Maui.Controls.ShellNavigatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>Developers may override this method to customize behavior prior to navigation.</summary>
        <remarks>
          <para>Developers should call <c>base.OnNavigating()</c> at the end of their overriding method or must raise the <see cref="E:Microsoft.Maui.Controls.Shell.Navigating" /> event themselves.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyShellUWPFlagEnabled">
      <MemberSignature Language="C#" Value="public static void VerifyShellUWPFlagEnabled (string constructorHint = default, string memberName = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VerifyShellUWPFlagEnabled(string constructorHint, string memberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.VerifyShellUWPFlagEnabled(System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member VerifyShellUWPFlagEnabled : string * string -&gt; unit" Usage="Microsoft.Maui.Controls.Shell.VerifyShellUWPFlagEnabled (constructorHint, memberName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructorHint" Type="System.String" />
        <Parameter Name="memberName" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName>System.Runtime.CompilerServices.CallerMemberName</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="constructorHint">To be added.</param>
        <param name="memberName">To be added.</param>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IShellController.AddAppearanceObserver">
      <MemberSignature Language="C#" Value="void IShellController.AddAppearanceObserver (Microsoft.Maui.Controls.IAppearanceObserver observer, Microsoft.Maui.Controls.Element pivot);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Maui.Controls.IShellController.AddAppearanceObserver(class Microsoft.Maui.Controls.IAppearanceObserver observer, class Microsoft.Maui.Controls.Element pivot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.Xamarin#Forms#IShellController#AddAppearanceObserver(Microsoft.Maui.Controls.IAppearanceObserver,Microsoft.Maui.Controls.Element)" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.IShellController.AddAppearanceObserver : Microsoft.Maui.Controls.IAppearanceObserver * Microsoft.Maui.Controls.Element -&gt; unit&#xA;override this.Microsoft.Maui.Controls.IShellController.AddAppearanceObserver : Microsoft.Maui.Controls.IAppearanceObserver * Microsoft.Maui.Controls.Element -&gt; unit" Usage="shell.Microsoft.Maui.Controls.IShellController.AddAppearanceObserver (observer, pivot)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IShellController.AddAppearanceObserver(Microsoft.Maui.Controls.IAppearanceObserver,Microsoft.Maui.Controls.Element)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="Microsoft.Maui.Controls.IAppearanceObserver" />
        <Parameter Name="pivot" Type="Microsoft.Maui.Controls.Element" />
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <param name="pivot">To be added.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IShellController.AddFlyoutBehaviorObserver">
      <MemberSignature Language="C#" Value="void IShellController.AddFlyoutBehaviorObserver (Microsoft.Maui.Controls.IFlyoutBehaviorObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Maui.Controls.IShellController.AddFlyoutBehaviorObserver(class Microsoft.Maui.Controls.IFlyoutBehaviorObserver observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.Xamarin#Forms#IShellController#AddFlyoutBehaviorObserver(Microsoft.Maui.Controls.IFlyoutBehaviorObserver)" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.IShellController.AddFlyoutBehaviorObserver : Microsoft.Maui.Controls.IFlyoutBehaviorObserver -&gt; unit&#xA;override this.Microsoft.Maui.Controls.IShellController.AddFlyoutBehaviorObserver : Microsoft.Maui.Controls.IFlyoutBehaviorObserver -&gt; unit" Usage="shell.Microsoft.Maui.Controls.IShellController.AddFlyoutBehaviorObserver observer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IShellController.AddFlyoutBehaviorObserver(Microsoft.Maui.Controls.IFlyoutBehaviorObserver)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="Microsoft.Maui.Controls.IFlyoutBehaviorObserver" />
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IShellController.AppearanceChanged">
      <MemberSignature Language="C#" Value="void IShellController.AppearanceChanged (Microsoft.Maui.Controls.Element source, bool appearanceSet);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Maui.Controls.IShellController.AppearanceChanged(class Microsoft.Maui.Controls.Element source, bool appearanceSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.Xamarin#Forms#IShellController#AppearanceChanged(Microsoft.Maui.Controls.Element,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.IShellController.AppearanceChanged : Microsoft.Maui.Controls.Element * bool -&gt; unit&#xA;override this.Microsoft.Maui.Controls.IShellController.AppearanceChanged : Microsoft.Maui.Controls.Element * bool -&gt; unit" Usage="shell.Microsoft.Maui.Controls.IShellController.AppearanceChanged (source, appearanceSet)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IShellController.AppearanceChanged(Microsoft.Maui.Controls.Element,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Maui.Controls.Element" />
        <Parameter Name="appearanceSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="appearanceSet">To be added.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IShellController.FlyoutHeader">
      <MemberSignature Language="C#" Value="Microsoft.Maui.Controls.View Microsoft.Maui.Controls.IShellController.FlyoutHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.View Microsoft.Maui.Controls.IShellController.FlyoutHeader" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Shell.Xamarin#Forms#IShellController#FlyoutHeader" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.Controls.IShellController.FlyoutHeader : Microsoft.Maui.Controls.View" Usage="Microsoft.Maui.Controls.IShellController.FlyoutHeader" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IShellController.FlyoutHeader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IShellController.GenerateFlyoutGrouping">
      <MemberSignature Language="C#" Value="System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Microsoft.Maui.Controls.Element&gt;&gt; IShellController.GenerateFlyoutGrouping ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.List`1&lt;class System.Collections.Generic.List`1&lt;class Microsoft.Maui.Controls.Element&gt;&gt; Microsoft.Maui.Controls.IShellController.GenerateFlyoutGrouping() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.Xamarin#Forms#IShellController#GenerateFlyoutGrouping" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.IShellController.GenerateFlyoutGrouping : unit -&gt; System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Microsoft.Maui.Controls.Element&gt;&gt;&#xA;override this.Microsoft.Maui.Controls.IShellController.GenerateFlyoutGrouping : unit -&gt; System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Microsoft.Maui.Controls.Element&gt;&gt;" Usage="shell.Microsoft.Maui.Controls.IShellController.GenerateFlyoutGrouping " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IShellController.GenerateFlyoutGrouping</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Collections.Generic.List&lt;Microsoft.Maui.Controls.Element&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IShellController.GetFlyoutItemDataTemplate">
      <MemberSignature Language="C#" Value="Microsoft.Maui.Controls.DataTemplate IShellController.GetFlyoutItemDataTemplate (Microsoft.Maui.Controls.BindableObject bo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Maui.Controls.DataTemplate Microsoft.Maui.Controls.IShellController.GetFlyoutItemDataTemplate(class Microsoft.Maui.Controls.BindableObject bo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.Xamarin#Forms#IShellController#GetFlyoutItemDataTemplate(Microsoft.Maui.Controls.BindableObject)" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.IShellController.GetFlyoutItemDataTemplate : Microsoft.Maui.Controls.BindableObject -&gt; Microsoft.Maui.Controls.DataTemplate&#xA;override this.Microsoft.Maui.Controls.IShellController.GetFlyoutItemDataTemplate : Microsoft.Maui.Controls.BindableObject -&gt; Microsoft.Maui.Controls.DataTemplate" Usage="shell.Microsoft.Maui.Controls.IShellController.GetFlyoutItemDataTemplate bo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IShellController.GetFlyoutItemDataTemplate(Microsoft.Maui.Controls.BindableObject)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.DataTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bo" Type="Microsoft.Maui.Controls.BindableObject" />
      </Parameters>
      <Docs>
        <param name="bo">To be added.</param>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IShellController.GetItems">
      <MemberSignature Language="C#" Value="System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Maui.Controls.ShellItem&gt; IShellController.GetItems ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Maui.Controls.ShellItem&gt; Microsoft.Maui.Controls.IShellController.GetItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.Xamarin#Forms#IShellController#GetItems" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.IShellController.GetItems : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Maui.Controls.ShellItem&gt;&#xA;override this.Microsoft.Maui.Controls.IShellController.GetItems : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Maui.Controls.ShellItem&gt;" Usage="shell.Microsoft.Maui.Controls.IShellController.GetItems " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IShellController.GetItems</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Maui.Controls.ShellItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IShellController.GetNavigationState">
      <MemberSignature Language="C#" Value="Microsoft.Maui.Controls.ShellNavigationState IShellController.GetNavigationState (Microsoft.Maui.Controls.ShellItem shellItem, Microsoft.Maui.Controls.ShellSection shellSection, Microsoft.Maui.Controls.ShellContent shellContent, bool includeStack);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.Maui.Controls.ShellNavigationState Microsoft.Maui.Controls.IShellController.GetNavigationState(class Microsoft.Maui.Controls.ShellItem shellItem, class Microsoft.Maui.Controls.ShellSection shellSection, class Microsoft.Maui.Controls.ShellContent shellContent, bool includeStack) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.Xamarin#Forms#IShellController#GetNavigationState(Microsoft.Maui.Controls.ShellItem,Microsoft.Maui.Controls.ShellSection,Microsoft.Maui.Controls.ShellContent,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.IShellController.GetNavigationState : Microsoft.Maui.Controls.ShellItem * Microsoft.Maui.Controls.ShellSection * Microsoft.Maui.Controls.ShellContent * bool -&gt; Microsoft.Maui.Controls.ShellNavigationState&#xA;override this.Microsoft.Maui.Controls.IShellController.GetNavigationState : Microsoft.Maui.Controls.ShellItem * Microsoft.Maui.Controls.ShellSection * Microsoft.Maui.Controls.ShellContent * bool -&gt; Microsoft.Maui.Controls.ShellNavigationState" Usage="shell.Microsoft.Maui.Controls.IShellController.GetNavigationState (shellItem, shellSection, shellContent, includeStack)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IShellController.GetNavigationState(Microsoft.Maui.Controls.ShellItem,Microsoft.Maui.Controls.ShellSection,Microsoft.Maui.Controls.ShellContent,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.ShellNavigationState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shellItem" Type="Microsoft.Maui.Controls.ShellItem" />
        <Parameter Name="shellSection" Type="Microsoft.Maui.Controls.ShellSection" />
        <Parameter Name="shellContent" Type="Microsoft.Maui.Controls.ShellContent" />
        <Parameter Name="includeStack" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="shellItem">To be added.</param>
        <param name="shellSection">To be added.</param>
        <param name="shellContent">To be added.</param>
        <param name="includeStack">To be added.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IShellController.ItemsCollectionChanged">
      <MemberSignature Language="C#" Value="event System.Collections.Specialized.NotifyCollectionChangedEventHandler Microsoft.Maui.Controls.IShellController.ItemsCollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Collections.Specialized.NotifyCollectionChangedEventHandler Microsoft.Maui.Controls.IShellController.ItemsCollectionChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.Shell.Xamarin#Forms#IShellController#ItemsCollectionChanged" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.Controls.IShellController.ItemsCollectionChanged : System.Collections.Specialized.NotifyCollectionChangedEventHandler " Usage="member this.Microsoft.Maui.Controls.IShellController.ItemsCollectionChanged : System.Collections.Specialized.NotifyCollectionChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:Microsoft.Maui.Controls.IShellController.ItemsCollectionChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NotifyCollectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IShellController.OnFlyoutItemSelected">
      <MemberSignature Language="C#" Value="void IShellController.OnFlyoutItemSelected (Microsoft.Maui.Controls.Element element);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Maui.Controls.IShellController.OnFlyoutItemSelected(class Microsoft.Maui.Controls.Element element) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.Xamarin#Forms#IShellController#OnFlyoutItemSelected(Microsoft.Maui.Controls.Element)" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.IShellController.OnFlyoutItemSelected : Microsoft.Maui.Controls.Element -&gt; unit&#xA;override this.Microsoft.Maui.Controls.IShellController.OnFlyoutItemSelected : Microsoft.Maui.Controls.Element -&gt; unit" Usage="shell.Microsoft.Maui.Controls.IShellController.OnFlyoutItemSelected element" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IShellController.OnFlyoutItemSelected(Microsoft.Maui.Controls.Element)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.Maui.Controls.Element" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IShellController.OnFlyoutItemSelectedAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task IShellController.OnFlyoutItemSelectedAsync (Microsoft.Maui.Controls.Element element);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task Microsoft.Maui.Controls.IShellController.OnFlyoutItemSelectedAsync(class Microsoft.Maui.Controls.Element element) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.Xamarin#Forms#IShellController#OnFlyoutItemSelectedAsync(Microsoft.Maui.Controls.Element)" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.IShellController.OnFlyoutItemSelectedAsync : Microsoft.Maui.Controls.Element -&gt; System.Threading.Tasks.Task&#xA;override this.Microsoft.Maui.Controls.IShellController.OnFlyoutItemSelectedAsync : Microsoft.Maui.Controls.Element -&gt; System.Threading.Tasks.Task" Usage="shell.Microsoft.Maui.Controls.IShellController.OnFlyoutItemSelectedAsync element" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IShellController.OnFlyoutItemSelectedAsync(Microsoft.Maui.Controls.Element)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.Maui.Controls.Element" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IShellController.ProposeNavigation">
      <MemberSignature Language="C#" Value="bool IShellController.ProposeNavigation (Microsoft.Maui.Controls.ShellNavigationSource source, Microsoft.Maui.Controls.ShellItem shellItem, Microsoft.Maui.Controls.ShellSection shellSection, Microsoft.Maui.Controls.ShellContent shellContent, System.Collections.Generic.IReadOnlyList&lt;Microsoft.Maui.Controls.Page&gt; stack, bool canCancel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.Maui.Controls.IShellController.ProposeNavigation(valuetype Microsoft.Maui.Controls.ShellNavigationSource source, class Microsoft.Maui.Controls.ShellItem shellItem, class Microsoft.Maui.Controls.ShellSection shellSection, class Microsoft.Maui.Controls.ShellContent shellContent, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.Maui.Controls.Page&gt; stack, bool canCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.Xamarin#Forms#IShellController#ProposeNavigation(Microsoft.Maui.Controls.ShellNavigationSource,Microsoft.Maui.Controls.ShellItem,Microsoft.Maui.Controls.ShellSection,Microsoft.Maui.Controls.ShellContent,System.Collections.Generic.IReadOnlyList{Microsoft.Maui.Controls.Page},System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.IShellController.ProposeNavigation : Microsoft.Maui.Controls.ShellNavigationSource * Microsoft.Maui.Controls.ShellItem * Microsoft.Maui.Controls.ShellSection * Microsoft.Maui.Controls.ShellContent * System.Collections.Generic.IReadOnlyList&lt;Microsoft.Maui.Controls.Page&gt; * bool -&gt; bool&#xA;override this.Microsoft.Maui.Controls.IShellController.ProposeNavigation : Microsoft.Maui.Controls.ShellNavigationSource * Microsoft.Maui.Controls.ShellItem * Microsoft.Maui.Controls.ShellSection * Microsoft.Maui.Controls.ShellContent * System.Collections.Generic.IReadOnlyList&lt;Microsoft.Maui.Controls.Page&gt; * bool -&gt; bool" Usage="shell.Microsoft.Maui.Controls.IShellController.ProposeNavigation (source, shellItem, shellSection, shellContent, stack, canCancel)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IShellController.ProposeNavigation(Microsoft.Maui.Controls.ShellNavigationSource,Microsoft.Maui.Controls.ShellItem,Microsoft.Maui.Controls.ShellSection,Microsoft.Maui.Controls.ShellContent,System.Collections.Generic.IReadOnlyList{Microsoft.Maui.Controls.Page},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Maui.Controls.ShellNavigationSource" />
        <Parameter Name="shellItem" Type="Microsoft.Maui.Controls.ShellItem" />
        <Parameter Name="shellSection" Type="Microsoft.Maui.Controls.ShellSection" />
        <Parameter Name="shellContent" Type="Microsoft.Maui.Controls.ShellContent" />
        <Parameter Name="stack" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.Maui.Controls.Page&gt;" />
        <Parameter Name="canCancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="shellItem">To be added.</param>
        <param name="shellSection">To be added.</param>
        <param name="shellContent">To be added.</param>
        <param name="stack">To be added.</param>
        <param name="canCancel">To be added.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IShellController.RemoveAppearanceObserver">
      <MemberSignature Language="C#" Value="bool IShellController.RemoveAppearanceObserver (Microsoft.Maui.Controls.IAppearanceObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.Maui.Controls.IShellController.RemoveAppearanceObserver(class Microsoft.Maui.Controls.IAppearanceObserver observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.Xamarin#Forms#IShellController#RemoveAppearanceObserver(Microsoft.Maui.Controls.IAppearanceObserver)" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.IShellController.RemoveAppearanceObserver : Microsoft.Maui.Controls.IAppearanceObserver -&gt; bool&#xA;override this.Microsoft.Maui.Controls.IShellController.RemoveAppearanceObserver : Microsoft.Maui.Controls.IAppearanceObserver -&gt; bool" Usage="shell.Microsoft.Maui.Controls.IShellController.RemoveAppearanceObserver observer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IShellController.RemoveAppearanceObserver(Microsoft.Maui.Controls.IAppearanceObserver)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="Microsoft.Maui.Controls.IAppearanceObserver" />
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IShellController.RemoveFlyoutBehaviorObserver">
      <MemberSignature Language="C#" Value="bool IShellController.RemoveFlyoutBehaviorObserver (Microsoft.Maui.Controls.IFlyoutBehaviorObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.Maui.Controls.IShellController.RemoveFlyoutBehaviorObserver(class Microsoft.Maui.Controls.IFlyoutBehaviorObserver observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.Xamarin#Forms#IShellController#RemoveFlyoutBehaviorObserver(Microsoft.Maui.Controls.IFlyoutBehaviorObserver)" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.IShellController.RemoveFlyoutBehaviorObserver : Microsoft.Maui.Controls.IFlyoutBehaviorObserver -&gt; bool&#xA;override this.Microsoft.Maui.Controls.IShellController.RemoveFlyoutBehaviorObserver : Microsoft.Maui.Controls.IFlyoutBehaviorObserver -&gt; bool" Usage="shell.Microsoft.Maui.Controls.IShellController.RemoveFlyoutBehaviorObserver observer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IShellController.RemoveFlyoutBehaviorObserver(Microsoft.Maui.Controls.IFlyoutBehaviorObserver)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="Microsoft.Maui.Controls.IFlyoutBehaviorObserver" />
      </Parameters>
      <Docs>
        <param name="observer">To be added.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IShellController.StructureChanged">
      <MemberSignature Language="C#" Value="event EventHandler Microsoft.Maui.Controls.IShellController.StructureChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Microsoft.Maui.Controls.IShellController.StructureChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.Shell.Xamarin#Forms#IShellController#StructureChanged" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.Controls.IShellController.StructureChanged : EventHandler " Usage="member this.Microsoft.Maui.Controls.IShellController.StructureChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:Microsoft.Maui.Controls.IShellController.StructureChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IShellController.UpdateCurrentState">
      <MemberSignature Language="C#" Value="void IShellController.UpdateCurrentState (Microsoft.Maui.Controls.ShellNavigationSource source);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Maui.Controls.IShellController.UpdateCurrentState(valuetype Microsoft.Maui.Controls.ShellNavigationSource source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Shell.Xamarin#Forms#IShellController#UpdateCurrentState(Microsoft.Maui.Controls.ShellNavigationSource)" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.IShellController.UpdateCurrentState : Microsoft.Maui.Controls.ShellNavigationSource -&gt; unit&#xA;override this.Microsoft.Maui.Controls.IShellController.UpdateCurrentState : Microsoft.Maui.Controls.ShellNavigationSource -&gt; unit" Usage="shell.Microsoft.Maui.Controls.IShellController.UpdateCurrentState source" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IShellController.UpdateCurrentState(Microsoft.Maui.Controls.ShellNavigationSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Maui.Controls.ShellNavigationSource" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
