<Type Name="MultiTrigger" FullName="Microsoft.Maui.Controls.MultiTrigger">
  <TypeSignature Language="C#" Value="public sealed class MultiTrigger : Microsoft.Maui.Controls.TriggerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MultiTrigger extends Microsoft.Maui.Controls.TriggerBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.MultiTrigger" />
  <TypeSignature Language="F#" Value="type MultiTrigger = class&#xA;    inherit TriggerBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Maui.Controls.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.Maui.Controls.ContentProperty("Setters")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Class that represents a list of property and binding conditions, and a list of setters that are applied when all of the conditions in the list are met.</summary>
    <remarks>
      <para>Developers can use a <see cref="T:Microsoft.Maui.Controls.MultiTrigger" /> to compare against property values on the control that contains it by using <see cref="T:Microsoft.Maui.Controls.Trigger" /> objects, or on any bound property (including those on the enclosing control) by using <see cref="T:Microsoft.Maui.Controls.BindingCondition" /> objects. These can be mixed in the same <see cref="P:Microsoft.Maui.Controls.MultiTrigger.Conditions" /> list.</para>
      <example>
        <para>The XML example below, when added to a Microsoft.Maui.Controls app with the correct project namespace, creates a UI that suggests that the user type in a secret and toggle a switch to check if the secret is correct. If the user enters "The text color is green", and toggles the <see cref="T:Microsoft.Maui.Controls.Switch" /> to its <c>On</c> position, then the text that the user typed into the <see cref="T:Microsoft.Maui.Controls.Entry" /> turns green. If either the text is altered to something other than the secret or the Switch is toggled to its <c>Off</c> position, the text returns to the default color</para>
        <code lang="XML"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:PropertyConditionDemo"
             x:Class="PropertyConditionDemo.PropertyConditionDemoPage">
    <StackLayout VerticalOptions="Center">
        <Label Text="Do you know the secret?"
               VerticalOptions="Center"
               HorizontalOptions="Center" />
        <Entry Placeholder="Type the secret!"
               VerticalOptions="Center"
               HorizontalOptions="Center">
            <Entry.Triggers>
                <MultiTrigger TargetType="Entry" >
                    <MultiTrigger.Conditions>
                        <PropertyCondition Property="Text" Value="The text color is green" />
                        <BindingCondition Binding="{Binding Source={x:Reference checkSecret},
                                                            Path=IsToggled}"
                                          Value="true" />
                    </MultiTrigger.Conditions>
                    <Setter Property="TextColor"
                        Value="Color.Green" />
                </MultiTrigger>
            </Entry.Triggers>
        </Entry>
        <Label Text="Check the secret?"
               VerticalOptions="Center"
               HorizontalOptions="Center" />
        <Switch x:Name="checkSecret"
                VerticalOptions="Center"
                HorizontalOptions="Center" />
    </StackLayout>
</ContentPage>]]></code>
      </example>
    </remarks>
    <altmember cref="T:Microsoft.Maui.Controls.PropertyCondition" />
    <altmember cref="T:Microsoft.Maui.Controls.BindingCondition" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultiTrigger (Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.MultiTrigger.#ctor(System.Type)" />
      <MemberSignature Language="F#" Value="new Microsoft.Maui.Controls.MultiTrigger : Type -&gt; Microsoft.Maui.Controls.MultiTrigger" Usage="new Microsoft.Maui.Controls.MultiTrigger targetType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type">
          <Attributes>
            <Attribute>
              <AttributeName>System.ComponentModel.TypeConverter(typeof(Microsoft.Maui.Controls.TypeTypeConverter))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="targetType">The type of the trigger target.</param>
        <summary>Initializes a new <see cref="T:Microsoft.Maui.Controls.MultiTrigger" /> instance.</summary>
      </Docs>
    </Member>
    <Member MemberName="Conditions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.Condition&gt; Conditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Maui.Controls.Condition&gt; Conditions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.MultiTrigger.Conditions" />
      <MemberSignature Language="F#" Value="member this.Conditions : System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.Condition&gt;" Usage="Microsoft.Maui.Controls.MultiTrigger.Conditions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.Condition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the list of conditions that must be satisfied in ordeer for the setters in the <see cref="P:Microsoft.Maui.Controls.MultiTrigger.Setters" /> list to be invoked.</summary>
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.Setter&gt; Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Maui.Controls.Setter&gt; Setters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.MultiTrigger.Setters" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.Setter&gt;" Usage="Microsoft.Maui.Controls.MultiTrigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.Setter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the list of <see cref="T:Microsoft.Maui.Controls.Setter" /> objects that will be applied when the list of conditions in the <see cref="P:Microsoft.Maui.Controls.MultiTrigger.Conditions" /> property are all met.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
