<Type Name="ListView" FullName="Microsoft.Maui.Controls.ListView">
  <TypeSignature Language="C#" Value="public class ListView : Microsoft.Maui.Controls.ItemsView&lt;Microsoft.Maui.Controls.Cell&gt;, Microsoft.Maui.Controls.IElementConfiguration&lt;Microsoft.Maui.Controls.ListView&gt;, Microsoft.Maui.Controls.IListViewController" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListView extends Microsoft.Maui.Controls.ItemsView`1&lt;class Microsoft.Maui.Controls.Cell&gt; implements class Microsoft.Maui.Controls.IElementConfiguration`1&lt;class Microsoft.Maui.Controls.ListView&gt;, class Microsoft.Maui.Controls.IElementController, class Microsoft.Maui.Controls.IListViewController, class Microsoft.Maui.Controls.IViewController, class Microsoft.Maui.Controls.IVisualElementController" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.ListView" />
  <TypeSignature Language="F#" Value="type ListView = class&#xA;    inherit ItemsView&lt;Cell&gt;&#xA;    interface IListViewController&#xA;    interface IViewController&#xA;    interface IVisualElementController&#xA;    interface IElementController&#xA;    interface IElementConfiguration&lt;ListView&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.5.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Maui.Controls.ItemsView&lt;Microsoft.Maui.Controls.Cell&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TVisual">Microsoft.Maui.Controls.Cell</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IElementConfiguration&lt;Microsoft.Maui.Controls.ListView&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IElementController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IListViewController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IViewController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IVisualElementController</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.Maui.Controls.RenderWith(typeof(Microsoft.Maui.Controls.Platform._ListViewRenderer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An <see cref="T:Microsoft.Maui.Controls.ItemsView`1" /> that displays a collection of data as a vertical list.</summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates and initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.ListView" /> class.</summary>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListView (Microsoft.Maui.Controls.ListViewCachingStrategy cachingStrategy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.Maui.Controls.ListViewCachingStrategy cachingStrategy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.#ctor(Microsoft.Maui.Controls.ListViewCachingStrategy)" />
      <MemberSignature Language="F#" Value="new Microsoft.Maui.Controls.ListView : Microsoft.Maui.Controls.ListViewCachingStrategy -&gt; Microsoft.Maui.Controls.ListView" Usage="new Microsoft.Maui.Controls.ListView cachingStrategy" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cachingStrategy" Type="Microsoft.Maui.Controls.ListViewCachingStrategy" />
      </Parameters>
      <Docs>
        <param name="cachingStrategy">A value that indicates how the List View should manage memory when displaying data items using a data template.</param>
        <summary>Creates and initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.ListView" /> class, with the specified caching strategy.</summary>
        <remarks>
          <para>For memory and performance reasons, application developers should strongly prefer <see cref="F:Microsoft.Maui.Controls.ListViewCachingStrategy.RecycleElement" />, when possible. See <see cref="T:Microsoft.Maui.Controls.ListViewCachingStrategy" /> for more details.</para>
          <para>
            <block type="note">When developers specify <see cref="F:Microsoft.Maui.Controls.ListViewCachingStrategy.RecycleElement" />, <c>OnElementChanged</c> events are not raised when cells are recycled. Instead,  the cell is retained and its property values change when the binding context is updated to that of an available cell, <c>OnElementPropertyChanged</c> events are raised. Application developers should remember to listen for the correct events, and should note that their renderers will need to be updated if the default behavior changes to <see cref="F:Microsoft.Maui.Controls.ListViewCachingStrategy.RecycleElement" /> in a future release. </block>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRefresh">
      <MemberSignature Language="C#" Value="public void BeginRefresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginRefresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.BeginRefresh" />
      <MemberSignature Language="F#" Value="member this.BeginRefresh : unit -&gt; unit" Usage="listView.BeginRefresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enters the refreshing state by setting the <see cref="P:Microsoft.Maui.Controls.ListView.IsRefreshing" /> property to <see langword="true" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="CachingStrategy">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.ListViewCachingStrategy CachingStrategy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Controls.ListViewCachingStrategy CachingStrategy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.CachingStrategy" />
      <MemberSignature Language="F#" Value="member this.CachingStrategy : Microsoft.Maui.Controls.ListViewCachingStrategy" Usage="Microsoft.Maui.Controls.ListView.CachingStrategy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.ListViewCachingStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="CreateDefault">
      <MemberSignature Language="C#" Value="protected override Microsoft.Maui.Controls.Cell CreateDefault (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.Maui.Controls.Cell CreateDefault(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.CreateDefault(System.Object)" />
      <MemberSignature Language="F#" Value="override this.CreateDefault : obj -&gt; Microsoft.Maui.Controls.Cell" Usage="listView.CreateDefault item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Cell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">The item to create a default visual for.</param>
        <summary>Creates an instance of the default visual representation of an item.</summary>
        <returns>
          A <see cref="T:Microsoft.Maui.Controls.TextCell" /> instance with its text set to the string representation of the object (<see cref="M:System.Object.ToString" />).
        </returns>
        <remarks>
          <para>
            This method is called by the templating system when <see cref="P:Microsoft.Maui.Controls.ItemsView`1.ItemTemplate" /> is <see langword="null" />.
          </para>
          <para>
            The <see cref="P:Microsoft.Maui.Controls.BindableObject.BindingContext" /> of the returned object will automatically be set to <paramref name="item" />, there is no
            need to set it yourself. If you do, it will be overridden.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultCell">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.Cell CreateDefaultCell (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Maui.Controls.Cell CreateDefaultCell(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.CreateDefaultCell(System.Object)" />
      <MemberSignature Language="F#" Value="abstract member CreateDefaultCell : obj -&gt; Microsoft.Maui.Controls.Cell&#xA;override this.CreateDefaultCell : obj -&gt; Microsoft.Maui.Controls.Cell" Usage="listView.CreateDefaultCell item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IListViewController.CreateDefaultCell(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Cell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="EndRefresh">
      <MemberSignature Language="C#" Value="public void EndRefresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndRefresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.EndRefresh" />
      <MemberSignature Language="F#" Value="member this.EndRefresh : unit -&gt; unit" Usage="listView.EndRefresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Exits the refreshing state by setting the <see cref="P:Microsoft.Maui.Controls.ListView.IsRefreshing" /> property to <see langword="false" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Footer">
      <MemberSignature Language="C#" Value="public object Footer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Footer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.Footer" />
      <MemberSignature Language="F#" Value="member this.Footer : obj with get, set" Usage="Microsoft.Maui.Controls.ListView.Footer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the string, binding, or view that will be displayed at the bottom of the list view.</summary>
      </Docs>
    </Member>
    <Member MemberName="FooterElement">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.Element FooterElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.Element FooterElement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.FooterElement" />
      <MemberSignature Language="F#" Value="member this.FooterElement : Microsoft.Maui.Controls.Element" Usage="Microsoft.Maui.Controls.ListView.FooterElement" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IListViewController.FooterElement</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Element</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="FooterProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty FooterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty FooterProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.ListView.FooterProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable FooterProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.ListView.FooterProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.Footer" /> property.</summary>
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.DataTemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.DataTemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.FooterTemplate" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : Microsoft.Maui.Controls.DataTemplate with get, set" Usage="Microsoft.Maui.Controls.ListView.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a data template to use to format a data object for display at the bottom of the list view.</summary>
      </Docs>
    </Member>
    <Member MemberName="FooterTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty FooterTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty FooterTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.ListView.FooterTemplateProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable FooterTemplateProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.ListView.FooterTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.FooterTemplate" /> property.</summary>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayTextFromGroup">
      <MemberSignature Language="C#" Value="public string GetDisplayTextFromGroup (object cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDisplayTextFromGroup(object cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.GetDisplayTextFromGroup(System.Object)" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayTextFromGroup : obj -&gt; string&#xA;override this.GetDisplayTextFromGroup : obj -&gt; string" Usage="listView.GetDisplayTextFromGroup cell" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IListViewController.GetDisplayTextFromGroup(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="cell">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="GroupDisplayBinding">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.BindingBase GroupDisplayBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.BindingBase GroupDisplayBinding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.GroupDisplayBinding" />
      <MemberSignature Language="F#" Value="member this.GroupDisplayBinding : Microsoft.Maui.Controls.BindingBase with get, set" Usage="Microsoft.Maui.Controls.ListView.GroupDisplayBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the binding to use for displaying the group header.</summary>
        <value>The <see cref="T:Microsoft.Maui.Controls.BindingBase" /> instance to apply to grouped lists, or <see langword="null" />.</value>
        <remarks>
          <para>
                        This binding can be used to simply set a the text of the group headers without defining a full template and uses the default visuals
                        of the platform to display it. The binding is applied to the <see cref="T:System.Collections.IEnumerable" /> of the group.
                    </para>
          <para>
                        This property is mutually exclusive with <see cref="P:Microsoft.Maui.Controls.ListView.GroupHeaderTemplate" /> property. Setting it will set
                        <see cref="P:Microsoft.Maui.Controls.ListView.GroupHeaderTemplate" /> to <see langword="null" />.
                    </para>
        </remarks>
        <example>
          <para>This example shows an alphabetized list of people, grouped by first initial with the display binding set.</para>
          <code lang="csharp lang-csharp"><![CDATA[
    class Person
    {
        public string FullName
        {
            get;
            set;
        }
    
        public string Address
        {
            get;
            set;
        }
    }
                        ]]></code>
          <code lang="csharp lang-csharp"><![CDATA[
    class Group : ObservableCollection<Person>
    {
        public Group (string firstInitial)
        {
            FirstInitial = firstInitial;
        }
    
        public string FirstInitial
        {
            get;
            private set;
        }
    }
                        ]]></code>
          <code lang="csharp lang-csharp"><![CDATA[
    ListView CreateListView()
    {
        var listView = new ListView {
            IsGroupingEnabled = true,
            GroupDisplayBinding = new Binding ("FirstInitial"),
            GroupShortNameBinding = new Binding ("FirstInitial")
        };
    
        var template = new DataTemplate (typeof (TextCell));
        template.SetBinding (TextCell.TextProperty, "FullName");
        template.SetBinding (TextCell.DetailProperty, "Address");
    
        itemsView.ItemTemplate = template;
        itemsView.ItemsSource = new[] {
            new Group ("C") {
                new Person { FullName = "Caprice Nave" }
            },
    
            new Group ("J") {
                new Person { FullName = "James Smith", Address = "404 Nowhere Street" },
                new Person { FullName = "John Doe", Address = "404 Nowhere Ave" }
            }
        };
    }
                        ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="GroupHeaderTemplate">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.DataTemplate GroupHeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.DataTemplate GroupHeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.GroupHeaderTemplate" />
      <MemberSignature Language="F#" Value="member this.GroupHeaderTemplate : Microsoft.Maui.Controls.DataTemplate with get, set" Usage="Microsoft.Maui.Controls.ListView.GroupHeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:Microsoft.Maui.Controls.DataTemplate" /> for group headers.</summary>
        <value>The <see cref="T:Microsoft.Maui.Controls.DataTemplate" /> for group headers, or <see langword="null" />.</value>
        <remarks>
          <para>
            Use this property to define a template for a <see cref="T:Microsoft.Maui.Controls.Cell" /> that will be used as the header for groups in this
            <see cref="T:Microsoft.Maui.Controls.ListView" />. The <see cref="P:Microsoft.Maui.Controls.BindableObject.BindingContext" /> will be the <see cref="T:System.Collections.IEnumerable" />
            for each group.
          </para>
          <para>
            GroupHeaderTemplate is mutually exclusive with <see cref="P:Microsoft.Maui.Controls.ListView.GroupDisplayBinding" />. Setting this property
            will set <see cref="P:Microsoft.Maui.Controls.ListView.GroupDisplayBinding" /> to <see langword="null" />.
          </para>
          <para>Empty groups will still display a group header.</para>
        </remarks>
        <altmember cref="P:Microsoft.Maui.Controls.ItemsView`1.ItemsSource" />
        <altmember cref="P:Microsoft.Maui.Controls.ListView.GroupDisplayBinding" />
        <altmember cref="P:Microsoft.Maui.Controls.ListView.IsGroupingEnabled" />
      </Docs>
    </Member>
    <Member MemberName="GroupHeaderTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty GroupHeaderTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty GroupHeaderTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.ListView.GroupHeaderTemplateProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable GroupHeaderTemplateProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.ListView.GroupHeaderTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="P:Microsoft.Maui.Controls.ListView.GroupHeaderTemplate" /> property.</summary>
      </Docs>
    </Member>
    <Member MemberName="GroupShortNameBinding">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.BindingBase GroupShortNameBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.BindingBase GroupShortNameBinding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.GroupShortNameBinding" />
      <MemberSignature Language="F#" Value="member this.GroupShortNameBinding : Microsoft.Maui.Controls.BindingBase with get, set" Usage="Microsoft.Maui.Controls.ListView.GroupShortNameBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a binding for the name to display in grouped jump lists.</summary>
        <value>The <see cref="T:Microsoft.Maui.Controls.BindingBase" /> instance to apply to grouped lists, or <see langword="null" />.</value>
        <remarks>
          <para>
            When grouping items in a <see cref="T:Microsoft.Maui.Controls.ListView" />, it is often useful to have jump lists to jump to specific
            sections in the list. For example, in an alphabetically grouped lists, the jump list would be the the letter of each group.
            This binding is applied against the <see cref="T:System.Collections.IEnumerable" /> of each group to select the short name to display
            in the jump list.
          </para>
          <para>
            Note: On Android, there is no displayed jump list.
          </para>
        </remarks>
        <example>
          <para>This example shows an alphabetized list of people, grouped by first initial with the short name binding set.</para>
          <code lang="csharp lang-csharp"><![CDATA[
class Person
{
  public string FullName
  {
    get;
    set;
  }
    
  public string Address
  {
    get;
    set;
  }
}
          ]]></code>
          <code lang="csharp lang-csharp"><![CDATA[
class Group : ObservableCollection<Person>
{
  public Group (string firstInitial)
  {
    FirstInitial = firstInitial;
  }
    
  public string FirstInitial
  {
    get;
    private set;
  }
}
          ]]></code>
          <code lang="csharp lang-csharp"><![CDATA[
ListView CreateListView()
{
  var listView = new ListView {
    IsGroupingEnabled = true,
    GroupDisplayBinding = new Binding ("FirstInitial"),
    GroupShortNameBinding = new Binding ("FirstInitial")
  };
    
  var template = new DataTemplate (typeof (TextCell));
  template.SetBinding (TextCell.TextProperty, "FullName");
  template.SetBinding (TextCell.DetailProperty, "Address");
    
  itemsView.ItemTemplate = template;
  itemsView.ItemsSource = new[] {
        new Group ("C") {
            new Person { FullName = "Caprice Nave" }
        },
    
    new Group ("J") {
            new Person { FullName = "James Smith", Address = "404 Nowhere Street" },
            new Person { FullName = "John Doe", Address = "404 Nowhere Ave" }
        }
  };
}
          ]]></code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="HasUnevenRows">
      <MemberSignature Language="C#" Value="public bool HasUnevenRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasUnevenRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.HasUnevenRows" />
      <MemberSignature Language="F#" Value="member this.HasUnevenRows : bool with get, set" Usage="Microsoft.Maui.Controls.ListView.HasUnevenRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a Boolean value that indicates whether this <see cref="T:Microsoft.Maui.Controls.ListView" /> element has uneven rows.</summary>
        <value>
          <see langword="true" /> if this <see cref="T:Microsoft.Maui.Controls.ListView" /> control has uneven rows. Otherwise, <see langword="false" /></value>
        <remarks>
          <para>To automatically size row height to fit content, the developer first sets the <see cref="P:Microsoft.Maui.Controls.ListView.HasUnevenRows" /> property to <see langword="true" />; and, second, either leaves <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> at its default value of -1, or sets it to -1 if it has been changed.</para>
          <para>Alternatively, to ensure a constant size for all rows, the developer first sets <see cref="P:Microsoft.Maui.Controls.ListView.HasUnevenRows" /> to <see langword="false" />, and then either: leaves <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> at its default value of -1 (or sets it back to that value if it has been changed) in order to get the default height for the system; or sets the <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> property to the desired uniform row height.</para>
          <para>A more detailed discussion follows, below.</para>
          <para>When the app developer sets the <see cref="P:Microsoft.Maui.Controls.ListView.HasUnevenRows" /> property to <see langword="false" />, the behavior of the list view depends on the <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> property. First, if the developer sets the <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> property to a positive value, then all rows in the <see cref="T:Microsoft.Maui.Controls.ListView" />, irrespective of the height of their content, will be as tall as the specified <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> property value. Second, if the develper instead does not set the <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> property, or sets it to a nonpositive value, then all rows in the <see cref="T:Microsoft.Maui.Controls.ListView" />, irrespective of the height of their content, will have the default row height for the system.</para>
          <para>When the app developer sets the <see cref="P:Microsoft.Maui.Controls.ListView.HasUnevenRows" /> property to <see langword="true" />, the behavior of the list view still depends on the <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> property. First, if the developer either does not set the <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> property or sets it to -1, list view items are autosized to fit their contents. This is the desired behavior and the intended use case for a <see cref="P:Microsoft.Maui.Controls.ListView.HasUnevenRows" /> value of <see langword="true" />, as noted above. Second, if the developer sets the <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> property to 0 or to a negative value other than -1, then all rows in the <see cref="T:Microsoft.Maui.Controls.ListView" /> will, irrespective of the height of their content, have the default height for the system. Third, and finally, if the developer sets <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" /> to a positive value, then all rows in the <see cref="T:Microsoft.Maui.Controls.ListView" /> will, irrespective of the height of their content, be as tall as <see cref="P:Microsoft.Maui.Controls.ListView.RowHeight" />, as if <see cref="P:Microsoft.Maui.Controls.ListView.HasUnevenRows" /> had been set to <see langword="false" />.
      </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasUnevenRowsProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty HasUnevenRowsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty HasUnevenRowsProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.ListView.HasUnevenRowsProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable HasUnevenRowsProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.ListView.HasUnevenRowsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="F:Microsoft.Maui.Controls.ListView.HasUnevenRowsProperty" /> property.</summary>
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="public object Header { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Header" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.Header" />
      <MemberSignature Language="F#" Value="member this.Header : obj with get, set" Usage="Microsoft.Maui.Controls.ListView.Header" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the string, binding, or view that will be displayed at the top of the list view.</summary>
      </Docs>
    </Member>
    <Member MemberName="HeaderElement">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.Element HeaderElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.Element HeaderElement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.HeaderElement" />
      <MemberSignature Language="F#" Value="member this.HeaderElement : Microsoft.Maui.Controls.Element" Usage="Microsoft.Maui.Controls.ListView.HeaderElement" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IListViewController.HeaderElement</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Element</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="HeaderProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty HeaderProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty HeaderProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.ListView.HeaderProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable HeaderProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.ListView.HeaderProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.Header" /> property.</summary>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.DataTemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.DataTemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.HeaderTemplate" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : Microsoft.Maui.Controls.DataTemplate with get, set" Usage="Microsoft.Maui.Controls.ListView.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a data template to use to format a data object for display at the top of the list view.</summary>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty HeaderTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty HeaderTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.ListView.HeaderTemplateProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable HeaderTemplateProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.ListView.HeaderTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.HeaderTemplate" /> property.</summary>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.ScrollBarVisibility HorizontalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Controls.ScrollBarVisibility HorizontalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.HorizontalScrollBarVisibility" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollBarVisibility : Microsoft.Maui.Controls.ScrollBarVisibility with get, set" Usage="Microsoft.Maui.Controls.ListView.HorizontalScrollBarVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.ListView.HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalScrollBarVisibilityProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.ListView.HorizontalScrollBarVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.HorizontalScrollBarVisibility" /> field.</summary>
      </Docs>
    </Member>
    <Member MemberName="IsGroupingEnabled">
      <MemberSignature Language="C#" Value="public bool IsGroupingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGroupingEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.IsGroupingEnabled" />
      <MemberSignature Language="F#" Value="member this.IsGroupingEnabled : bool with get, set" Usage="Microsoft.Maui.Controls.ListView.IsGroupingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether or not grouping is enabled for <see cref="T:Microsoft.Maui.Controls.ListView" />.</summary>
        <value>
          <see langword="true" /> if grouping is enabled, <see langword="false" /> otherwise and by default.
        </value>
        <altmember cref="P:Microsoft.Maui.Controls.ListView.GroupDisplayBinding" />
        <altmember cref="P:Microsoft.Maui.Controls.ListView.GroupHeaderTemplate" />
      </Docs>
    </Member>
    <Member MemberName="IsGroupingEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty IsGroupingEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty IsGroupingEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.ListView.IsGroupingEnabledProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable IsGroupingEnabledProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.ListView.IsGroupingEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="F:Microsoft.Maui.Controls.ListView.IsGroupingEnabledProperty" /> property.</summary>
      </Docs>
    </Member>
    <Member MemberName="IsPullToRefreshEnabled">
      <MemberSignature Language="C#" Value="public bool IsPullToRefreshEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPullToRefreshEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.IsPullToRefreshEnabled" />
      <MemberSignature Language="F#" Value="member this.IsPullToRefreshEnabled : bool with get, set" Usage="Microsoft.Maui.Controls.ListView.IsPullToRefreshEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that tells whether the user can swipe down to cause the application to refresh.</summary>
      </Docs>
    </Member>
    <Member MemberName="IsPullToRefreshEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty IsPullToRefreshEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty IsPullToRefreshEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.ListView.IsPullToRefreshEnabledProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable IsPullToRefreshEnabledProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.ListView.IsPullToRefreshEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.IsPullToRefreshEnabled" /> property.</summary>
      </Docs>
    </Member>
    <Member MemberName="IsRefreshing">
      <MemberSignature Language="C#" Value="public bool IsRefreshing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRefreshing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.IsRefreshing" />
      <MemberSignature Language="F#" Value="member this.IsRefreshing : bool with get, set" Usage="Microsoft.Maui.Controls.ListView.IsRefreshing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that tells whether the list view is currently refreshing.</summary>
      </Docs>
    </Member>
    <Member MemberName="IsRefreshingProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty IsRefreshingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty IsRefreshingProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.ListView.IsRefreshingProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable IsRefreshingProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.ListView.IsRefreshingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.IsRefreshing" /> property.</summary>
      </Docs>
    </Member>
    <Member MemberName="ItemAppearing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.ItemVisibilityEventArgs&gt; ItemAppearing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.ItemVisibilityEventArgs&gt; ItemAppearing" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.ListView.ItemAppearing" />
      <MemberSignature Language="F#" Value="member this.ItemAppearing : EventHandler&lt;Microsoft.Maui.Controls.ItemVisibilityEventArgs&gt; " Usage="member this.ItemAppearing : System.EventHandler&lt;Microsoft.Maui.Controls.ItemVisibilityEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.ItemVisibilityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the visual representation of an item is being added to the visual layout.</summary>
        <remarks>This method is guaranteed to fire at some point before the element is on screen.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDisappearing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.ItemVisibilityEventArgs&gt; ItemDisappearing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.ItemVisibilityEventArgs&gt; ItemDisappearing" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.ListView.ItemDisappearing" />
      <MemberSignature Language="F#" Value="member this.ItemDisappearing : EventHandler&lt;Microsoft.Maui.Controls.ItemVisibilityEventArgs&gt; " Usage="member this.ItemDisappearing : System.EventHandler&lt;Microsoft.Maui.Controls.ItemVisibilityEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.ItemVisibilityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the visual representation of an item is being removed from the visual layout.</summary>
        <remarks>This method is for virtualization usage only. It is not guaranteed to fire for all visible items when the List is removed from the screen. Additionally it fires during virtualization, which may not correspond directly with removal from the screen depending on the platform virtualization technique used.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemSelected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.SelectedItemChangedEventArgs&gt; ItemSelected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.SelectedItemChangedEventArgs&gt; ItemSelected" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.ListView.ItemSelected" />
      <MemberSignature Language="F#" Value="member this.ItemSelected : EventHandler&lt;Microsoft.Maui.Controls.SelectedItemChangedEventArgs&gt; " Usage="member this.ItemSelected : System.EventHandler&lt;Microsoft.Maui.Controls.SelectedItemChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.SelectedItemChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event that is raised when a new item is selected.</summary>
      </Docs>
    </Member>
    <Member MemberName="ItemTapped">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.ItemTappedEventArgs&gt; ItemTapped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.ItemTappedEventArgs&gt; ItemTapped" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.ListView.ItemTapped" />
      <MemberSignature Language="F#" Value="member this.ItemTapped : EventHandler&lt;Microsoft.Maui.Controls.ItemTappedEventArgs&gt; " Usage="member this.ItemTapped : System.EventHandler&lt;Microsoft.Maui.Controls.ItemTappedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.ItemTappedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event that is raised when an item is tapped.</summary>
      </Docs>
    </Member>
    <Member MemberName="NotifyRowTapped">
      <MemberSignature Language="C#" Value="public void NotifyRowTapped (int index, Microsoft.Maui.Controls.Cell cell = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyRowTapped(int32 index, class Microsoft.Maui.Controls.Cell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.NotifyRowTapped(System.Int32,Microsoft.Maui.Controls.Cell)" />
      <MemberSignature Language="F#" Value="abstract member NotifyRowTapped : int * Microsoft.Maui.Controls.Cell -&gt; unit&#xA;override this.NotifyRowTapped : int * Microsoft.Maui.Controls.Cell -&gt; unit" Usage="listView.NotifyRowTapped (index, cell)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IListViewController.NotifyRowTapped(System.Int32,Microsoft.Maui.Controls.Cell)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cell" Type="Microsoft.Maui.Controls.Cell" />
      </Parameters>
      <Docs>
        <param name="index">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="cell">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="NotifyRowTapped">
      <MemberSignature Language="C#" Value="public void NotifyRowTapped (int groupIndex, int inGroupIndex, Microsoft.Maui.Controls.Cell cell = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyRowTapped(int32 groupIndex, int32 inGroupIndex, class Microsoft.Maui.Controls.Cell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.NotifyRowTapped(System.Int32,System.Int32,Microsoft.Maui.Controls.Cell)" />
      <MemberSignature Language="F#" Value="abstract member NotifyRowTapped : int * int * Microsoft.Maui.Controls.Cell -&gt; unit&#xA;override this.NotifyRowTapped : int * int * Microsoft.Maui.Controls.Cell -&gt; unit" Usage="listView.NotifyRowTapped (groupIndex, inGroupIndex, cell)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IListViewController.NotifyRowTapped(System.Int32,System.Int32,Microsoft.Maui.Controls.Cell)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupIndex" Type="System.Int32" />
        <Parameter Name="inGroupIndex" Type="System.Int32" />
        <Parameter Name="cell" Type="Microsoft.Maui.Controls.Cell" />
      </Parameters>
      <Docs>
        <param name="groupIndex">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="inGroupIndex">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="cell">To be added.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="NotifyRowTapped">
      <MemberSignature Language="C#" Value="public void NotifyRowTapped (int index, Microsoft.Maui.Controls.Cell cell, bool isContextmenuRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyRowTapped(int32 index, class Microsoft.Maui.Controls.Cell cell, bool isContextmenuRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.NotifyRowTapped(System.Int32,Microsoft.Maui.Controls.Cell,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member NotifyRowTapped : int * Microsoft.Maui.Controls.Cell * bool -&gt; unit&#xA;override this.NotifyRowTapped : int * Microsoft.Maui.Controls.Cell * bool -&gt; unit" Usage="listView.NotifyRowTapped (index, cell, isContextmenuRequested)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IListViewController.NotifyRowTapped(System.Int32,Microsoft.Maui.Controls.Cell,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cell" Type="Microsoft.Maui.Controls.Cell" />
        <Parameter Name="isContextmenuRequested" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="cell">To be added.</param>
        <param name="isContextmenuRequested">To be added.</param>
      </Docs>
    </Member>
    <Member MemberName="NotifyRowTapped">
      <MemberSignature Language="C#" Value="public void NotifyRowTapped (int groupIndex, int inGroupIndex, Microsoft.Maui.Controls.Cell cell, bool isContextMenuRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyRowTapped(int32 groupIndex, int32 inGroupIndex, class Microsoft.Maui.Controls.Cell cell, bool isContextMenuRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.NotifyRowTapped(System.Int32,System.Int32,Microsoft.Maui.Controls.Cell,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member NotifyRowTapped : int * int * Microsoft.Maui.Controls.Cell * bool -&gt; unit&#xA;override this.NotifyRowTapped : int * int * Microsoft.Maui.Controls.Cell * bool -&gt; unit" Usage="listView.NotifyRowTapped (groupIndex, inGroupIndex, cell, isContextMenuRequested)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IListViewController.NotifyRowTapped(System.Int32,System.Int32,Microsoft.Maui.Controls.Cell,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupIndex" Type="System.Int32" />
        <Parameter Name="inGroupIndex" Type="System.Int32" />
        <Parameter Name="cell" Type="Microsoft.Maui.Controls.Cell" />
        <Parameter Name="isContextMenuRequested" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="groupIndex">To be added.</param>
        <param name="inGroupIndex">To be added.</param>
        <param name="cell">To be added.</param>
        <param name="isContextMenuRequested">To be added.</param>
      </Docs>
    </Member>
    <Member MemberName="On&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.IPlatformElementConfiguration&lt;T,Microsoft.Maui.Controls.ListView&gt; On&lt;T&gt; () where T : Microsoft.Maui.Controls.IConfigPlatform;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Maui.Controls.IPlatformElementConfiguration`2&lt;!!T, class Microsoft.Maui.Controls.ListView&gt; On&lt;(class Microsoft.Maui.Controls.IConfigPlatform) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.On``1" />
      <MemberSignature Language="F#" Value="abstract member On : unit -&gt; Microsoft.Maui.Controls.IPlatformElementConfiguration&lt;'T, Microsoft.Maui.Controls.ListView (requires 'T :&gt; Microsoft.Maui.Controls.IConfigPlatform)&gt; (requires 'T :&gt; Microsoft.Maui.Controls.IConfigPlatform)&#xA;override this.On : unit -&gt; Microsoft.Maui.Controls.IPlatformElementConfiguration&lt;'T, Microsoft.Maui.Controls.ListView (requires 'T :&gt; Microsoft.Maui.Controls.IConfigPlatform)&gt; (requires 'T :&gt; Microsoft.Maui.Controls.IConfigPlatform)" Usage="listView.On " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IElementConfiguration`1.On``1</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.IPlatformElementConfiguration&lt;T,Microsoft.Maui.Controls.ListView&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Maui.Controls.IConfigPlatform</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <summary>Returns the platform-specific instance of this <see cref="T:Microsoft.Maui.Controls.ListView" />, on which a platform-specific method may be called.</summary>
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingContextChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingContextChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.OnBindingContextChanged" />
      <MemberSignature Language="F#" Value="override this.OnBindingContextChanged : unit -&gt; unit" Usage="listView.OnBindingContextChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Method that is called when the binding context changes.</summary>
      </Docs>
    </Member>
    <Member MemberName="OnSizeRequest">
      <MemberSignature Language="C#" Value="protected override Microsoft.Maui.SizeRequest OnSizeRequest (double widthConstraint, double heightConstraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype Microsoft.Maui.SizeRequest OnSizeRequest(float64 widthConstraint, float64 heightConstraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.OnSizeRequest(System.Double,System.Double)" />
      <MemberSignature Language="F#" Value="override this.OnSizeRequest : double * double -&gt; Microsoft.Maui.SizeRequest" Usage="listView.OnSizeRequest (widthConstraint, heightConstraint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("OnSizeRequest is obsolete as of version 2.2.0. Please use OnMeasure instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.SizeRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widthConstraint" Type="System.Double" />
        <Parameter Name="heightConstraint" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="widthConstraint">The width constraint.</param>
        <param name="heightConstraint">The height constraint.</param>
        <summary>Method that is called when a size request is made.</summary>
      </Docs>
    </Member>
    <Member MemberName="RefreshAllowed">
      <MemberSignature Language="C#" Value="public bool RefreshAllowed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RefreshAllowed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.RefreshAllowed" />
      <MemberSignature Language="F#" Value="member this.RefreshAllowed : bool with get, set" Usage="Microsoft.Maui.Controls.ListView.RefreshAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="RefreshCommand">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand RefreshCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand RefreshCommand" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.RefreshCommand" />
      <MemberSignature Language="F#" Value="member this.RefreshCommand : System.Windows.Input.ICommand with get, set" Usage="Microsoft.Maui.Controls.ListView.RefreshCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the command that is run when the list view enters the refreshing state.</summary>
      </Docs>
    </Member>
    <Member MemberName="RefreshCommandProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty RefreshCommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty RefreshCommandProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.ListView.RefreshCommandProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable RefreshCommandProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.ListView.RefreshCommandProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.RefreshCommand" /> property.</summary>
      </Docs>
    </Member>
    <Member MemberName="RefreshControlColor">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Graphics.Color RefreshControlColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Graphics.Color RefreshControlColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.RefreshControlColor" />
      <MemberSignature Language="F#" Value="member this.RefreshControlColor : Microsoft.Maui.Graphics.Color with get, set" Usage="Microsoft.Maui.Controls.ListView.RefreshControlColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Graphics.Color</ReturnType>
      </ReturnValue>
      <Docs>
      </Docs>
    </Member>
    <Member MemberName="RefreshControlColorProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty RefreshControlColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty RefreshControlColorProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.ListView.RefreshControlColorProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable RefreshControlColorProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.ListView.RefreshControlColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.RefreshControlColor" /> field.</summary>
      </Docs>
    </Member>
    <Member MemberName="Refreshing">
      <MemberSignature Language="C#" Value="public event EventHandler Refreshing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Refreshing" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.ListView.Refreshing" />
      <MemberSignature Language="F#" Value="member this.Refreshing : EventHandler " Usage="member this.Refreshing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event that is raised when the list view refreshes.</summary>
      </Docs>
    </Member>
    <Member MemberName="RowHeight">
      <MemberSignature Language="C#" Value="public int RowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.RowHeight" />
      <MemberSignature Language="F#" Value="member this.RowHeight : int with get, set" Usage="Microsoft.Maui.Controls.ListView.RowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that represents the height of a row.</summary>
      </Docs>
    </Member>
    <Member MemberName="RowHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty RowHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty RowHeightProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.ListView.RowHeightProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable RowHeightProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.ListView.RowHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="F:Microsoft.Maui.Controls.ListView.RowHeightProperty" /> property.</summary>
      </Docs>
    </Member>
    <Member MemberName="Scrolled">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.ScrolledEventArgs&gt; Scrolled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.ScrolledEventArgs&gt; Scrolled" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.ListView.Scrolled" />
      <MemberSignature Language="F#" Value="member this.Scrolled : EventHandler&lt;Microsoft.Maui.Controls.ScrolledEventArgs&gt; " Usage="member this.Scrolled : System.EventHandler&lt;Microsoft.Maui.Controls.ScrolledEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.ScrolledEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
      </Docs>
    </Member>
    <Member MemberName="ScrollTo">
      <MemberSignature Language="C#" Value="public void ScrollTo (object item, Microsoft.Maui.Controls.ScrollToPosition position, bool animated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollTo(object item, valuetype Microsoft.Maui.Controls.ScrollToPosition position, bool animated) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.ScrollTo(System.Object,Microsoft.Maui.Controls.ScrollToPosition,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.ScrollTo : obj * Microsoft.Maui.Controls.ScrollToPosition * bool -&gt; unit" Usage="listView.ScrollTo (item, position, animated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="position" Type="Microsoft.Maui.Controls.ScrollToPosition" />
        <Parameter Name="animated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="item">The item from your <see cref="P:Microsoft.Maui.Controls.ItemsView`1.ItemsSource" /> to scroll to.</param>
        <param name="position">How the item should be positioned on screen.</param>
        <param name="animated">Whether or not the scroll should be animated.</param>
        <summary>Scrolls the ListView to the <paramref name="item" />.</summary>
        <remarks>
          <para>A linear search is done for the item, so if the same reference appears multiple times in the list, the first item will be scrolled to. This includes if grouping is enabled.</para>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="position" /> contains an invalid value for <see cref="T:Microsoft.Maui.Controls.ScrollToPosition" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ScrollTo">
      <MemberSignature Language="C#" Value="public void ScrollTo (object item, object group, Microsoft.Maui.Controls.ScrollToPosition position, bool animated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollTo(object item, object group, valuetype Microsoft.Maui.Controls.ScrollToPosition position, bool animated) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.ScrollTo(System.Object,System.Object,Microsoft.Maui.Controls.ScrollToPosition,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.ScrollTo : obj * obj * Microsoft.Maui.Controls.ScrollToPosition * bool -&gt; unit" Usage="listView.ScrollTo (item, group, position, animated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="group" Type="System.Object" />
        <Parameter Name="position" Type="Microsoft.Maui.Controls.ScrollToPosition" />
        <Parameter Name="animated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="item">The item from your <see cref="P:Microsoft.Maui.Controls.ItemsView`1.ItemsSource" /> to scroll to.</param>
        <param name="group">The group from your <see cref="P:Microsoft.Maui.Controls.ItemsView`1.ItemsSource" /> to scroll to.</param>
        <param name="position">How the item should be positioned on screen.</param>
        <param name="animated">Whether or not the scroll should be animated.</param>
        <summary>Scrolls the ListView to the <paramref name="item" /> in the <paramref name="group" /></summary>
        <remarks>
          <para>A linear search is done for the item, so if the same reference appears multiple times in the <paramref name="group" />, the first item will be scrolled to. The same item in a different group will be ignored.</para>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="position" /> contains an invalid value for <see cref="T:Microsoft.Maui.Controls.ScrollToPosition" />.
                </exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Microsoft.Maui.Controls.ListView.IsGroupingEnabled" /> is <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ScrollToRequested">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.ScrollToRequestedEventArgs&gt; ScrollToRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.ScrollToRequestedEventArgs&gt; ScrollToRequested" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.ListView.ScrollToRequested" />
      <MemberSignature Language="F#" Value="member this.ScrollToRequested : EventHandler&lt;Microsoft.Maui.Controls.ScrollToRequestedEventArgs&gt; " Usage="member this.ScrollToRequested : System.EventHandler&lt;Microsoft.Maui.Controls.ScrollToRequestedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:Microsoft.Maui.Controls.IListViewController.ScrollToRequested</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.ScrollToRequestedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public object SelectedItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedItem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.SelectedItem" />
      <MemberSignature Language="F#" Value="member this.SelectedItem : obj with get, set" Usage="Microsoft.Maui.Controls.ListView.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the currently selected item from the <see cref="P:Microsoft.Maui.Controls.ItemsView`1.ItemsSource" />.</summary>
        <value>The selected item or <see langword="null" /> if no item is selected.</value>
      </Docs>
    </Member>
    <Member MemberName="SelectedItemProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty SelectedItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty SelectedItemProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.ListView.SelectedItemProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectedItemProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.ListView.SelectedItemProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the <see cref="F:Microsoft.Maui.Controls.ListView.SelectedItemProperty" /> property.</summary>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.ListViewSelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Controls.ListViewSelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.SelectionMode" />
      <MemberSignature Language="F#" Value="member this.SelectionMode : Microsoft.Maui.Controls.ListViewSelectionMode with get, set" Usage="Microsoft.Maui.Controls.ListView.SelectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.ListViewSelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that controls whether and how many items can be selected.</summary>
        <value>
          <see cref="F:Microsoft.Maui.Controls.ListViewSelectionMode.None" /> if no selections can be made. <see cref="F:Microsoft.Maui.Controls.ListViewSelectionMode.Single" /> if one selection can be made.</value>
        <remarks>If an item is selected, changing <see cref="P:Microsoft.Maui.Controls.ListView.SelectionMode" /> to <see cref="F:Microsoft.Maui.Controls.ListViewSelectionMode.None" /> will cause the item to be deselected, and <see cref="E:Microsoft.Maui.Controls.ListView.ItemSelected" /> to be raised with a <see langword="null" /> item value.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionModeProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty SelectionModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty SelectionModeProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.ListView.SelectionModeProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionModeProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.ListView.SelectionModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.SelectionMode" /> property.</summary>
      </Docs>
    </Member>
    <Member MemberName="SendCellAppearing">
      <MemberSignature Language="C#" Value="public void SendCellAppearing (Microsoft.Maui.Controls.Cell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendCellAppearing(class Microsoft.Maui.Controls.Cell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.SendCellAppearing(Microsoft.Maui.Controls.Cell)" />
      <MemberSignature Language="F#" Value="abstract member SendCellAppearing : Microsoft.Maui.Controls.Cell -&gt; unit&#xA;override this.SendCellAppearing : Microsoft.Maui.Controls.Cell -&gt; unit" Usage="listView.SendCellAppearing cell" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IListViewController.SendCellAppearing(Microsoft.Maui.Controls.Cell)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="Microsoft.Maui.Controls.Cell" />
      </Parameters>
      <Docs>
        <param name="cell">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="SendCellDisappearing">
      <MemberSignature Language="C#" Value="public void SendCellDisappearing (Microsoft.Maui.Controls.Cell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendCellDisappearing(class Microsoft.Maui.Controls.Cell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.SendCellDisappearing(Microsoft.Maui.Controls.Cell)" />
      <MemberSignature Language="F#" Value="abstract member SendCellDisappearing : Microsoft.Maui.Controls.Cell -&gt; unit&#xA;override this.SendCellDisappearing : Microsoft.Maui.Controls.Cell -&gt; unit" Usage="listView.SendCellDisappearing cell" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IListViewController.SendCellDisappearing(Microsoft.Maui.Controls.Cell)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="Microsoft.Maui.Controls.Cell" />
      </Parameters>
      <Docs>
        <param name="cell">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="SendRefreshing">
      <MemberSignature Language="C#" Value="public void SendRefreshing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendRefreshing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.SendRefreshing" />
      <MemberSignature Language="F#" Value="abstract member SendRefreshing : unit -&gt; unit&#xA;override this.SendRefreshing : unit -&gt; unit" Usage="listView.SendRefreshing " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IListViewController.SendRefreshing</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="SendScrolled">
      <MemberSignature Language="C#" Value="public void SendScrolled (Microsoft.Maui.Controls.ScrolledEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendScrolled(class Microsoft.Maui.Controls.ScrolledEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.SendScrolled(Microsoft.Maui.Controls.ScrolledEventArgs)" />
      <MemberSignature Language="F#" Value="member this.SendScrolled : Microsoft.Maui.Controls.ScrolledEventArgs -&gt; unit" Usage="listView.SendScrolled args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="Microsoft.Maui.Controls.ScrolledEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
      </Docs>
    </Member>
    <Member MemberName="SeparatorColor">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Graphics.Color SeparatorColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Graphics.Color SeparatorColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.SeparatorColor" />
      <MemberSignature Language="F#" Value="member this.SeparatorColor : Microsoft.Maui.Graphics.Color with get, set" Usage="Microsoft.Maui.Controls.ListView.SeparatorColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Graphics.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the color of the bar that separates list items.</summary>
        <remarks>The default value is <c>Color.Default</c>. This property has no effect if <see cref="P:Microsoft.Maui.Controls.ListView.SeparatorVisibility" /> is <see langword="false" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparatorColorProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty SeparatorColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty SeparatorColorProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.ListView.SeparatorColorProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable SeparatorColorProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.ListView.SeparatorColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.SeparatorColor" /> property.</summary>
      </Docs>
    </Member>
    <Member MemberName="SeparatorVisibility">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.SeparatorVisibility SeparatorVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Controls.SeparatorVisibility SeparatorVisibility" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.SeparatorVisibility" />
      <MemberSignature Language="F#" Value="member this.SeparatorVisibility : Microsoft.Maui.Controls.SeparatorVisibility with get, set" Usage="Microsoft.Maui.Controls.ListView.SeparatorVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.SeparatorVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that tells whether separators are visible between items.</summary>
      </Docs>
    </Member>
    <Member MemberName="SeparatorVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty SeparatorVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty SeparatorVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.ListView.SeparatorVisibilityProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable SeparatorVisibilityProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.ListView.SeparatorVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.SeparatorVisibility" /> property.</summary>
      </Docs>
    </Member>
    <Member MemberName="SetupContent">
      <MemberSignature Language="C#" Value="protected override void SetupContent (Microsoft.Maui.Controls.Cell content, int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetupContent(class Microsoft.Maui.Controls.Cell content, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.SetupContent(Microsoft.Maui.Controls.Cell,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.SetupContent : Microsoft.Maui.Controls.Cell * int -&gt; unit" Usage="listView.SetupContent (content, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.5.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Microsoft.Maui.Controls.Cell" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="content">The cell to set up.</param>
        <param name="index">The index of the cell in the list of items.</param>
        <summary>Application developers override this method to register event handlers for list view items.</summary>
        <remarks>
          <para>Application developers must call <see cref="M:Microsoft.Maui.Controls.ListView.SetupContent(Microsoft.Maui.Controls.Cell,System.Int32)" /> before performing any other action when overriding this method.</para>
          <block type="note">Application developers who override this method to allocate resources must override <see cref="M:Microsoft.Maui.Controls.ListView.UnhookContent(Microsoft.Maui.Controls.Cell)" /> in order to deallocate them.</block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhookContent">
      <MemberSignature Language="C#" Value="protected override void UnhookContent (Microsoft.Maui.Controls.Cell content);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UnhookContent(class Microsoft.Maui.Controls.Cell content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.UnhookContent(Microsoft.Maui.Controls.Cell)" />
      <MemberSignature Language="F#" Value="override this.UnhookContent : Microsoft.Maui.Controls.Cell -&gt; unit" Usage="listView.UnhookContent content" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Microsoft.Maui.Controls.Cell" />
      </Parameters>
      <Docs>
        <param name="content">The cell to unhook.</param>
        <summary>Application developers override this method to unregister event handlers for list view items that they registered in <see cref="M:Microsoft.Maui.Controls.ListView.SetupContent(Microsoft.Maui.Controls.Cell,System.Int32)" />.</summary>
        <remarks>
          <para>Application developers must call <see cref="M:Microsoft.Maui.Controls.ListView.UnhookContent(Microsoft.Maui.Controls.Cell)" /> before performing any other action when overriding this method.</para>
          <block type="note">Application developers who override <see cref="M:Microsoft.Maui.Controls.ListView.SetupContent(Microsoft.Maui.Controls.Cell,System.Int32)" /> to allocate resources must override this method in order to deallocate them.</block>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateItemTemplate">
      <MemberSignature Language="C#" Value="protected override bool ValidateItemTemplate (Microsoft.Maui.Controls.DataTemplate template);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ValidateItemTemplate(class Microsoft.Maui.Controls.DataTemplate template) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.ListView.ValidateItemTemplate(Microsoft.Maui.Controls.DataTemplate)" />
      <MemberSignature Language="F#" Value="override this.ValidateItemTemplate : Microsoft.Maui.Controls.DataTemplate -&gt; bool" Usage="listView.ValidateItemTemplate template" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="template" Type="Microsoft.Maui.Controls.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="template">To be added.</param>
        <summary>Returns <see langword="false" /> if <paramref name="template" /> is a template selector and elements are being retained. Otherwise, returns <see langword="true" />.</summary>
        <returns>
          <see langword="false" /> if <paramref name="template" /> is a template selector and elements are being retained. Otherwise, <see langword="true" />.</returns>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.ScrollBarVisibility VerticalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Controls.ScrollBarVisibility VerticalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.ListView.VerticalScrollBarVisibility" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollBarVisibility : Microsoft.Maui.Controls.ScrollBarVisibility with get, set" Usage="Microsoft.Maui.Controls.ListView.VerticalScrollBarVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.ListView.VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalScrollBarVisibilityProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.ListView.VerticalScrollBarVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.ListView.VerticalScrollBarVisibility" /> field.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
