<Type Name="Device" FullName="Microsoft.Maui.Controls.Device">
  <TypeSignature Language="C#" Value="public static class Device" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Device extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.Device" />
  <TypeSignature Language="F#" Value="type Device = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A utility class to interact with the current Device/Platform.</summary>
    <remarks>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Android">
      <MemberSignature Language="C#" Value="public const string Android;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Android" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Device.Android" />
      <MemberSignature Language="F#" Value="val mutable Android : string" Usage="Microsoft.Maui.Controls.Device.Android" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The string "Android", representing the Android operating system.</summary>
      </Docs>
    </Member>
    <Member MemberName="BeginInvokeOnMainThread">
      <MemberSignature Language="C#" Value="public static void BeginInvokeOnMainThread (Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginInvokeOnMainThread(class System.Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.BeginInvokeOnMainThread(System.Action)" />
      <MemberSignature Language="F#" Value="static member BeginInvokeOnMainThread : Action -&gt; unit" Usage="Microsoft.Maui.Controls.Device.BeginInvokeOnMainThread action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="action">The Action to invoke </param>
        <summary>Invokes an Action on the device main (UI) thread.</summary>
        <remarks>
          <para>This example shows how to set the Text of Label on the main thread, e.g. in response to an async event.
          </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
Device.BeginInvokeOnMainThread (() => {
  label.Text = "Async operation completed";
});
          ]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public static Microsoft.Maui.FlowDirection FlowDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Microsoft.Maui.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Device.FlowDirection" />
      <MemberSignature Language="F#" Value="member this.FlowDirection : Microsoft.Maui.FlowDirection" Usage="Microsoft.Maui.Controls.Device.FlowDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the flow direction on the device.</summary>
        <value>The flow direction on the device. See Remarks.</value>
        <remarks>
          <para>The following contains a few important points about flow direction from <format type="text/html"><a href="https://learn.microsoft.com/dotnet/maui/fundamentals/localization#right-to-left-localization">Right-to-Left Localization</a></format>. Developers should consult that document for more information about limitations of right-to-left support, and for requirements to implement right-to-left support on various target platforms.</para>
          <para>The default value of <see cref="T:Microsoft.Maui.FlowDirection" /> for a visual element that has no parent is <see cref="F:Microsoft.Maui.FlowDirection.LeftToRight" />, even on platforms where <see cref="P:Microsoft.Maui.Controls.Device.FlowDirection" /> is <see cref="F:Microsoft.Maui.FlowDirection.RightToLeft" />. Therefore, developers must deliberately opt in to right-to-left layout. Developers can choose right-to-left layout by setting the <see cref="P:Microsoft.Maui.Controls.VisualElement.FlowDirection" /> property of the root element to <see cref="F:Microsoft.Maui.FlowDirection.RightToLeft" /> to chosse right-to-left layout, or to <see cref="F:Microsoft.Maui.FlowDirection.MatchParent" /> to match the device layout.</para>
          <para>All <see cref="T:Microsoft.Maui.Controls.VisualElement" />s that have a parent default to <see cref="F:Microsoft.Maui.FlowDirection.MatchParent" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMainThreadSynchronizationContextAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Threading.SynchronizationContext&gt; GetMainThreadSynchronizationContextAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Threading.SynchronizationContext&gt; GetMainThreadSynchronizationContextAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.GetMainThreadSynchronizationContextAsync" />
      <MemberSignature Language="F#" Value="static member GetMainThreadSynchronizationContextAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Threading.SynchronizationContext&gt;" Usage="Microsoft.Maui.Controls.Device.GetMainThreadSynchronizationContextAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Threading.SynchronizationContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the current <see cref="T:System.Threading.SynchronizationContext" /> from the main thread.</summary>
        <returns>The current <see cref="T:System.Threading.SynchronizationContext" /> from the main thread.</returns>
      </Docs>
    </Member>
    <Member MemberName="GetNamedSize">
      <MemberSignature Language="C#" Value="public static double GetNamedSize (Microsoft.Maui.Controls.NamedSize size, Type targetElementType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNamedSize(valuetype Microsoft.Maui.Controls.NamedSize size, class System.Type targetElementType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.GetNamedSize(Microsoft.Maui.Controls.NamedSize,System.Type)" />
      <MemberSignature Language="F#" Value="static member GetNamedSize : Microsoft.Maui.Controls.NamedSize * Type -&gt; double" Usage="Microsoft.Maui.Controls.Device.GetNamedSize (size, targetElementType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="Microsoft.Maui.Controls.NamedSize" />
        <Parameter Name="targetElementType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="size">The named size for which to get the numeric size.</param>
        <param name="targetElementType">The element type for which to calculate the numeric size.</param>
        <summary>Returns a double that represents the named size for the font that is used on the element on the native platform.</summary>
        <returns>The named size for the font that is used on the element on the native platform.</returns>
      </Docs>
    </Member>
    <Member MemberName="GetNamedSize">
      <MemberSignature Language="C#" Value="public static double GetNamedSize (Microsoft.Maui.Controls.NamedSize size, Microsoft.Maui.Controls.Element targetElement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNamedSize(valuetype Microsoft.Maui.Controls.NamedSize size, class Microsoft.Maui.Controls.Element targetElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.GetNamedSize(Microsoft.Maui.Controls.NamedSize,Microsoft.Maui.Controls.Element)" />
      <MemberSignature Language="F#" Value="static member GetNamedSize : Microsoft.Maui.Controls.NamedSize * Microsoft.Maui.Controls.Element -&gt; double" Usage="Microsoft.Maui.Controls.Device.GetNamedSize (size, targetElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="Microsoft.Maui.Controls.NamedSize" />
        <Parameter Name="targetElement" Type="Microsoft.Maui.Controls.Element" />
      </Parameters>
      <Docs>
        <param name="size">The named size for which to get the numeric size.</param>
        <param name="targetElement">The element for which to calculate the numeric size.</param>
        <summary>Returns a double that represents a font size that corresponds to <paramref name="size" /> on <paramref name="targetElement" />.</summary>
        <returns>A double that represents a font size that corresponds to <paramref name="size" /> on <paramref name="targetElement" />.</returns>
      </Docs>
    </Member>
    <Member MemberName="GetNamedSize">
      <MemberSignature Language="C#" Value="public static double GetNamedSize (Microsoft.Maui.Controls.NamedSize size, Type targetElementType, bool useOldSizes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNamedSize(valuetype Microsoft.Maui.Controls.NamedSize size, class System.Type targetElementType, bool useOldSizes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.GetNamedSize(Microsoft.Maui.Controls.NamedSize,System.Type,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member GetNamedSize : Microsoft.Maui.Controls.NamedSize * Type * bool -&gt; double" Usage="Microsoft.Maui.Controls.Device.GetNamedSize (size, targetElementType, useOldSizes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="Microsoft.Maui.Controls.NamedSize" />
        <Parameter Name="targetElementType" Type="System.Type" />
        <Parameter Name="useOldSizes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="size">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="targetElementType">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="useOldSizes">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        <returns>For internal use by the Microsoft.Maui.Controls platform.</returns>
      </Docs>
    </Member>
    <Member MemberName="GTK">
      <MemberSignature Language="C#" Value="public const string GTK;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string GTK" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Device.GTK" />
      <MemberSignature Language="F#" Value="val mutable GTK : string" Usage="Microsoft.Maui.Controls.Device.GTK" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The string "GTK", representing the Linux operating system.</summary>
      </Docs>
    </Member>
    <Member MemberName="Idiom">
      <MemberSignature Language="C#" Value="public static Microsoft.Maui.Controls.TargetIdiom Idiom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Microsoft.Maui.Controls.TargetIdiom Idiom" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Device.Idiom" />
      <MemberSignature Language="F#" Value="member this.Idiom : Microsoft.Maui.Controls.TargetIdiom" Usage="Microsoft.Maui.Controls.Device.Idiom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.TargetIdiom</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the kind of device that Microsoft.Maui.Controls is currently working on.</summary>
        <value>A <see cref="T:Microsoft.Maui.Controls.TargetIdiom" /> that represents the device type.</value>
      </Docs>
    </Member>
    <Member MemberName="info">
      <MemberSignature Language="C#" Value="public static Microsoft.Maui.Controls.Internals.DeviceInfo info;" />
      <MemberSignature Language="ILAsm" Value=".field public static class Microsoft.Maui.Controls.Internals.DeviceInfo info" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Device.info" />
      <MemberSignature Language="F#" Value=" staticval mutable info : Microsoft.Maui.Controls.Internals.DeviceInfo" Usage="Microsoft.Maui.Controls.Device.info" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Internals.DeviceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public static Microsoft.Maui.Controls.Internals.DeviceInfo Info { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.Maui.Controls.Internals.DeviceInfo Info" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Device.Info" />
      <MemberSignature Language="F#" Value="member this.Info : Microsoft.Maui.Controls.Internals.DeviceInfo with get, set" Usage="Microsoft.Maui.Controls.Device.Info" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Internals.DeviceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="InvokeOnMainThreadAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task InvokeOnMainThreadAsync (Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task InvokeOnMainThreadAsync(class System.Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync(System.Action)" />
      <MemberSignature Language="F#" Value="static member InvokeOnMainThreadAsync : Action -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="action">The Action to invoke</param>
        <summary>Invokes an Action on the device main (UI) thread.</summary>
      </Docs>
    </Member>
    <Member MemberName="InvokeOnMainThreadAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task InvokeOnMainThreadAsync (Func&lt;System.Threading.Tasks.Task&gt; funcTask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task InvokeOnMainThreadAsync(class System.Func`1&lt;class System.Threading.Tasks.Task&gt; funcTask) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync(System.Func{System.Threading.Tasks.Task})" />
      <MemberSignature Language="F#" Value="static member InvokeOnMainThreadAsync : Func&lt;System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync funcTask" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="funcTask" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="funcTask">The Func to invoke.</param>
        <summary>Invokes a Func on the device main (UI) thread.</summary>
      </Docs>
    </Member>
    <Member MemberName="InvokeOnMainThreadAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;T&gt; InvokeOnMainThreadAsync&lt;T&gt; (Func&lt;System.Threading.Tasks.Task&lt;T&gt;&gt; funcTask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!T&gt; InvokeOnMainThreadAsync&lt;T&gt;(class System.Func`1&lt;class System.Threading.Tasks.Task`1&lt;!!T&gt;&gt; funcTask) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync``1(System.Func{System.Threading.Tasks.Task{``0}})" />
      <MemberSignature Language="F#" Value="static member InvokeOnMainThreadAsync : Func&lt;System.Threading.Tasks.Task&lt;'T&gt;&gt; -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync funcTask" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="funcTask" Type="System.Func&lt;System.Threading.Tasks.Task&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">The return type of the Func.</typeparam>
        <param name="funcTask">The Func to invoke.</param>
        <summary>Invokes a Func on the device main (UI) thread.</summary>
      </Docs>
    </Member>
    <Member MemberName="InvokeOnMainThreadAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;T&gt; InvokeOnMainThreadAsync&lt;T&gt; (Func&lt;T&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!T&gt; InvokeOnMainThreadAsync&lt;T&gt;(class System.Func`1&lt;!!T&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync``1(System.Func{``0})" />
      <MemberSignature Language="F#" Value="static member InvokeOnMainThreadAsync : Func&lt;'T&gt; -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="Microsoft.Maui.Controls.Device.InvokeOnMainThreadAsync func" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="func" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">The return type of the Func.</typeparam>
        <param name="func">The Func to invoke.</param>
        <summary>Invokes a Func on the device main (UI) thread.</summary>
      </Docs>
    </Member>
    <Member MemberName="iOS">
      <MemberSignature Language="C#" Value="public const string iOS;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string iOS" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Device.iOS" />
      <MemberSignature Language="F#" Value="val mutable iOS : string" Usage="Microsoft.Maui.Controls.Device.iOS" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The string "iOS", representing the iOS operating system.</summary>
      </Docs>
    </Member>
    <Member MemberName="IsInvokeRequired">
      <MemberSignature Language="C#" Value="public static bool IsInvokeRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsInvokeRequired" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Device.IsInvokeRequired" />
      <MemberSignature Language="F#" Value="member this.IsInvokeRequired : bool" Usage="Microsoft.Maui.Controls.Device.IsInvokeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="macOS">
      <MemberSignature Language="C#" Value="public const string macOS;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string macOS" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Device.macOS" />
      <MemberSignature Language="F#" Value="val mutable macOS : string" Usage="Microsoft.Maui.Controls.Device.macOS" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The string "macOS", representing the macOS operating system.</summary>
      </Docs>
    </Member>
    <Member MemberName="OnPlatform">
      <MemberSignature Language="C#" Value="public static void OnPlatform (Action iOS = default, Action Android = default, Action WinPhone = default, Action Default = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnPlatform(class System.Action iOS, class System.Action Android, class System.Action WinPhone, class System.Action Default) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.OnPlatform(System.Action,System.Action,System.Action,System.Action)" />
      <MemberSignature Language="F#" Value="static member OnPlatform : Action * Action * Action * Action -&gt; unit" Usage="Microsoft.Maui.Controls.Device.OnPlatform (iOS, Android, WinPhone, Default)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("OnPlatform is obsolete as of version 2.3.4. Please use 'switch (Device.RuntimePlatform)' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iOS" Type="System.Action" />
        <Parameter Name="Android" Type="System.Action" />
        <Parameter Name="WinPhone" Type="System.Action" />
        <Parameter Name="Default" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="iOS">(optional) The Action to execute on iOS.</param>
        <param name="Android">(optional) The Action to execute on Android.</param>
        <param name="WinPhone">(optional) The Action to execute on WinPhone.</param>
        <param name="Default">(optional) The Action to execute if no Action was provided for the current OS.</param>
        <summary>Executes different Actions depending on the <see cref="T:Microsoft.Maui.Controls.TargetPlatform" /> that Microsoft.Maui.Controls is working on.</summary>
        <remarks>
          <para>This example shows how to change the font of a Label on a single OS.
          </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
Device.OnPlatform (iOS: () => label.Font = Font.OfSize ("HelveticaNeue-UltraLight", NamedSize.Large));
          ]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPlatform&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T OnPlatform&lt;T&gt; (T iOS, T Android, T WinPhone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T OnPlatform&lt;T&gt;(!!T iOS, !!T Android, !!T WinPhone) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.OnPlatform``1(``0,``0,``0)" />
      <MemberSignature Language="F#" Value="static member OnPlatform : 'T * 'T * 'T -&gt; 'T" Usage="Microsoft.Maui.Controls.Device.OnPlatform (iOS, Android, WinPhone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("OnPlatform&lt;&gt; (generic) is obsolete as of version 2.3.4. Please use 'switch (Device.RuntimePlatform)' instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="iOS" Type="T" />
        <Parameter Name="Android" Type="T" />
        <Parameter Name="WinPhone" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of the value to be returned.</typeparam>
        <param name="iOS">The value for iOS.</param>
        <param name="Android">The value for Android.</param>
        <param name="WinPhone">The value for WinPhone.</param>
        <summary>Returns different values depending on the <see cref="T:Microsoft.Maui.Controls.TargetPlatform" /> Microsoft.Maui.Controls is working on.</summary>
        <returns>The value for the current OS.</returns>
        <remarks>
          <para>This example shows how to use different heights for a Button on different OS.
          </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
button.HeightRequest = Device.OnPlatform (20,30,30);
          ]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenUri">
      <MemberSignature Language="C#" Value="public static void OpenUri (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OpenUri(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.OpenUri(System.Uri)" />
      <MemberSignature Language="F#" Value="static member OpenUri : Uri -&gt; unit" Usage="Microsoft.Maui.Controls.Device.OpenUri uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("OpenUri is obsolete as of version 4.3.0. Use Launcher.OpenAsync (or CanOpenAsync, or TryOpenAsync) from Xamarin.Essentials instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">The <see cref="T:System.Uri" /> to open.</param>
        <summary>Request the device to open the Uri.</summary>
        <remarks>This often navigates out of the application.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OS">
      <MemberSignature Language="C#" Value="public static Microsoft.Maui.Controls.TargetPlatform OS { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Microsoft.Maui.Controls.TargetPlatform OS" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Device.OS" />
      <MemberSignature Language="F#" Value="member this.OS : Microsoft.Maui.Controls.TargetPlatform" Usage="Microsoft.Maui.Controls.Device.OS" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("TargetPlatform is obsolete as of version 2.3.4. Please use RuntimePlatform instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.TargetPlatform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:Microsoft.Maui.Controls.TargetPlatform" /> indicating the OS Microsoft.Maui.Controls is working on.</summary>
        <value>A <see cref="T:Microsoft.Maui.Controls.TargetPlatform" /> that indicates the current OS.</value>
      </Docs>
    </Member>
    <Member MemberName="PlatformServices">
      <MemberSignature Language="C#" Value="public static Microsoft.Maui.Controls.Internals.IPlatformServices PlatformServices { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.Maui.Controls.Internals.IPlatformServices PlatformServices" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Device.PlatformServices" />
      <MemberSignature Language="F#" Value="member this.PlatformServices : Microsoft.Maui.Controls.Internals.IPlatformServices with get, set" Usage="Microsoft.Maui.Controls.Device.PlatformServices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Internals.IPlatformServices</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="RuntimePlatform">
      <MemberSignature Language="C#" Value="public static string RuntimePlatform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string RuntimePlatform" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.Device.RuntimePlatform" />
      <MemberSignature Language="F#" Value="member this.RuntimePlatform : string" Usage="Microsoft.Maui.Controls.Device.RuntimePlatform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the kind of device that Microsoft.Maui.Controls is currently working on.</summary>
      </Docs>
    </Member>
    <Member MemberName="StartTimer">
      <MemberSignature Language="C#" Value="public static void StartTimer (TimeSpan interval, Func&lt;bool&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartTimer(valuetype System.TimeSpan interval, class System.Func`1&lt;bool&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Device.StartTimer(System.TimeSpan,System.Func{System.Boolean})" />
      <MemberSignature Language="F#" Value="static member StartTimer : TimeSpan * Func&lt;bool&gt; -&gt; unit" Usage="Microsoft.Maui.Controls.Device.StartTimer (interval, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.Func&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="interval">The interval between invocations of the callback.</param>
        <param name="callback">The action to run when the timer elapses.</param>
        <summary>Starts a recurring timer using the device clock capabilities.</summary>
        <remarks>
          <para>While the callback returns <see langword="true" />, the timer will keep recurring.</para>
          <para>If you want the code inside the timer to interact on the UI thread (e.g. setting text of a Label or showing an alert), it should be done within a <see langword="BeginInvokeOnMainThread" /> expression, which will be nested inside the timer (see below).</para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
Device.StartTimer (new TimeSpan (0, 0, 60), () =>
{
    // do something every 60 seconds
    Device.BeginInvokeOnMainThread (() => 
    {
      // interact with UI elements
    });
    return true; // runs again, or false to stop
});
          ]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tizen">
      <MemberSignature Language="C#" Value="public const string Tizen;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Tizen" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Device.Tizen" />
      <MemberSignature Language="F#" Value="val mutable Tizen : string" Usage="Microsoft.Maui.Controls.Device.Tizen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The string "Tizen", representing the Tizen operating system.</summary>
      </Docs>
    </Member>
    <Member MemberName="UWP">
      <MemberSignature Language="C#" Value="public const string UWP;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UWP" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Device.UWP" />
      <MemberSignature Language="F#" Value="val mutable UWP : string" Usage="Microsoft.Maui.Controls.Device.UWP" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The string "UWP", representing the UWP operating system.</summary>
      </Docs>
    </Member>
    <Member MemberName="WPF">
      <MemberSignature Language="C#" Value="public const string WPF;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string WPF" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.Device.WPF" />
      <MemberSignature Language="F#" Value="val mutable WPF : string" Usage="Microsoft.Maui.Controls.Device.WPF" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The string "WPF", representing the Windows Presentation Foundation framework.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
