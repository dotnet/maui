<Type Name="VisualElement" FullName="Microsoft.Maui.Controls.VisualElement">
  <TypeSignature Language="C#" Value="public class VisualElement : Microsoft.Maui.Controls.NavigableElement, Microsoft.Maui.Controls.IAnimatable, Microsoft.Maui.Controls.ITabStopElement, Microsoft.Maui.Controls.IVisualElementController" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualElement extends Microsoft.Maui.Controls.NavigableElement implements class Microsoft.Maui.Controls.IAnimatable, class Microsoft.Maui.Controls.IElementController, class Microsoft.Maui.Controls.ITabStopElement, class Microsoft.Maui.Controls.IVisualElementController" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.VisualElement" />
  <TypeSignature Language="F#" Value="type VisualElement = class&#xA;    inherit NavigableElement&#xA;    interface IAnimatable&#xA;    interface IVisualElementController&#xA;    interface IElementController&#xA;    interface ITabStopElement" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.0.0</AssemblyVersion>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Maui.Controls.NavigableElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IAnimatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IElementController</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.ITabStopElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Maui.Controls.IVisualElementController</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A <see cref="T:Microsoft.Maui.Controls.Element" /> that occupies an area on the screen, has a visual appearance, and can obtain touch input.</summary>
    <remarks>
      <para>The base class for most Microsoft.Maui.Controls on-screen elements. Provides most properties, events, and methods for presenting an item on screen.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal VisualElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
      </Docs>
    </Member>
    <Member MemberName="AnchorX">
      <MemberSignature Language="C#" Value="public double AnchorX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 AnchorX" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.AnchorX" />
      <MemberSignature Language="F#" Value="member this.AnchorX : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.AnchorX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the X component of the center point for any transform, relative to the bounds of the element. This is a bindable property.</summary>
        <value>The value that declares the X component of the transform. The default value is 0.5.</value>
        <altmember cref="P:Microsoft.Maui.Controls.VisualElement.AnchorY" />
      </Docs>
    </Member>
    <Member MemberName="AnchorXProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty AnchorXProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty AnchorXProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.AnchorXProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable AnchorXProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.AnchorXProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the AnchorX bindable property.</summary>
      </Docs>
    </Member>
    <Member MemberName="AnchorY">
      <MemberSignature Language="C#" Value="public double AnchorY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 AnchorY" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.AnchorY" />
      <MemberSignature Language="F#" Value="member this.AnchorY : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.AnchorY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the Y component of the center point for any transform, relative to the bounds of the element. This is a bindable property.</summary>
        <value>The value that declares the Y component of the transform. The default value is 0.5.</value>
        <altmember cref="P:Microsoft.Maui.Controls.VisualElement.AnchorX" />
      </Docs>
    </Member>
    <Member MemberName="AnchorYProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty AnchorYProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty AnchorYProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.AnchorYProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable AnchorYProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.AnchorYProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the AnchorY bindable property.</summary>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.Brush Background { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.Brush Background" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Background" />
      <MemberSignature Language="F#" Value="member this.Background : Microsoft.Maui.Controls.Brush with get, set" Usage="Microsoft.Maui.Controls.VisualElement.Background" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(Microsoft.Maui.Controls.BrushTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Brush</ReturnType>
      </ReturnValue>
      <Docs>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Graphics.Color BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Graphics.Color BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.BackgroundColor" />
      <MemberSignature Language="F#" Value="member this.BackgroundColor : Microsoft.Maui.Graphics.Color with get, set" Usage="Microsoft.Maui.Controls.VisualElement.BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Graphics.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the color which will fill the background of a VisualElement. This is a bindable property.</summary>
        <value>The color that is used to fill the background of a VisualElement.</value>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColorProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty BackgroundColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty BackgroundColorProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.BackgroundColorProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable BackgroundColorProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.BackgroundColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the BackgroundColor bindable property.</summary>
      </Docs>
    </Member>
    <Member MemberName="BackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty BackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty BackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.BackgroundProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable BackgroundProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.BackgroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
      </Docs>
    </Member>
    <Member MemberName="BatchBegin">
      <MemberSignature Language="C#" Value="public void BatchBegin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BatchBegin() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.BatchBegin" />
      <MemberSignature Language="F#" Value="abstract member BatchBegin : unit -&gt; unit&#xA;override this.BatchBegin : unit -&gt; unit" Usage="visualElement.BatchBegin " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IAnimatable.BatchBegin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Signals the start of a batch of changes to the elements properties.</summary>
        <remarks>Application authors will not generally need to batch updates manually as the animation framework will do this for them.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchCommit">
      <MemberSignature Language="C#" Value="public void BatchCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BatchCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.BatchCommit" />
      <MemberSignature Language="F#" Value="abstract member BatchCommit : unit -&gt; unit&#xA;override this.BatchCommit : unit -&gt; unit" Usage="visualElement.BatchCommit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IAnimatable.BatchCommit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Signals the end of a batch of commands to the element and that those commands should now be committed.</summary>
        <remarks>This method merely ensures that updates sent during the batch have been committed. It does not ensure that they were not committed before calling this.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BatchCommitted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.Internals.EventArg&lt;Microsoft.Maui.Controls.VisualElement&gt;&gt; BatchCommitted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.Internals.EventArg`1&lt;class Microsoft.Maui.Controls.VisualElement&gt;&gt; BatchCommitted" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.VisualElement.BatchCommitted" />
      <MemberSignature Language="F#" Value="member this.BatchCommitted : EventHandler&lt;Microsoft.Maui.Controls.Internals.EventArg&lt;Microsoft.Maui.Controls.VisualElement&gt;&gt; " Usage="member this.BatchCommitted : System.EventHandler&lt;Microsoft.Maui.Controls.Internals.EventArg&lt;Microsoft.Maui.Controls.VisualElement&gt;&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:Microsoft.Maui.Controls.IVisualElementController.BatchCommitted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.Internals.EventArg&lt;Microsoft.Maui.Controls.VisualElement&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="Batched">
      <MemberSignature Language="C#" Value="public bool Batched { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Batched" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Batched" />
      <MemberSignature Language="F#" Value="member this.Batched : bool" Usage="Microsoft.Maui.Controls.VisualElement.Batched" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IVisualElementController.Batched</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="Behaviors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.Behavior&gt; Behaviors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Maui.Controls.Behavior&gt; Behaviors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Behaviors" />
      <MemberSignature Language="F#" Value="member this.Behaviors : System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.Behavior&gt;" Usage="Microsoft.Maui.Controls.VisualElement.Behaviors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.Behavior&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the list of Behaviors associated to this element. This is a bindable property.</summary>
        <value>
        </value>
      </Docs>
    </Member>
    <Member MemberName="BehaviorsProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty BehaviorsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty BehaviorsProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.BehaviorsProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable BehaviorsProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.BehaviorsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the Behaviors bindable property.</summary>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.Shapes.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Controls.Shapes.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Bounds" />
      <MemberSignature Language="F#" Value="member this.Bounds : Microsoft.Maui.Controls.Shapes.Rectangle" Usage="Microsoft.Maui.Controls.VisualElement.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Shapes.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the bounds of the element.</summary>
        <value>The bounds of an element, in device-independent units.</value>
        <remarks>Bounds is assigned during the Layout cycle by a call to <see cref="M:Microsoft.Maui.Controls.VisualElement.Layout(Microsoft.Maui.Graphics.Rect)" />.</remarks>
        <altmember cref="P:Microsoft.Maui.Controls.VisualElement.WidthRequest" />
        <altmember cref="P:Microsoft.Maui.Controls.VisualElement.HeightRequest" />
      </Docs>
    </Member>
    <Member MemberName="ChangeVisualState">
      <MemberSignature Language="C#" Value="protected internal virtual void ChangeVisualState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ChangeVisualState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.ChangeVisualState" />
      <MemberSignature Language="F#" Value="abstract member ChangeVisualState : unit -&gt; unit&#xA;override this.ChangeVisualState : unit -&gt; unit" Usage="visualElement.ChangeVisualState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="ChildrenReordered">
      <MemberSignature Language="C#" Value="public event EventHandler ChildrenReordered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ChildrenReordered" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.VisualElement.ChildrenReordered" />
      <MemberSignature Language="F#" Value="member this.ChildrenReordered : EventHandler " Usage="member this.ChildrenReordered : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the Children of a VisualElement have been re-ordered.</summary>
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.Shapes.Geometry Clip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.Shapes.Geometry Clip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Clip" />
      <MemberSignature Language="F#" Value="member this.Clip : Microsoft.Maui.Controls.Shapes.Geometry with get, set" Usage="Microsoft.Maui.Controls.VisualElement.Clip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(Microsoft.Maui.Controls.Shapes.PathGeometryConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.Shapes.Geometry</ReturnType>
      </ReturnValue>
      <Docs>
      </Docs>
    </Member>
    <Member MemberName="ClipProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty ClipProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty ClipProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.ClipProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable ClipProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.ClipProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
      </Docs>
    </Member>
    <Member MemberName="DisableLayout">
      <MemberSignature Language="C#" Value="public bool DisableLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.DisableLayout" />
      <MemberSignature Language="F#" Value="member this.DisableLayout : bool with get, set" Usage="Microsoft.Maui.Controls.VisualElement.DisableLayout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IVisualElementController.DisableLayout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.FlowDirection" />
      <MemberSignature Language="F#" Value="member this.FlowDirection : Microsoft.Maui.FlowDirection with get, set" Usage="Microsoft.Maui.Controls.VisualElement.FlowDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the layout flow direction.</summary>
        <value>The layout flow direction.</value>
      </Docs>
    </Member>
    <Member MemberName="FlowDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty FlowDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty FlowDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.FlowDirectionProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable FlowDirectionProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.FlowDirectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.VisualElement.FlowDirection" /> property.</summary>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.Focus" />
      <MemberSignature Language="F#" Value="member this.Focus : unit -&gt; bool" Usage="visualElement.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Attemps to set focus to this element.</summary>
        <returns>
          <see langword="true" /> if the keyboard focus was set to this element; <see langword="false" /> if the call to this method did not force a focus change.</returns>
        <remarks>Element must be able to receive focus for this to work. Calling Focus on offscreen or unrealized elements has undefined behavior.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusChangeRequested">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.VisualElement.FocusRequestArgs&gt; FocusChangeRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.VisualElement/FocusRequestArgs&gt; FocusChangeRequested" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.VisualElement.FocusChangeRequested" />
      <MemberSignature Language="F#" Value="member this.FocusChangeRequested : EventHandler&lt;Microsoft.Maui.Controls.VisualElement.FocusRequestArgs&gt; " Usage="member this.FocusChangeRequested : System.EventHandler&lt;Microsoft.Maui.Controls.VisualElement.FocusRequestArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:Microsoft.Maui.Controls.IVisualElementController.FocusChangeRequested</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.VisualElement+FocusRequestArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.FocusEventArgs&gt; Focused;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.FocusEventArgs&gt; Focused" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.VisualElement.Focused" />
      <MemberSignature Language="F#" Value="member this.Focused : EventHandler&lt;Microsoft.Maui.Controls.FocusEventArgs&gt; " Usage="member this.Focused : System.EventHandler&lt;Microsoft.Maui.Controls.FocusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.FocusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the element receives focus.</summary>
        <remarks>Focused event is raised whenever the VisualElement receives focus. This event is not bubbled through the Microsoft.Maui.Controls stack and is received directly from the native control. This event is emitted by the IsFocusedProperty setter.</remarks>
        <altmember cref="P:Microsoft.Maui.Controls.VisualElement.IsFocused" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Height" />
      <MemberSignature Language="F#" Value="member this.Height : double" Usage="Microsoft.Maui.Controls.VisualElement.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current rendered height of this element. This is a read-only bindable property.</summary>
        <value>The renderered height of this element.</value>
        <remarks>The height of an element is set during the Layout phase.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeightProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty HeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty HeightProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.HeightProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable HeightProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.HeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the Height bindable property.</summary>
      </Docs>
    </Member>
    <Member MemberName="HeightRequest">
      <MemberSignature Language="C#" Value="public double HeightRequest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HeightRequest" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.HeightRequest" />
      <MemberSignature Language="F#" Value="member this.HeightRequest : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.HeightRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the desired height override of this element.</summary>
        <value>The height this element desires to be.</value>
        <remarks>HeightRequest does not immediately change the Bounds of a VisualElement, however setting the HeightRequest will change the result of calls to GetSizeRequest, which will in turn modify the final size the element receives during a layout cycle.</remarks>
        <remarks>To revert to the default "auto" behavior of this property, use ClearValue(HeightRequestProperty).</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeightRequestProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty HeightRequestProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty HeightRequestProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.HeightRequestProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable HeightRequestProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.HeightRequestProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the HeightRequest property.</summary>
      </Docs>
    </Member>
    <Member MemberName="InputTransparent">
      <MemberSignature Language="C#" Value="public bool InputTransparent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InputTransparent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.InputTransparent" />
      <MemberSignature Language="F#" Value="member this.InputTransparent : bool with get, set" Usage="Microsoft.Maui.Controls.VisualElement.InputTransparent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether this element should be involved in the user interaction cycle. This is a bindable property.</summary>
        <value>
          <see langword="false" /> if the element and its children should receive input; <see langword="true" /> if neither the element nor its children should receive input and should, instead, pass inputs to the elements that are visually behind the current visual element. Default is <see langword="false" />.</value>
        <remarks>Setting InputTransparent is not the same as setting IsEnabled to false. Setting InputTransparent only disables inputs and instead causes them to be passed to the <see cref="T:Microsoft.Maui.Controls.VisualElement" /> that is visually behind the element. Usually, this is the parent of the element. The value of the <see cref="P:Microsoft.Maui.Controls.VisualElement.InputTransparent" /> property is inherited by a visual element's child elements.</remarks>
        <altmember cref="P:Microsoft.Maui.Controls.VisualElement.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="InputTransparentProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty InputTransparentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty InputTransparentProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.InputTransparentProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable InputTransparentProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.InputTransparentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the InputTransparent bindable property.</summary>
      </Docs>
    </Member>
    <Member MemberName="InvalidateMeasure">
      <MemberSignature Language="C#" Value="protected virtual void InvalidateMeasure ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InvalidateMeasure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.InvalidateMeasure" />
      <MemberSignature Language="F#" Value="abstract member InvalidateMeasure : unit -&gt; unit&#xA;override this.InvalidateMeasure : unit -&gt; unit" Usage="visualElement.InvalidateMeasure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Method that is called to invalidate the layout of this <see cref="T:Microsoft.Maui.Controls.VisualElement" />. Raises the <see cref="E:Microsoft.Maui.Controls.VisualElement.MeasureInvalidated" /> event.</summary>
      </Docs>
    </Member>
    <Member MemberName="InvalidateMeasureNonVirtual">
      <MemberSignature Language="C#" Value="public void InvalidateMeasureNonVirtual (Microsoft.Maui.Controls.Internals.InvalidationTrigger trigger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateMeasureNonVirtual(valuetype Microsoft.Maui.Controls.Internals.InvalidationTrigger trigger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.InvalidateMeasureNonVirtual(Microsoft.Maui.Controls.Internals.InvalidationTrigger)" />
      <MemberSignature Language="F#" Value="member this.InvalidateMeasureNonVirtual : Microsoft.Maui.Controls.Internals.InvalidationTrigger -&gt; unit" Usage="visualElement.InvalidateMeasureNonVirtual trigger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.Maui.Controls.Internals.InvalidationTrigger" />
      </Parameters>
      <Docs>
        <param name="trigger">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.IsEnabled" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="Microsoft.Maui.Controls.VisualElement.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether this element is enabled in the user interface. This is a bindable property.</summary>
        <value>
          <see langword="true" /> if the element is enabled; otherwise, <see langword="false" />. The default value is <see langword="true" /></value>
        <remarks>
          <para>
            Elements that are not enabled do not participate in hit detection, and therefore will not receive focus or emit input events.
          </para>
          <para>
              The following example shows a handler on a button which will then set IsEnabled to false on another button.
              </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
  public partial class ButtonDisableExample {
    void BuildButtons ()
    {
      Button button1 = new Button {Text = "New button"};
      Button button2 = new Button {Text = "Disabled on click"};
      button1.Activated += (o, e) => button2.IsEnabled = false;
    }
  }
              ]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.IsEnabledProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the IsEnabled bindable property.</summary>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.IsFocused" />
      <MemberSignature Language="F#" Value="member this.IsFocused : bool" Usage="Microsoft.Maui.Controls.VisualElement.IsFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether this element is focused currently. This is a bindable property.</summary>
        <value>
          <see langword="true" /> if the element is focused; otherwise, <see langword="false" />.</value>
        <remarks>
          <para>
            Applications may have multiple focuses depending on the implementation of the underlying toolkit. Menus and modals in particular may leave multiple items with focus.
          </para>
          <para>
              The following example shows conditionally setting a background color based on the focus state.
              </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
  void UpdateBackground ()
  {
    if (myElement.IsFocused)
      myElement.BackgroundColor = Color.Red;
    else
      myElement.BackgroundColor = Color.Blue;
  }
              ]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.IsFocusedProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusedProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.IsFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the IsFocused bindable property.</summary>
      </Docs>
    </Member>
    <Member MemberName="IsFocusedPropertyKey">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindablePropertyKey IsFocusedPropertyKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindablePropertyKey IsFocusedPropertyKey" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.IsFocusedPropertyKey" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusedPropertyKey : Microsoft.Maui.Controls.BindablePropertyKey" Usage="Microsoft.Maui.Controls.VisualElement.IsFocusedPropertyKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindablePropertyKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="IsInNativeLayout">
      <MemberSignature Language="C#" Value="public bool IsInNativeLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInNativeLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.IsInNativeLayout" />
      <MemberSignature Language="F#" Value="member this.IsInNativeLayout : bool with get, set" Usage="Microsoft.Maui.Controls.VisualElement.IsInNativeLayout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IVisualElementController.IsInNativeLayout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="IsNativeStateConsistent">
      <MemberSignature Language="C#" Value="public bool IsNativeStateConsistent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNativeStateConsistent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.IsNativeStateConsistent" />
      <MemberSignature Language="F#" Value="member this.IsNativeStateConsistent : bool with get, set" Usage="Microsoft.Maui.Controls.VisualElement.IsNativeStateConsistent" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IVisualElementController.IsNativeStateConsistent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="IsPlatformEnabled">
      <MemberSignature Language="C#" Value="public bool IsPlatformEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPlatformEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.IsPlatformEnabled" />
      <MemberSignature Language="F#" Value="member this.IsPlatformEnabled : bool with get, set" Usage="Microsoft.Maui.Controls.VisualElement.IsPlatformEnabled" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IVisualElementController.IsPlatformEnabled</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="IsTabStop">
      <MemberSignature Language="C#" Value="public bool IsTabStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTabStop" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.IsTabStop" />
      <MemberSignature Language="F#" Value="member this.IsTabStop : bool with get, set" Usage="Microsoft.Maui.Controls.VisualElement.IsTabStop" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.ITabStopElement.IsTabStop</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether this element is included in tab navigation. This is a bindable property.</summary>
        <value>
          <see langword="true" /> if the element is included in tab navigation; otherwise, <see langword="false" />. Default value is <see langword="true" />.</value>
          <remarks>Controlling the tab sequence with a combination of IsTabStop and <see cref="T:Microsoft.Maui.Controls.VisualElement.TabIndex" /> rather than using the default tab sequence is sometimes necessary in order to tune the keyboard accessibility of your UI. </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTabStopProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty IsTabStopProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty IsTabStopProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.IsTabStopProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTabStopProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.IsTabStopProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.VisualElement.IsTabStop" /> field.</summary>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.IsVisible" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool with get, set" Usage="Microsoft.Maui.Controls.VisualElement.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(Microsoft.Maui.Controls.VisualElement/VisibilityConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that determines whether this elements should be part of the visual tree or not. This is a bindable property.</summary>
        <value>
          <see langword="true" /> if the element should be rendered; otherwise, <see langword="false" />. Default value is <see langword="true" />.</value>
        <remarks>
          <para>Setting IsVisible to false will remove the element from the visual tree. The element will no longer take up space in layouts or be eligle to receive any kind of input event.</para>
          <para>
              The following example shows a stack where the middle element is toggled when a button is activated.
              </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
  partial class LabelToggle {
    Label label;
    
    void Build ()
    {
      var firstView = new Button {Text = "Tap Me"};
      label = new Label {Text = "I can be toggled"};
      var thirdView = new Image {Source = "image.png"};
    
      firstView.Activated += OnButtonActivated;
    
      Content = new StackLayout {
        Children {
          firstView,
          label,
          thirdView
        }
      };
    }
    
    void OnButtonActivated (object sender, EventArgs args)
    {
      label.IsVisible = !label.IsVisible;
    }
  }
              ]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty IsVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty IsVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.IsVisibleProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable IsVisibleProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.IsVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the IsVisible bindable property.</summary>
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public void Layout (Microsoft.Maui.Graphics.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Layout(valuetype Microsoft.Maui.Graphics.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.Layout(Microsoft.Maui.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="member this.Layout : Microsoft.Maui.Graphics.Rect -&gt; unit" Usage="visualElement.Layout bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="Microsoft.Maui.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">The new bounds of the element.</param>
        <summary>Updates the bounds of the element during the layout cycle.</summary>
        <remarks>Calling Layout will trigger a layout cycle for the sub-tree of this element.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Measure">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.SizeRequest Measure (double widthConstraint, double heightConstraint, Microsoft.Maui.Controls.MeasureFlags flags = Microsoft.Maui.Controls.MeasureFlags.None);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Maui.SizeRequest Measure(float64 widthConstraint, float64 heightConstraint, valuetype Microsoft.Maui.Controls.MeasureFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.Measure(System.Double,System.Double,Microsoft.Maui.Controls.MeasureFlags)" />
      <MemberSignature Language="F#" Value="member this.Measure : double * double * Microsoft.Maui.Controls.MeasureFlags -&gt; Microsoft.Maui.SizeRequest" Usage="visualElement.Measure (widthConstraint, heightConstraint, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.SizeRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widthConstraint" Type="System.Double" />
        <Parameter Name="heightConstraint" Type="System.Double" />
        <Parameter Name="flags" Type="Microsoft.Maui.Controls.MeasureFlags" />
      </Parameters>
      <Docs>
        <param name="widthConstraint">The suggested maximum width constraint for the visual element to render.</param>
        <param name="heightConstraint">The suggested maximum height constraint for the visual element to render.</param>
        <param name="flags">A value that controls whether margins are included in the returned size.</param>
        <summary>Returns the minimum size that a visual element needs in order to be displayed on the device.</summary>
        <returns>The minimum size that a visual element needs in order to be displayed on the device.</returns>
        <remarks>
          <para>If the minimum sized that the visual element needs in order to be displayed on the device is larger than can be accommodated by <paramref name="widthConstraint" /> and <paramref name="heightConstraint" />, the return value may represent a rectangle that is larger in either or both of those parameters.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler MeasureInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MeasureInvalidated" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.VisualElement.MeasureInvalidated" />
      <MemberSignature Language="F#" Value="member this.MeasureInvalidated : EventHandler " Usage="member this.MeasureInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event that is raised when the layout of a visual element is invalidated.</summary>
      </Docs>
    </Member>
    <Member MemberName="MinimumHeightRequest">
      <MemberSignature Language="C#" Value="public double MinimumHeightRequest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinimumHeightRequest" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.MinimumHeightRequest" />
      <MemberSignature Language="F#" Value="member this.MinimumHeightRequest : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.MinimumHeightRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value which overrides the minimum height the element will request during layout.</summary>
        <value>The minimum height the element requires. Default value is -1.</value>
        <remarks>
          <para>
            MinimumHeightRequest is used to override the results of a call to GetSizeRequest by setting the minimum height property. This causes overflow handling to shrink this element to its minimum height before elements who do not have a minimum size set.
          </para>
          <para>
              The following example sets the MinimumHeightRequest to enable an image to shrink below its normal size.
              </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
  void Build (string veryLongString)
  {
    var label = new Label {Text = veryLongString};
    var image = new Image {Source = "image500x500.png"};
    
    image.MinimumHeightRequest = 20;
    Content = new StackLayout {
      Children {
        label,
        image
      }
    };
  }
              ]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumHeightRequestProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty MinimumHeightRequestProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty MinimumHeightRequestProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.MinimumHeightRequestProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable MinimumHeightRequestProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.MinimumHeightRequestProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the MinimumHeightRequest property.</summary>
      </Docs>
    </Member>
    <Member MemberName="MinimumWidthRequest">
      <MemberSignature Language="C#" Value="public double MinimumWidthRequest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinimumWidthRequest" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.MinimumWidthRequest" />
      <MemberSignature Language="F#" Value="member this.MinimumWidthRequest : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.MinimumWidthRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value which overrides the minimum width the element will request during layout.</summary>
        <value>The minimum width the element requires. Default value is -1.</value>
        <remarks>
          <para>
            MinimumWidthRequest is used to override the results of a call to GetSizeRequest by setting the minimum width property. This causes overflow handling to shrink this element to its minimum width before elements who do not have a minimum size set.
          </para>
          <para>
              The following example sets the MinimumWidthRequest to enable an image to shrink below its normal size.
              </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
  void Build (string veryLongString)
  {
    var label = new Label {Text = veryLongString};
    var image = new Image {Source = "image500x500.png"};
    
    image.MinimumWidthRequest = 20;
    Content = new StackLayout {
      Orientation = StackOrientation.Horizontal,
      Children {
        label,
        image
      }
    };
  }
              ]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumWidthRequestProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty MinimumWidthRequestProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty MinimumWidthRequestProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.MinimumWidthRequestProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable MinimumWidthRequestProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.MinimumWidthRequestProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the MinimumWidthRequest property.</summary>
      </Docs>
    </Member>
    <Member MemberName="NativeSizeChanged">
      <MemberSignature Language="C#" Value="public void NativeSizeChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NativeSizeChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.NativeSizeChanged" />
      <MemberSignature Language="F#" Value="abstract member NativeSizeChanged : unit -&gt; unit&#xA;override this.NativeSizeChanged : unit -&gt; unit" Usage="visualElement.NativeSizeChanged " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IVisualElementController.NativeSizeChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="NavigationProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty NavigationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty NavigationProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.NavigationProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable NavigationProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.NavigationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingContextChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingContextChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.OnBindingContextChanged" />
      <MemberSignature Language="F#" Value="override this.OnBindingContextChanged : unit -&gt; unit" Usage="visualElement.OnBindingContextChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
      </Docs>
    </Member>
    <Member MemberName="OnChildAdded">
      <MemberSignature Language="C#" Value="protected override void OnChildAdded (Microsoft.Maui.Controls.Element child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnChildAdded(class Microsoft.Maui.Controls.Element child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.OnChildAdded(Microsoft.Maui.Controls.Element)" />
      <MemberSignature Language="F#" Value="override this.OnChildAdded : Microsoft.Maui.Controls.Element -&gt; unit" Usage="visualElement.OnChildAdded child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Maui.Controls.Element" />
      </Parameters>
      <Docs>
        <param name="child">The child that was added.</param>
        <summary>Application developers can override this method to respond when a child is added.</summary>
        <remarks>Application developers who override this method must call base.OnChildAdded before performing any other actions in their override.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChildRemoved">
      <MemberSignature Language="C#" Value="protected override void OnChildRemoved (Microsoft.Maui.Controls.Element child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnChildRemoved(class Microsoft.Maui.Controls.Element child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.OnChildRemoved(Microsoft.Maui.Controls.Element)" />
      <MemberSignature Language="F#" Value="override this.OnChildRemoved : Microsoft.Maui.Controls.Element -&gt; unit" Usage="visualElement.OnChildRemoved child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("OnChildRemoved(Element) is obsolete as of version 4.8.0. Please use OnChildRemoved(Element, int) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Maui.Controls.Element" />
      </Parameters>
      <Docs>
        <param name="child">The child that was removed.</param>
        <summary>Application developers can override this method to respond when a child is removed.</summary>
        <remarks>Application developers who override this method must call base.OnChildRemoved before performing any other actions in their override.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChildRemoved">
      <MemberSignature Language="C#" Value="protected override void OnChildRemoved (Microsoft.Maui.Controls.Element child, int oldLogicalIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnChildRemoved(class Microsoft.Maui.Controls.Element child, int32 oldLogicalIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.OnChildRemoved(Microsoft.Maui.Controls.Element,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.OnChildRemoved : Microsoft.Maui.Controls.Element * int -&gt; unit" Usage="visualElement.OnChildRemoved (child, oldLogicalIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Maui.Controls.Element" />
        <Parameter Name="oldLogicalIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="child">To be added.</param>
        <param name="oldLogicalIndex">To be added.</param>
      </Docs>
    </Member>
    <Member MemberName="OnChildrenReordered">
      <MemberSignature Language="C#" Value="protected void OnChildrenReordered ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnChildrenReordered() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.OnChildrenReordered" />
      <MemberSignature Language="F#" Value="member this.OnChildrenReordered : unit -&gt; unit" Usage="visualElement.OnChildrenReordered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invoked whenever the <see cref="E:Microsoft.Maui.Controls.VisualElement.ChildrenReordered" /> event is about to be emitted. Implement this method to add class handling for this event.</summary>
        <remarks>This method has no default implementation. You should still call the base implementation in case an intermediate class has implemented this method.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMeasure">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Maui.SizeRequest OnMeasure (double widthConstraint, double heightConstraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype Microsoft.Maui.SizeRequest OnMeasure(float64 widthConstraint, float64 heightConstraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.OnMeasure(System.Double,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member OnMeasure : double * double -&gt; Microsoft.Maui.SizeRequest&#xA;override this.OnMeasure : double * double -&gt; Microsoft.Maui.SizeRequest" Usage="visualElement.OnMeasure (widthConstraint, heightConstraint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.SizeRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widthConstraint" Type="System.Double" />
        <Parameter Name="heightConstraint" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="widthConstraint">The width constraint to request.</param>
        <param name="heightConstraint">The height constraint to request.</param>
        <summary>Method that is called when a layout measurement happens.</summary>
      </Docs>
    </Member>
    <Member MemberName="OnSizeAllocated">
      <MemberSignature Language="C#" Value="protected virtual void OnSizeAllocated (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSizeAllocated(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.OnSizeAllocated(System.Double,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member OnSizeAllocated : double * double -&gt; unit&#xA;override this.OnSizeAllocated : double * double -&gt; unit" Usage="visualElement.OnSizeAllocated (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">The new width of the element.</param>
        <param name="height">The new height of the element.</param>
        <summary>This method is called when the size of the element is set during a layout cycle. This method is called directly before the <see cref="E:Microsoft.Maui.Controls.VisualElement.SizeChanged" /> event is emitted. Implement this method to add class handling for this event.</summary>
        <remarks>This method has no default implementation. You should still call the base implementation in case an intermediate class has implemented this method. Most layouts will want to implement this method in order to layout their children during a layout cycle.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSizeRequest">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Maui.SizeRequest OnSizeRequest (double widthConstraint, double heightConstraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype Microsoft.Maui.SizeRequest OnSizeRequest(float64 widthConstraint, float64 heightConstraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.OnSizeRequest(System.Double,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member OnSizeRequest : double * double -&gt; Microsoft.Maui.SizeRequest&#xA;override this.OnSizeRequest : double * double -&gt; Microsoft.Maui.SizeRequest" Usage="visualElement.OnSizeRequest (widthConstraint, heightConstraint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("OnSizeRequest is obsolete as of version 2.2.0. Please use OnMeasure instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.SizeRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widthConstraint" Type="System.Double" />
        <Parameter Name="heightConstraint" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="widthConstraint">The available width for the element to use.</param>
        <param name="heightConstraint">The available height for the element to use.</param>
        <summary>This method is called during the measure pass of a layout cycle to get the desired size of an element.</summary>
        <returns>A <see cref="T:Microsoft.Maui.SizeRequest" /> which contains the desired size of the element.</returns>
        <remarks>The results of this method will be (-1, -1) if the element has not yet been realized with a platform specific backing control. Overriding this method does not require a call to the base class so long as a valid SizeRequest is returned.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTabIndexPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTabIndexPropertyChanged (int oldValue, int newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTabIndexPropertyChanged(int32 oldValue, int32 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.OnTabIndexPropertyChanged(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnTabIndexPropertyChanged : int * int -&gt; unit&#xA;override this.OnTabIndexPropertyChanged : int * int -&gt; unit" Usage="visualElement.OnTabIndexPropertyChanged (oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Int32" />
        <Parameter Name="newValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
      </Docs>
    </Member>
    <Member MemberName="OnTabStopPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTabStopPropertyChanged (bool oldValue, bool newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTabStopPropertyChanged(bool oldValue, bool newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.OnTabStopPropertyChanged(System.Boolean,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnTabStopPropertyChanged : bool * bool -&gt; unit&#xA;override this.OnTabStopPropertyChanged : bool * bool -&gt; unit" Usage="visualElement.OnTabStopPropertyChanged (oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Boolean" />
        <Parameter Name="newValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public double Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Opacity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Opacity" />
      <MemberSignature Language="F#" Value="member this.Opacity : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the opacity value applied to the element when it is rendered. This is a bindable property.</summary>
        <value>The opacity value. Default opacity is 1.0. Values will be clamped between 0 and 1 on set.</value>
        <remarks>
          <para>
            The opacity value has no effect unless IsVisible is <see langword="true" />. Opacity is inherited down the element hierarchy. If a parent has 0.5 opacity, and a child has 0.5 opacity, the child will render with an effective 0.25 opacity. Setting opacity to 0 has undefined behavior with input elements.
          </para>
          <para>
              The following example sets the opacity of a layout to 0.5 and the opacity of one of its children to 0.5, making the child 25% opaque.
              </para>
          <example>
            <code lang="csharp lang-csharp"><![CDATA[
  StackLayout stack = new StackLayout ();
  Button button1 = new Button {Text="A Button"};
  Button button2 = new Button {Text="Another Button"};
    
  stack.Children.Add (button1);
  stack.Children.Add (button2);
    
  // The stack and everything in it will become 50% opaque
  stack.Opacity = 0.5;
    
  // button1 will become 25% opaque while the stack and button2 remane 50% opaque
  button1.Opacity = 0.5;
              ]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty OpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty OpacityProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.OpacityProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable OpacityProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.OpacityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the Opacity bindable property.</summary>
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.ResourceDictionary Resources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.ResourceDictionary Resources" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Resources" />
      <MemberSignature Language="F#" Value="member this.Resources : Microsoft.Maui.Controls.ResourceDictionary with get, set" Usage="Microsoft.Maui.Controls.VisualElement.Resources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.ResourceDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the local resource dictionary.</summary>
        <value>The current resource dictionary, where resources are stored by key.</value>
        <remarks>
          <para>In XAML, resource dictionaries are filled with key/value pairs that are specified in XML and consequently created at run time. The keys in the resource dictionary are specified with the <c>x:Key</c> attribute of the XML tag for the type to create. An object of that type is created, and is initialized with the property and field values that are specified either by additional attributes or by nested tags, both of which, when present are simply string representations of the property or field names. The object is then inserted into the <see cref="T:Microsoft.Maui.Controls.ResourceDictionary" /> for the enclosing type at runtime.</para>
          <example>
            <para>For example, the XAML below creates a resource dictionary that contains <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> object constants that can be used for any <see cref="T:Microsoft.Maui.Controls.Layout" /> objects that are added to the surrounding <see cref="T:Microsoft.Maui.Controls.ContentPage" />:</para>
            <code><![CDATA[
<ContentPage.Resources>
    <ResourceDictionary>
        <LayoutOptions x:Key="horzOptions"
                     Alignment="Center" />
    
        <LayoutOptions x:Key="vertOptions"
                     Alignment="Center"
                     Expands="True" />
    </ResourceDictionary>
</ContentPage.Resources>
]]></code>
            <para>Note that the above snippet is only valid when nested within a <c>&lt;ContentPage&gt;...&lt;/ContentPage&gt;</c> tag pair. Within that pair, the app developer can use both of the <c>horzOptions</c> and <c>vertOptions</c> keys to specify values for properties of type <see cref="T:Microsoft.Maui.Controls.LayoutOptions" /> by using the <c>"{...}"</c> static resource syntax. The short example below illustrates this syntax:</para>
            <code><![CDATA[
<Button Text="Do this!"
        HorizontalOptions="{StaticResource horzOptions}"
        VerticalOptions="{StaticResource vertOptions}"
        BorderWidth="3"
        Rotation="-15"
        TextColor="Red"
        Font="Large" />]]></code>
            <para>Resource dictionaries and their associated XML provide the application developer with a convenient method to reuse code inside the XAML compile-time and run-time engines.</para>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public double Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Rotation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Rotation" />
      <MemberSignature Language="F#" Value="member this.Rotation : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the rotation (in degrees) about the Z-axis (affine rotation) when the element is rendered.</summary>
        <value>The rotation about the Z-axis in degrees.</value>
        <remarks>Rotation is applied relative to <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorX" /> and <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorY" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty RotationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty RotationProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.RotationProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable RotationProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.RotationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the Rotation bindable property.</summary>
      </Docs>
    </Member>
    <Member MemberName="RotationX">
      <MemberSignature Language="C#" Value="public double RotationX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RotationX" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.RotationX" />
      <MemberSignature Language="F#" Value="member this.RotationX : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.RotationX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the rotation (in degrees) about the X-axis (perspective rotation) when the element is rendered.</summary>
        <value>The rotation about the X-axis in degrees.</value>
        <remarks>RotationX is applied relative to <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorX" /> and <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorY" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationXProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty RotationXProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty RotationXProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.RotationXProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable RotationXProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.RotationXProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the RotationX bindable property.</summary>
      </Docs>
    </Member>
    <Member MemberName="RotationY">
      <MemberSignature Language="C#" Value="public double RotationY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RotationY" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.RotationY" />
      <MemberSignature Language="F#" Value="member this.RotationY : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.RotationY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the rotation (in degrees) about the Y-axis (perspective rotation) when the element is rendered.</summary>
        <value>The rotation about the Y-axis in degrees.</value>
        <remarks>RotationY is applied relative to <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorX" /> and <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorY" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationYProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty RotationYProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty RotationYProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.RotationYProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable RotationYProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.RotationYProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the RotationY bindable property.</summary>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public double Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Scale" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Scale" />
      <MemberSignature Language="F#" Value="member this.Scale : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.Scale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the scale factor applied to the element.</summary>
        <value>The scale factor of the element. Default value is 1.0.</value>
        <remarks>Scale is applied relative to <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorX" /> and <see cref="P:Microsoft.Maui.Controls.VisualElement.AnchorY" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty ScaleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty ScaleProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.ScaleProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable ScaleProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.ScaleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the Scale bindable property.</summary>
      </Docs>
    </Member>
    <Member MemberName="ScaleX">
      <MemberSignature Language="C#" Value="public double ScaleX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ScaleX" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.ScaleX" />
      <MemberSignature Language="F#" Value="member this.ScaleX : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.ScaleX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a scale value to apply to the X direction.</summary>
        <value>The scale value to apply to the X direction.</value>
      </Docs>
    </Member>
    <Member MemberName="ScaleXProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty ScaleXProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty ScaleXProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.ScaleXProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable ScaleXProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.ScaleXProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.VisualElement.ScaleX" /> property.</summary>
      </Docs>
    </Member>
    <Member MemberName="ScaleY">
      <MemberSignature Language="C#" Value="public double ScaleY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ScaleY" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.ScaleY" />
      <MemberSignature Language="F#" Value="member this.ScaleY : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.ScaleY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a scale value to apply to the Y direction.</summary>
        <value>The scale value to apply to the Y direction.</value>
      </Docs>
    </Member>
    <Member MemberName="ScaleYProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty ScaleYProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty ScaleYProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.ScaleYProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable ScaleYProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.ScaleYProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the <see cref="P:Microsoft.Maui.Controls.VisualElement.ScaleY" /> property.</summary>
      </Docs>
    </Member>
    <Member MemberName="SizeAllocated">
      <MemberSignature Language="C#" Value="protected void SizeAllocated (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SizeAllocated(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.SizeAllocated(System.Double,System.Double)" />
      <MemberSignature Language="F#" Value="member this.SizeAllocated : double * double -&gt; unit" Usage="visualElement.SizeAllocated (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">The newly allocated width.</param>
        <param name="height">The newly allocated height.</param>
        <summary>SizeAllocated is called during a layout cycle to signal the start of a sub-tree layout.</summary>
        <remarks>Calling SizeAllocated will start a new layout cycle on the children of the element. Excessive calls to SizeAllocated may cause performance problems.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SizeChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.VisualElement.SizeChanged" />
      <MemberSignature Language="F#" Value="member this.SizeChanged : EventHandler " Usage="member this.SizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when either the Width or the Height properties change value on this element.</summary>
        <remarks>Classes should implement <see cref="M:Microsoft.Maui.Controls.VisualElement.OnSizeAllocated(System.Double,System.Double)" /> if they wish to respond to size change events directly.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty StyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty StyleProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.StyleProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable StyleProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.StyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public int TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TabIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.TabIndex" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int with get, set" Usage="Microsoft.Maui.Controls.VisualElement.TabIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.ITabStopElement.TabIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
      </Docs>
    </Member>
    <Member MemberName="TabIndexDefaultValueCreator">
      <MemberSignature Language="C#" Value="protected virtual int TabIndexDefaultValueCreator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 TabIndexDefaultValueCreator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.TabIndexDefaultValueCreator" />
      <MemberSignature Language="F#" Value="abstract member TabIndexDefaultValueCreator : unit -&gt; int&#xA;override this.TabIndexDefaultValueCreator : unit -&gt; int" Usage="visualElement.TabIndexDefaultValueCreator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
      </Docs>
    </Member>
    <Member MemberName="TabIndexProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty TabIndexProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty TabIndexProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.TabIndexProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable TabIndexProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.TabIndexProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.VisualElement.TabIndex" /> field.</summary>
      </Docs>
    </Member>
    <Member MemberName="TabStopDefaultValueCreator">
      <MemberSignature Language="C#" Value="protected virtual bool TabStopDefaultValueCreator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TabStopDefaultValueCreator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.TabStopDefaultValueCreator" />
      <MemberSignature Language="F#" Value="abstract member TabStopDefaultValueCreator : unit -&gt; bool&#xA;override this.TabStopDefaultValueCreator : unit -&gt; bool" Usage="visualElement.TabStopDefaultValueCreator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
      </Docs>
    </Member>
    <Member MemberName="TranslationX">
      <MemberSignature Language="C#" Value="public double TranslationX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TranslationX" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.TranslationX" />
      <MemberSignature Language="F#" Value="member this.TranslationX : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.TranslationX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the X translation delta of the element.</summary>
        <value>The amount to translate the element.</value>
        <remarks>Translation is applied post layout. It is particularly good for applying animations. Translating an element outside the bounds of its parent container may prevent inputs from working.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslationXProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty TranslationXProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty TranslationXProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.TranslationXProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable TranslationXProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.TranslationXProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the TranslationX bindable property.</summary>
      </Docs>
    </Member>
    <Member MemberName="TranslationY">
      <MemberSignature Language="C#" Value="public double TranslationY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TranslationY" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.TranslationY" />
      <MemberSignature Language="F#" Value="member this.TranslationY : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.TranslationY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the Y translation delta of the element.</summary>
        <value>The amount to translate the element.</value>
        <remarks>Translation is applied post layout. It is particularly good for applying animations. Translating an element outside the bounds of its parent container may prevent inputs from working.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslationYProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty TranslationYProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty TranslationYProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.TranslationYProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable TranslationYProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.TranslationYProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the TranslationY bindable property.</summary>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.TriggerBase&gt; Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Maui.Controls.TriggerBase&gt; Triggers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Triggers" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.TriggerBase&gt;" Usage="Microsoft.Maui.Controls.VisualElement.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Maui.Controls.TriggerBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the list of Trigger associated to this element. This is a bindable property.</summary>
        <value>
        </value>
      </Docs>
    </Member>
    <Member MemberName="TriggersProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty TriggersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty TriggersProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.TriggersProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable TriggersProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.TriggersProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the Triggers bindable property.</summary>
      </Docs>
    </Member>
    <Member MemberName="Unfocus">
      <MemberSignature Language="C#" Value="public void Unfocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unfocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.Unfocus" />
      <MemberSignature Language="F#" Value="member this.Unfocus : unit -&gt; unit" Usage="visualElement.Unfocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unsets focus to this element.</summary>
        <remarks>Element must already have focus for this to have any effect.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unfocused">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Maui.Controls.FocusEventArgs&gt; Unfocused;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Maui.Controls.FocusEventArgs&gt; Unfocused" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Maui.Controls.VisualElement.Unfocused" />
      <MemberSignature Language="F#" Value="member this.Unfocused : EventHandler&lt;Microsoft.Maui.Controls.FocusEventArgs&gt; " Usage="member this.Unfocused : System.EventHandler&lt;Microsoft.Maui.Controls.FocusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Maui.Controls.FocusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the element loses focus.</summary>
        <remarks>Unfocused event is raised whenever the VisualElement loses focus. This event is not bubbled through the Microsoft.Maui.Controls stack and is received directly from the native control. This event is emitted by the IsFocusedProperty setter.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visual">
      <MemberSignature Language="C#" Value="public Microsoft.Maui.Controls.IVisual Visual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Maui.Controls.IVisual Visual" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Visual" />
      <MemberSignature Language="F#" Value="member this.Visual : Microsoft.Maui.Controls.IVisual with get, set" Usage="Microsoft.Maui.Controls.VisualElement.Visual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.IVisual</ReturnType>
      </ReturnValue>
      <Docs>
      </Docs>
    </Member>
    <Member MemberName="VisualProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty VisualProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty VisualProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.VisualProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable VisualProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.VisualProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The backing store for the <see cref="P:Microsoft.Maui.Controls.VisualElement.Visual" /> field.</summary>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Width" />
      <MemberSignature Language="F#" Value="member this.Width : double" Usage="Microsoft.Maui.Controls.VisualElement.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current rendered width of this element. This is a read-only bindable property.</summary>
        <value>The renderered width of this element.</value>
        <remarks>The width of an element is set during the Layout phase.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty WidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty WidthProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.WidthProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable WidthProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.WidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the Width bindable property.</summary>
      </Docs>
    </Member>
    <Member MemberName="WidthRequest">
      <MemberSignature Language="C#" Value="public double WidthRequest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 WidthRequest" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.WidthRequest" />
      <MemberSignature Language="F#" Value="member this.WidthRequest : double with get, set" Usage="Microsoft.Maui.Controls.VisualElement.WidthRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the desired width override of this element.</summary>
        <value>The width this element desires to be.</value>
        <remarks>WidthRequest does not immediately change the Bounds of a VisualElement, however setting the WidthRequest will change the result of calls to GetSizeRequest, which will in turn modify the final size the element receives during a layout cycle.</remarks>
        <remarks>To revert to the default "auto" behavior of this property, use ClearValue(WidthRequestProperty).</remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthRequestProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty WidthRequestProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty WidthRequestProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.WidthRequestProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable WidthRequestProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.WidthRequestProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Backing store for the WidthRequest property.</summary>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.X" />
      <MemberSignature Language="F#" Value="member this.X : double" Usage="Microsoft.Maui.Controls.VisualElement.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current X position of this element. This is a read-only bindable property.</summary>
        <value>The X position of this element relative to its parents bounds.</value>
        <remarks>The x value of an element is set during the Layout phase.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IVisualElementController.EffectiveFlowDirection">
      <MemberSignature Language="C#" Value="Microsoft.Maui.Controls.EffectiveFlowDirection Microsoft.Maui.Controls.IVisualElementController.EffectiveFlowDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Maui.Controls.EffectiveFlowDirection Microsoft.Maui.Controls.IVisualElementController.EffectiveFlowDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Xamarin#Forms#IVisualElementController#EffectiveFlowDirection" />
      <MemberSignature Language="F#" Value="member this.Microsoft.Maui.Controls.IVisualElementController.EffectiveFlowDirection : Microsoft.Maui.Controls.EffectiveFlowDirection" Usage="Microsoft.Maui.Controls.IVisualElementController.EffectiveFlowDirection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Maui.Controls.IVisualElementController.EffectiveFlowDirection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.EffectiveFlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the effective visual flow direction for the element on the platform, taking into account the locale and logical flow settings.</summary>
        <value>The effective flow direction for the visual element.</value>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Maui.Controls.IVisualElementController.InvalidateMeasure">
      <MemberSignature Language="C#" Value="void IVisualElementController.InvalidateMeasure (Microsoft.Maui.Controls.Internals.InvalidationTrigger trigger);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.Maui.Controls.IVisualElementController.InvalidateMeasure(valuetype Microsoft.Maui.Controls.Internals.InvalidationTrigger trigger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.VisualElement.Xamarin#Forms#IVisualElementController#InvalidateMeasure(Microsoft.Maui.Controls.Internals.InvalidationTrigger)" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Maui.Controls.IVisualElementController.InvalidateMeasure : Microsoft.Maui.Controls.Internals.InvalidationTrigger -&gt; unit&#xA;override this.Microsoft.Maui.Controls.IVisualElementController.InvalidateMeasure : Microsoft.Maui.Controls.Internals.InvalidationTrigger -&gt; unit" Usage="visualElement.Microsoft.Maui.Controls.IVisualElementController.InvalidateMeasure trigger" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Maui.Controls.IVisualElementController.InvalidateMeasure(Microsoft.Maui.Controls.Internals.InvalidationTrigger)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="Microsoft.Maui.Controls.Internals.InvalidationTrigger" />
      </Parameters>
      <Docs>
        <param name="trigger">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>This method is for internal use.</summary>
      </Docs>
    </Member>
    <Member MemberName="XProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty XProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty XProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.XProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable XProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.XProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the X bindable property.</summary>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Maui.Controls.VisualElement.Y" />
      <MemberSignature Language="F#" Value="member this.Y : double" Usage="Microsoft.Maui.Controls.VisualElement.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current Y position of this element. This is a read-only bindable property.</summary>
        <value>The Y position of this element relative to its parents bounds.</value>
        <remarks>The y value of an element is set during the Layout phase.</remarks>
      </Docs>
    </Member>
    <Member MemberName="YProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty YProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty YProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Maui.Controls.VisualElement.YProperty" />
      <MemberSignature Language="F#" Value=" staticval mutable YProperty : Microsoft.Maui.Controls.BindableProperty" Usage="Microsoft.Maui.Controls.VisualElement.YProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.0.0</AssemblyVersion>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifies the Y bindable property.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
