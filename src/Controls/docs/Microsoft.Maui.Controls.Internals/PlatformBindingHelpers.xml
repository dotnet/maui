<Type Name="PlatformBindingHelpers" FullName="Microsoft.Maui.Controls.Internals.PlatformBindingHelpers">
  <TypeSignature Language="C#" Value="public static class PlatformBindingHelpers" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PlatformBindingHelpers extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.Internals.PlatformBindingHelpers" />
  <TypeSignature Language="F#" Value="type PlatformBindingHelpers = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
  </Docs>
  <Members>
    <Member MemberName="SetBinding&lt;TNativeView&gt;">
      <MemberSignature Language="C#" Value="public static void SetBinding&lt;TNativeView&gt; (TNativeView target, Microsoft.Maui.Controls.BindableProperty targetProperty, Microsoft.Maui.Controls.BindingBase binding) where TNativeView : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBinding&lt;class TNativeView&gt;(!!TNativeView target, class Microsoft.Maui.Controls.BindableProperty targetProperty, class Microsoft.Maui.Controls.BindingBase binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Internals.PlatformBindingHelpers.SetBinding``1(``0,Microsoft.Maui.Controls.BindableProperty,Microsoft.Maui.Controls.BindingBase)" />
      <MemberSignature Language="F#" Value="static member SetBinding : 'NativeView * Microsoft.Maui.Controls.BindableProperty * Microsoft.Maui.Controls.BindingBase -&gt; unit (requires 'NativeView : null)" Usage="Microsoft.Maui.Controls.Internals.PlatformBindingHelpers.SetBinding (target, targetProperty, binding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNativeView">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="TNativeView" />
        <Parameter Name="targetProperty" Type="Microsoft.Maui.Controls.BindableProperty" />
        <Parameter Name="binding" Type="Microsoft.Maui.Controls.BindingBase" />
      </Parameters>
      <Docs>
        <typeparam name="TNativeView">For internal use by the Microsoft.Maui.Controls platform.</typeparam>
        <param name="target">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="targetProperty">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="binding">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="SetBinding&lt;TNativeView&gt;">
      <MemberSignature Language="C#" Value="public static void SetBinding&lt;TNativeView&gt; (TNativeView target, string targetProperty, Microsoft.Maui.Controls.BindingBase bindingBase, System.ComponentModel.INotifyPropertyChanged propertyChanged) where TNativeView : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBinding&lt;class TNativeView&gt;(!!TNativeView target, string targetProperty, class Microsoft.Maui.Controls.BindingBase bindingBase, class System.ComponentModel.INotifyPropertyChanged propertyChanged) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Internals.PlatformBindingHelpers.SetBinding``1(``0,System.String,Microsoft.Maui.Controls.BindingBase,System.ComponentModel.INotifyPropertyChanged)" />
      <MemberSignature Language="F#" Value="static member SetBinding : 'NativeView * string * Microsoft.Maui.Controls.BindingBase * System.ComponentModel.INotifyPropertyChanged -&gt; unit (requires 'NativeView : null)" Usage="Microsoft.Maui.Controls.Internals.PlatformBindingHelpers.SetBinding (target, targetProperty, bindingBase, propertyChanged)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNativeView">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="TNativeView" />
        <Parameter Name="targetProperty" Type="System.String" />
        <Parameter Name="bindingBase" Type="Microsoft.Maui.Controls.BindingBase" />
        <Parameter Name="propertyChanged" Type="System.ComponentModel.INotifyPropertyChanged" />
      </Parameters>
      <Docs>
        <typeparam name="TNativeView">For internal use by the Microsoft.Maui.Controls platform.</typeparam>
        <param name="target">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="targetProperty">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="bindingBase">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="propertyChanged">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="SetBinding&lt;TNativeView&gt;">
      <MemberSignature Language="C#" Value="public static void SetBinding&lt;TNativeView&gt; (TNativeView target, string targetProperty, Microsoft.Maui.Controls.BindingBase bindingBase, string updateSourceEventName = default) where TNativeView : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBinding&lt;class TNativeView&gt;(!!TNativeView target, string targetProperty, class Microsoft.Maui.Controls.BindingBase bindingBase, string updateSourceEventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Internals.PlatformBindingHelpers.SetBinding``1(``0,System.String,Microsoft.Maui.Controls.BindingBase,System.String)" />
      <MemberSignature Language="F#" Value="static member SetBinding : 'NativeView * string * Microsoft.Maui.Controls.BindingBase * string -&gt; unit (requires 'NativeView : null)" Usage="Microsoft.Maui.Controls.Internals.PlatformBindingHelpers.SetBinding (target, targetProperty, bindingBase, updateSourceEventName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNativeView">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="TNativeView" />
        <Parameter Name="targetProperty" Type="System.String" />
        <Parameter Name="bindingBase" Type="Microsoft.Maui.Controls.BindingBase" />
        <Parameter Name="updateSourceEventName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TNativeView">For internal use by the Microsoft.Maui.Controls platform.</typeparam>
        <param name="target">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="targetProperty">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="bindingBase">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="updateSourceEventName">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="SetBindingContext&lt;TNativeView&gt;">
      <MemberSignature Language="C#" Value="public static void SetBindingContext&lt;TNativeView&gt; (TNativeView target, object bindingContext, Func&lt;TNativeView,System.Collections.Generic.IEnumerable&lt;TNativeView&gt;&gt; getChild = default) where TNativeView : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBindingContext&lt;class TNativeView&gt;(!!TNativeView target, object bindingContext, class System.Func`2&lt;!!TNativeView, class System.Collections.Generic.IEnumerable`1&lt;!!TNativeView&gt;&gt; getChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Internals.PlatformBindingHelpers.SetBindingContext``1(``0,System.Object,System.Func{``0,System.Collections.Generic.IEnumerable{``0}})" />
      <MemberSignature Language="F#" Value="static member SetBindingContext : 'NativeView * obj * Func&lt;'NativeView, seq&lt;'NativeView&gt; (requires 'NativeView : null)&gt; -&gt; unit (requires 'NativeView : null)" Usage="Microsoft.Maui.Controls.Internals.PlatformBindingHelpers.SetBindingContext (target, bindingContext, getChild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNativeView">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="TNativeView" />
        <Parameter Name="bindingContext" Type="System.Object" />
        <Parameter Name="getChild" Type="System.Func&lt;TNativeView,System.Collections.Generic.IEnumerable&lt;TNativeView&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TNativeView">For internal use by the Microsoft.Maui.Controls platform.</typeparam>
        <param name="target">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="bindingContext">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="getChild">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="SetValue&lt;TNativeView&gt;">
      <MemberSignature Language="C#" Value="public static void SetValue&lt;TNativeView&gt; (TNativeView target, Microsoft.Maui.Controls.BindableProperty targetProperty, object value) where TNativeView : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValue&lt;class TNativeView&gt;(!!TNativeView target, class Microsoft.Maui.Controls.BindableProperty targetProperty, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Internals.PlatformBindingHelpers.SetValue``1(``0,Microsoft.Maui.Controls.BindableProperty,System.Object)" />
      <MemberSignature Language="F#" Value="static member SetValue : 'NativeView * Microsoft.Maui.Controls.BindableProperty * obj -&gt; unit (requires 'NativeView : null)" Usage="Microsoft.Maui.Controls.Internals.PlatformBindingHelpers.SetValue (target, targetProperty, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNativeView">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="TNativeView" />
        <Parameter Name="targetProperty" Type="Microsoft.Maui.Controls.BindableProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TNativeView">For internal use by the Microsoft.Maui.Controls platform.</typeparam>
        <param name="target">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="targetProperty">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="value">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="TransferBindablePropertiesToWrapper&lt;TNativeView,TNativeWrapper&gt;">
      <MemberSignature Language="C#" Value="public static void TransferBindablePropertiesToWrapper&lt;TNativeView,TNativeWrapper&gt; (TNativeView nativeView, TNativeWrapper wrapper) where TNativeView : class where TNativeWrapper : Microsoft.Maui.Controls.View;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TransferBindablePropertiesToWrapper&lt;class TNativeView, (class Microsoft.Maui.Controls.View) TNativeWrapper&gt;(!!TNativeView nativeView, !!TNativeWrapper wrapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Internals.PlatformBindingHelpers.TransferBindablePropertiesToWrapper``2(``0,``1)" />
      <MemberSignature Language="F#" Value="static member TransferBindablePropertiesToWrapper : 'NativeView * 'NativeWrapper -&gt; unit (requires 'NativeView : null and 'NativeWrapper :&gt; Microsoft.Maui.Controls.View)" Usage="Microsoft.Maui.Controls.Internals.PlatformBindingHelpers.TransferBindablePropertiesToWrapper (nativeView, wrapper)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNativeView">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TNativeWrapper">
          <Constraints>
            <BaseTypeName>Microsoft.Maui.Controls.View</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="nativeView" Type="TNativeView" />
        <Parameter Name="wrapper" Type="TNativeWrapper" />
      </Parameters>
      <Docs>
        <typeparam name="TNativeView">For internal use by the Microsoft.Maui.Controls platform.</typeparam>
        <typeparam name="TNativeWrapper">For internal use by the Microsoft.Maui.Controls platform.</typeparam>
        <param name="nativeView">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="wrapper">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
