<Type Name="EnumerableExtensions" FullName="Microsoft.Maui.Controls.Internals.EnumerableExtensions">
  <TypeSignature Language="C#" Value="public static class EnumerableExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EnumerableExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Maui.Controls.Internals.EnumerableExtensions" />
  <TypeSignature Language="F#" Value="type EnumerableExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
  </Docs>
  <Members>
    <Member MemberName="ForEach&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void ForEach&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; enumeration, Action&lt;T&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForEach&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; enumeration, class System.Action`1&lt;!!T&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Internals.EnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
      <MemberSignature Language="F#" Value="static member ForEach : seq&lt;'T&gt; * Action&lt;'T&gt; -&gt; unit" Usage="Microsoft.Maui.Controls.Internals.EnumerableExtensions.ForEach (enumeration, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="enumeration" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="action" Type="System.Action&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">For internal use by the Microsoft.Maui.Controls platform.</typeparam>
        <param name="enumeration">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="action">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
      </Docs>
    </Member>
    <Member MemberName="GetChildGesturesFor&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetChildGesturesFor&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;Microsoft.Maui.Controls.GestureElement&gt; elements, Func&lt;T,bool&gt; predicate = default) where T : Microsoft.Maui.Controls.GestureRecognizer;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetChildGesturesFor&lt;(class Microsoft.Maui.Controls.GestureRecognizer) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Maui.Controls.GestureElement&gt; elements, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Internals.EnumerableExtensions.GetChildGesturesFor``1(System.Collections.Generic.IEnumerable{Microsoft.Maui.Controls.GestureElement},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="F#" Value="static member GetChildGesturesFor : seq&lt;Microsoft.Maui.Controls.GestureElement&gt; * Func&lt;'T, bool (requires 'T :&gt; Microsoft.Maui.Controls.GestureRecognizer)&gt; -&gt; seq&lt;'T (requires 'T :&gt; Microsoft.Maui.Controls.GestureRecognizer)&gt; (requires 'T :&gt; Microsoft.Maui.Controls.GestureRecognizer)" Usage="Microsoft.Maui.Controls.Internals.EnumerableExtensions.GetChildGesturesFor (elements, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Maui.Controls.Internals.EnumerableExtensions/&lt;GetChildGesturesFor&gt;d__0`1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Microsoft.Maui.Controls.GestureRecognizer</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="elements" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Maui.Controls.GestureElement&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">For internal use by the Microsoft.Maui.Controls platform.</typeparam>
        <param name="elements">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="predicate">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        <returns>For internal use by the Microsoft.Maui.Controls platform.</returns>
      </Docs>
    </Member>
    <Member MemberName="GetGesturesFor&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetGesturesFor&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;Microsoft.Maui.Controls.IGestureRecognizer&gt; gestures, Func&lt;T,bool&gt; predicate = default) where T : Microsoft.Maui.Controls.GestureRecognizer;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetGesturesFor&lt;(class Microsoft.Maui.Controls.GestureRecognizer) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Maui.Controls.IGestureRecognizer&gt; gestures, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Internals.EnumerableExtensions.GetGesturesFor``1(System.Collections.Generic.IEnumerable{Microsoft.Maui.Controls.IGestureRecognizer},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="F#" Value="static member GetGesturesFor : seq&lt;Microsoft.Maui.Controls.IGestureRecognizer&gt; * Func&lt;'T, bool (requires 'T :&gt; Microsoft.Maui.Controls.GestureRecognizer)&gt; -&gt; seq&lt;'T (requires 'T :&gt; Microsoft.Maui.Controls.GestureRecognizer)&gt; (requires 'T :&gt; Microsoft.Maui.Controls.GestureRecognizer)" Usage="Microsoft.Maui.Controls.Internals.EnumerableExtensions.GetGesturesFor (gestures, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Maui.Controls.Internals.EnumerableExtensions/&lt;GetGesturesFor&gt;d__1`1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Microsoft.Maui.Controls.GestureRecognizer</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="gestures" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Maui.Controls.IGestureRecognizer&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">For internal use by the Microsoft.Maui.Controls platform.</typeparam>
        <param name="gestures">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="predicate">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        <returns>For internal use by the Microsoft.Maui.Controls platform.</returns>
      </Docs>
    </Member>
    <Member MemberName="GroupToDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;TKey,System.Collections.Generic.List&lt;TSource&gt;&gt; GroupToDictionary&lt;TSource,TKey&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; enumeration, Func&lt;TSource,TKey&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;!!TKey, class System.Collections.Generic.List`1&lt;!!TSource&gt;&gt; GroupToDictionary&lt;TSource, TKey&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; enumeration, class System.Func`2&lt;!!TSource, !!TKey&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Internals.EnumerableExtensions.GroupToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      <MemberSignature Language="F#" Value="static member GroupToDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Collections.Generic.IDictionary&lt;'Key, System.Collections.Generic.List&lt;'Source&gt;&gt;" Usage="Microsoft.Maui.Controls.Internals.EnumerableExtensions.GroupToDictionary (enumeration, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;TKey,System.Collections.Generic.List&lt;TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="enumeration" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="func" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">For internal use by the Microsoft.Maui.Controls platform.</typeparam>
        <typeparam name="TKey">For internal use by the Microsoft.Maui.Controls platform.</typeparam>
        <param name="enumeration">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="func">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        <returns>For internal use by the Microsoft.Maui.Controls platform.</returns>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; enumerable, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; enumerable, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Internals.EnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="F#" Value="static member IndexOf : seq&lt;'T&gt; * Func&lt;'T, bool&gt; -&gt; int" Usage="Microsoft.Maui.Controls.Internals.EnumerableExtensions.IndexOf (enumerable, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="enumerable" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">For internal use by the Microsoft.Maui.Controls platform.</typeparam>
        <param name="enumerable">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="predicate">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        <returns>For internal use by the Microsoft.Maui.Controls platform.</returns>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; enumerable, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; enumerable, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Internals.EnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0)" />
      <MemberSignature Language="F#" Value="static member IndexOf : seq&lt;'T&gt; * 'T -&gt; int" Usage="Microsoft.Maui.Controls.Internals.EnumerableExtensions.IndexOf (enumerable, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="enumerable" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">For internal use by the Microsoft.Maui.Controls platform.</typeparam>
        <param name="enumerable">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="item">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        <returns>For internal use by the Microsoft.Maui.Controls platform.</returns>
      </Docs>
    </Member>
    <Member MemberName="Prepend&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; Prepend&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; enumerable, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; Prepend&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; enumerable, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Maui.Controls.Internals.EnumerableExtensions.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" />
      <MemberSignature Language="F#" Value="static member Prepend : seq&lt;'T&gt; * 'T -&gt; seq&lt;'T&gt;" Usage="Microsoft.Maui.Controls.Internals.EnumerableExtensions.Prepend (enumerable, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyName>Microsoft.Maui.Controls.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.Maui.Controls.Internals.EnumerableExtensions/&lt;Prepend&gt;d__7`1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="enumerable" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">For internal use by the Microsoft.Maui.Controls platform.</typeparam>
        <param name="enumerable">For internal use by the Microsoft.Maui.Controls platform.</param>
        <param name="item">For internal use by the Microsoft.Maui.Controls platform.</param>
        <summary>For internal use by the Microsoft.Maui.Controls platform.</summary>
        <returns>For internal use by the Microsoft.Maui.Controls platform.</returns>
      </Docs>
    </Member>
  </Members>
</Type>
