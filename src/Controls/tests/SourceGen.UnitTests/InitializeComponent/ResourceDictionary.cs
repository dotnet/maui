using System.Linq;
using Xunit;

namespace Microsoft.Maui.Controls.SourceGen.UnitTests;

public class ResourceDictionary : SourceGenXamlInitializeComponentTestBase
{
	[Fact]
	public void ResourceDictionaryWithoutXClass()
    {
        var xaml =
"""
<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:local="using:Microsoft.Maui.Controls.Xaml.UnitTests"> 
  <Color x:Key="AccentColor">#FF4B14</Color>
</ResourceDictionary>
""";
		var expected =
"""

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a .NET MAUI source generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable

namespace __XamlGeneratedCode__;

public partial class __TypeDBD64C1C77CDA760
{
	private partial void InitializeComponent()
	{
		var color = new global::Microsoft.Maui.Graphics.Color(1f, 0.29411766f, 0.078431375f, 1f) /* #FF4B14 */;
		global::Microsoft.Maui.VisualDiagnostics.RegisterSourceInfo(color!, new global::System.Uri(@"Styles.xaml;assembly=SourceGeneratorDriver.Generated", global::System.UriKind.Relative), 6, 4);
		var __root = this;
		global::Microsoft.Maui.VisualDiagnostics.RegisterSourceInfo(__root!, new global::System.Uri(@"Styles.xaml;assembly=SourceGeneratorDriver.Generated", global::System.UriKind.Relative), 2, 2);
#if !_MAUIXAML_SG_NAMESCOPE_DISABLE
		global::Microsoft.Maui.Controls.Internals.INameScope iNameScope = new global::Microsoft.Maui.Controls.Internals.NameScope();
#endif
		__root.Add("AccentColor", color);
	}
}

""";

		var (result, generated) = RunGenerator(xaml, "", path: "Styles.xaml");
		Assert.False(result.Diagnostics.Any());

		Assert.Equal(expected, generated);
		
    }
}
