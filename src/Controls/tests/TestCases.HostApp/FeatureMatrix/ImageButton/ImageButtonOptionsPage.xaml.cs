namespace Maui.Controls.Sample;

public partial class ImageButtonOptionsPage : ContentPage
{
	private readonly ImageButtonViewModel _viewModel;
	public static string Base64EncodedImage = "";

	public ImageButtonOptionsPage(ImageButtonViewModel viewModel)
	{
		InitializeComponent();
		_viewModel = viewModel;
		BindingContext = _viewModel;
	}

	private async void ApplyButton_Clicked(object sender, EventArgs e)
	{
		if (Navigation.NavigationStack.Count > 1)
		{
			await Navigation.PopAsync();
		}
	}
	private void AspectRadio_CheckedChanged(object sender, CheckedChangedEventArgs e)
	{
		if (!(sender is RadioButton rb) || !rb.IsChecked)
			return;
		switch (rb.Content?.ToString())
		{
			case "AspectFit":
				_viewModel.Aspect = Aspect.AspectFit;
				break;
			case "AspectFill":
				_viewModel.Aspect = Aspect.AspectFill;
				break;
			case "Fill":
				_viewModel.Aspect = Aspect.Fill;
				break;
			case "Center":
				_viewModel.Aspect = Aspect.Center;
				break;
		}
	}

	private void OpaqueRadio_CheckedChanged(object sender, CheckedChangedEventArgs e)
	{
		if (!(sender is RadioButton rb) || !rb.IsChecked)
			return;
		_viewModel.IsOpaque = rb.Content?.ToString() == "True";
	}

	private void SourceTypeRadio_CheckedChanged(object sender, CheckedChangedEventArgs e)
	{
		if (sender is RadioButton rb && rb.IsChecked)
		{
			string type = rb.Content?.ToString() ?? "";
			switch (type)
			{
				case "File":
					_viewModel.Source = new FileImageSource
					{
						File = "dotnet_bot.png"
					};
					break;
				case "Uri":
					_viewModel.Source = new UriImageSource
					{
						Uri = new Uri("https://aka.ms/campus.jpg"),
						CachingEnabled = true,
						CacheValidity = TimeSpan.MaxValue // Effectively infinite cache
					};
					break;

				case "Stream":
					var imageBytes = Convert.FromBase64String(Base64EncodedImage);
					_viewModel.Source = Microsoft.Maui.Controls.ImageSource.FromStream(() => new MemoryStream(imageBytes));
					break;
				case "FontImage":
					_viewModel.Source = new FontImageSource
					{
						FontFamily = "Ion",
						Glyph = "\uf30c",
						Color = Colors.Red,
						Size = 300
					};
					break;
			}
		}
	}

	private void BorderColorRadio_CheckedChanged(object sender, CheckedChangedEventArgs e)
	{
		if (!(sender is RadioButton rb) || !rb.IsChecked)
			return;
		switch (rb.Content?.ToString())
		{
			case "Red":
				_viewModel.BorderColor = Colors.Red;
				break;
			case "Green":
				_viewModel.BorderColor = Colors.Green;
				break;
		}
	}

	private void BorderWidthEntry_TextChanged(object sender, TextChangedEventArgs e)
	{
		if (double.TryParse(e.NewTextValue, out double width))
			_viewModel.BorderWidth = width;
	}


	private void IsEnabledRadio_CheckedChanged(object sender, CheckedChangedEventArgs e)
	{
		if (!(sender is RadioButton rb) || !rb.IsChecked)
			return;
		_viewModel.IsEnabled = rb.Content?.ToString() == "True";
	}

	private void PaddingSlider_ValueChanged(object sender, ValueChangedEventArgs e)
	{
		_viewModel.Padding = new Thickness(e.NewValue);
	}

	private void PaddingEntry_TextChanged(object sender, TextChangedEventArgs e)
	{
		if (double.TryParse(e.NewTextValue, out double padding))
			_viewModel.Padding = new Thickness(padding);
	}

	private void OnPaddingChanged(object sender, TextChangedEventArgs e)
	{
		if (string.IsNullOrWhiteSpace(PaddingEntry?.Text))
			return;
		try
		{
			string[] parts = PaddingEntry.Text.Split(',');
			if (parts.Length == 4 &&
				double.TryParse(parts[0], out double left) &&
				double.TryParse(parts[1], out double top) &&
				double.TryParse(parts[2], out double right) &&
				double.TryParse(parts[3], out double bottom))
			{
				_viewModel.Padding = new Thickness(left, top, right, bottom);
			}
		}
		catch { }
	}

	private void IsVisibleRadio_CheckedChanged(object sender, CheckedChangedEventArgs e)
	{
		if (!(sender is RadioButton rb) || !rb.IsChecked)
			return;
		_viewModel.IsVisible = rb.Content?.ToString() == "True";
	}

	private void ShadowRadio_CheckedChanged(object sender, CheckedChangedEventArgs e)
	{
		if (e.Value && BindingContext is ImageButtonViewModel vm)
		{
			var rb = sender as RadioButton;
			if (rb?.Content?.ToString() == "True")
			{
				vm.Shadow = new Shadow { Brush = Brush.Black, Offset = new Point(5, 5), Radius = 5, Opacity = 0.5f };
			}
			else if (rb?.Content?.ToString() == "False")
			{
				vm.Shadow = null!;
			}
		}
	}

	private void OnFlowDirectionChanged(object sender, EventArgs e)
	{
		_viewModel.FlowDirection = FlowDirectionLTR.IsChecked ? FlowDirection.LeftToRight : FlowDirection.RightToLeft;
	}

	private void OnCornerRadiusChanged(object sender, TextChangedEventArgs e)
	{
		if (string.IsNullOrWhiteSpace(CornerRadiusEntry?.Text))
			return;
		try
		{
			string[] parts = CornerRadiusEntry.Text.Split(',');
			if (parts.Length == 4 &&
				int.TryParse(parts[0], out int topLeft) &&
				int.TryParse(parts[1], out int topRight) &&
				int.TryParse(parts[2], out int bottomLeft) &&
				int.TryParse(parts[3], out int bottomRight))
			{
				_viewModel.CornerRadius = topLeft;
			}
			else if (parts.Length == 1 && int.TryParse(parts[0], out int uniform))
			{
				_viewModel.CornerRadius = uniform;
			}
		}
		catch { }
	}
}
