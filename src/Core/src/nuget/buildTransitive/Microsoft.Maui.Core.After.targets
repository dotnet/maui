<Project>

  <PropertyGroup>
    <!-- TODO: workaround https://github.com/xamarin/xamarin-android/issues/6809#issuecomment-1061115254 -->
    <MSBuildWarningsAsMessages Condition=" '$(TargetPlatformIdentifier)' == 'Android' ">$(MSBuildWarningsAsMessages);XA4218</MSBuildWarningsAsMessages>
  </PropertyGroup>

  <Import Project="$(MSBuildThisFileDirectory)Microsoft.Maui.Core.BundledVersions.targets" />

  <!-- 
    Check to make sure that .NET MAUI packages are not installed as .NET Standard
    when they are installed into a .NET "Core" project. If this happens, it means
    that the user has installed a .NET MAUI package that requires a later TFM than
    what the project has.

    Some examples:
     - Installing a .NET 9 MAUI package into a .NET 8 project
     - Installing a .NET 9 MAUI package into a very old .NET 9 installation

    To skip this check, set $(SkipCheckForMauiMinimumSupportedWorkloadVersion) to true.
  -->
  <Target
    Name="_CheckForMauiMinimumSupportedWorkloadVersion"
    BeforeTargets="_CheckForInvalidConfigurationAndPlatform;_CheckForUnsupportedTargetPlatformIdentifier"
    Condition="
      '$(SkipCheckForMauiMinimumSupportedWorkloadVersion)' != 'true' and
      '$(MauiWorkloadVersion)' != '' and
      $([MSBuild]::VersionLessThan('$(MauiWorkloadVersion)', '$(MauiMinimumSupportedWorkloadVersion)'))">
    
    <Error
        Code="MA003"
        Text="The current .NET MAUI package version '$(MauiCorePackageVersion)' requires the .NET MAUI workload version to be at least '$(MauiMinimumSupportedWorkloadVersion)'. The current .NET MAUI workload version is '$(MauiWorkloadVersion)'." />

  </Target>

  <!--
    This double check seems excessive, but importing the WinUI.targets when building for windows is not
    sufficient. The WASDK targets assume everything is WinUI and thus just passes along the TFM of the app.
    As a result, if you have a net6.0 class library, the app will call MSBuild on that library - with the Windows TFM!
    This results in the $(TargetPlatformIdentifier) condition being met - even though there are no WASK targets to run!
  -->
  <Import Project="WinUI.targets" Condition=" '$(TargetPlatformIdentifier)' == 'windows' and '$(MicrosoftWindowsAppSDKPackageDir)' != '' " />

</Project>