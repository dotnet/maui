#nullable enable
Microsoft.Maui.ElementHandlerExtensions
Microsoft.Maui.HandlerDisconnectPolicy
Microsoft.Maui.HandlerDisconnectPolicy.Automatic = 0 -> Microsoft.Maui.HandlerDisconnectPolicy
Microsoft.Maui.HandlerDisconnectPolicy.Manual = 1 -> Microsoft.Maui.HandlerDisconnectPolicy
Microsoft.Maui.Handlers.DataFlowDirection
Microsoft.Maui.Handlers.DataFlowDirection.FromPlatform = 1 -> Microsoft.Maui.Handlers.DataFlowDirection
Microsoft.Maui.Handlers.DataFlowDirection.ToPlatform = 0 -> Microsoft.Maui.Handlers.DataFlowDirection
Microsoft.Maui.Handlers.HybridWebViewHandler
Microsoft.Maui.Handlers.HybridWebViewHandler.HybridWebViewHandler() -> void
Microsoft.Maui.Handlers.HybridWebViewHandler.HybridWebViewHandler(Microsoft.Maui.IPropertyMapper? mapper = null, Microsoft.Maui.CommandMapper? commandMapper = null) -> void
Microsoft.Maui.Handlers.IHybridPlatformWebView
Microsoft.Maui.Handlers.IHybridPlatformWebView.SendRawMessage(string! rawMessage) -> void
Microsoft.Maui.Handlers.IHybridWebViewHandler
Microsoft.Maui.Handlers.IHybridWebViewHandler.PlatformView.get -> object!
Microsoft.Maui.Handlers.IHybridWebViewHandler.VirtualView.get -> Microsoft.Maui.IHybridWebView!
Microsoft.Maui.Hosting.HybridWebViewServiceCollectionExtensions
Microsoft.Maui.Hosting.MauiAppBuilder.Environment.get -> Microsoft.Maui.Hosting.MauiHostEnvironment!
Microsoft.Maui.Hosting.MauiAppBuilder.Properties.get -> System.Collections.Generic.IDictionary<object!, object!>!
Microsoft.Maui.Hosting.MauiHostEnvironment
Microsoft.Maui.Hosting.MauiHostEnvironment.ApplicationName.get -> string!
Microsoft.Maui.Hosting.MauiHostEnvironment.ApplicationName.set -> void
Microsoft.Maui.Hosting.MauiHostEnvironment.ContentRootFileProvider.get -> Microsoft.Extensions.FileProviders.IFileProvider!
Microsoft.Maui.Hosting.MauiHostEnvironment.ContentRootFileProvider.set -> void
Microsoft.Maui.Hosting.MauiHostEnvironment.ContentRootPath.get -> string!
Microsoft.Maui.Hosting.MauiHostEnvironment.ContentRootPath.set -> void
Microsoft.Maui.Hosting.MauiHostEnvironment.EnvironmentName.get -> string!
Microsoft.Maui.Hosting.MauiHostEnvironment.EnvironmentName.set -> void
Microsoft.Maui.Hosting.MauiHostEnvironment.MauiHostEnvironment() -> void
Microsoft.Maui.HybridWebViewInvokeJavaScriptRequest
Microsoft.Maui.HybridWebViewInvokeJavaScriptRequest.HybridWebViewInvokeJavaScriptRequest(string! methodName, System.Text.Json.Serialization.Metadata.JsonTypeInfo? returnTypeJsonTypeInfo, object?[]? paramValues, System.Text.Json.Serialization.Metadata.JsonTypeInfo?[]? paramJsonTypeInfos) -> void
Microsoft.Maui.HybridWebViewInvokeJavaScriptRequest.MethodName.get -> string!
Microsoft.Maui.HybridWebViewInvokeJavaScriptRequest.ParamJsonTypeInfos.get -> System.Text.Json.Serialization.Metadata.JsonTypeInfo?[]?
Microsoft.Maui.HybridWebViewInvokeJavaScriptRequest.ParamValues.get -> object?[]?
Microsoft.Maui.HybridWebViewInvokeJavaScriptRequest.ReturnTypeJsonTypeInfo.get -> System.Text.Json.Serialization.Metadata.JsonTypeInfo?
Microsoft.Maui.HybridWebViewRawMessage
Microsoft.Maui.HybridWebViewRawMessage.HybridWebViewRawMessage() -> void
Microsoft.Maui.HybridWebViewRawMessage.Message.get -> string?
Microsoft.Maui.HybridWebViewRawMessage.Message.set -> void
Microsoft.Maui.IApplication.ActivateWindow(Microsoft.Maui.IWindow! window) -> void
*REMOVED*Microsoft.Maui.IDatePicker.Date.get -> System.DateTime
*REMOVED*Microsoft.Maui.IDatePicker.MaximumDate.get -> System.DateTime
*REMOVED*Microsoft.Maui.IDatePicker.MinimumDate.get -> System.DateTime
Microsoft.Maui.IDatePicker.MaximumDate.get -> System.DateTime?
Microsoft.Maui.IDatePicker.MinimumDate.get -> System.DateTime?
Microsoft.Maui.IDatePicker.Date.get -> System.DateTime?
Microsoft.Maui.IHybridWebView
Microsoft.Maui.IHybridWebView.DefaultFile.get -> string?
Microsoft.Maui.IHybridWebView.EvaluateJavaScriptAsync(string! script) -> System.Threading.Tasks.Task<string?>!
Microsoft.Maui.IHybridWebView.HybridRoot.get -> string?
Microsoft.Maui.IHybridWebView.InvokeJavaScriptAsync<TReturnType>(string! methodName, System.Text.Json.Serialization.Metadata.JsonTypeInfo<TReturnType>! returnTypeJsonTypeInfo, object?[]? paramValues = null, System.Text.Json.Serialization.Metadata.JsonTypeInfo?[]? paramJsonTypeInfos = null) -> System.Threading.Tasks.Task<TReturnType?>!
Microsoft.Maui.IHybridWebView.InvokeJavaScriptTarget.get -> object?
Microsoft.Maui.IHybridWebView.InvokeJavaScriptTarget.set -> void
Microsoft.Maui.IHybridWebView.InvokeJavaScriptType.get -> System.Type?
Microsoft.Maui.IHybridWebView.InvokeJavaScriptType.set -> void
Microsoft.Maui.IHybridWebView.RawMessageReceived(string! rawMessage) -> void
Microsoft.Maui.IHybridWebView.SendRawMessage(string! rawMessage) -> void
Microsoft.Maui.IHybridWebView.SetInvokeJavaScriptTarget<T>(T! target) -> void
Microsoft.Maui.ITitleBar
Microsoft.Maui.ITitleBar.PassthroughElements.get -> System.Collections.Generic.IList<Microsoft.Maui.IView!>!
Microsoft.Maui.ITitleBar.Subtitle.get -> string?
Microsoft.Maui.ITitleBar.Title.get -> string?
Microsoft.Maui.IWebView.ProcessTerminated(Microsoft.Maui.WebProcessTerminatedEventArgs! args) -> void
*REMOVED*Microsoft.Maui.IWindow.Content.get -> Microsoft.Maui.IView!
Microsoft.Maui.IWindow.Content.get -> Microsoft.Maui.IView?
Microsoft.Maui.TextAlignment.Justify = 3 -> Microsoft.Maui.TextAlignment
Microsoft.Maui.WebProcessTerminatedEventArgs
Microsoft.Maui.WebProcessTerminatedEventArgs.WebProcessTerminatedEventArgs() -> void
override Microsoft.Maui.Handlers.HybridWebViewHandler.CreatePlatformView() -> object!
static Microsoft.Maui.ElementHandlerExtensions.GetRequiredService<T>(this Microsoft.Maui.IElementHandler! handler, System.Type! type) -> T
static Microsoft.Maui.ElementHandlerExtensions.GetRequiredService<T>(this Microsoft.Maui.IElementHandler! handler) -> T
static Microsoft.Maui.ElementHandlerExtensions.GetService<T>(this Microsoft.Maui.IElementHandler! handler, System.Type! type) -> T?
static Microsoft.Maui.ElementHandlerExtensions.GetService<T>(this Microsoft.Maui.IElementHandler! handler) -> T?
static Microsoft.Maui.ElementHandlerExtensions.GetServiceProvider(this Microsoft.Maui.IElementHandler! handler) -> System.IServiceProvider!
static Microsoft.Maui.ElementHandlerExtensions.IsConnected(this Microsoft.Maui.IElementHandler! handler) -> bool
static Microsoft.Maui.Handlers.ApplicationHandler.MapActivateWindow(Microsoft.Maui.Handlers.ApplicationHandler! handler, Microsoft.Maui.IApplication! application, object? args) -> void
static Microsoft.Maui.Handlers.HybridWebViewHandler.CommandMapper -> Microsoft.Maui.CommandMapper<Microsoft.Maui.IHybridWebView!, Microsoft.Maui.Handlers.IHybridWebViewHandler!>!
static Microsoft.Maui.Handlers.HybridWebViewHandler.MapEvaluateJavaScriptAsync(Microsoft.Maui.Handlers.IHybridWebViewHandler! handler, Microsoft.Maui.IHybridWebView! hybridWebView, object? arg) -> void
static Microsoft.Maui.Handlers.HybridWebViewHandler.MapInvokeJavaScriptAsync(Microsoft.Maui.Handlers.IHybridWebViewHandler! handler, Microsoft.Maui.IHybridWebView! hybridWebView, object? arg) -> void
static Microsoft.Maui.Handlers.HybridWebViewHandler.Mapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.IHybridWebView!, Microsoft.Maui.Handlers.IHybridWebViewHandler!>!
static Microsoft.Maui.Handlers.HybridWebViewHandler.MapSendRawMessage(Microsoft.Maui.Handlers.IHybridWebViewHandler! handler, Microsoft.Maui.IHybridWebView! hybridWebView, object? arg) -> void
static Microsoft.Maui.Hosting.AppHostBuilderExtensions.ConfigureEnvironmentVariables(this Microsoft.Maui.Hosting.MauiAppBuilder! builder) -> Microsoft.Maui.Hosting.MauiAppBuilder!
static Microsoft.Maui.Hosting.HybridWebViewServiceCollectionExtensions.AddHybridWebViewDeveloperTools(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Microsoft.Maui.Keyboard.Date.get -> Microsoft.Maui.Keyboard!
static Microsoft.Maui.Keyboard.Password.get -> Microsoft.Maui.Keyboard!
static Microsoft.Maui.Keyboard.Time.get -> Microsoft.Maui.Keyboard!
*REMOVED*readonly Microsoft.Maui.PropertyMapper._mapper -> System.Collections.Generic.Dictionary<string!, System.Action<Microsoft.Maui.IElementHandler!, Microsoft.Maui.IElement!>!>!
*REMOVED*virtual Microsoft.Maui.PropertyMapper.ClearKeyCache() -> void
*REMOVED*virtual Microsoft.Maui.PropertyMapper.UpdateKeys.get -> System.Collections.Generic.IReadOnlyCollection<string!>!
static Microsoft.Maui.ViewExtensions.DisconnectHandlers(this Microsoft.Maui.IView! view) -> void
override Microsoft.Maui.Handlers.BorderHandler.PlatformArrange(Microsoft.Maui.Graphics.Rect rect) -> void
Microsoft.Maui.ISearchBar.SearchIconColor.get -> Microsoft.Maui.Graphics.Color!
static Microsoft.Maui.Handlers.SearchBarHandler.MapReturnType(Microsoft.Maui.IViewHandler! handler, Microsoft.Maui.ISearchBar! searchBar) -> void
Microsoft.Maui.ISearchBar.ReturnType.get -> Microsoft.Maui.ReturnType
*REMOVED*Microsoft.Maui.ITimePicker.Time.get -> System.TimeSpan
Microsoft.Maui.ITimePicker.Time.get -> System.TimeSpan?
