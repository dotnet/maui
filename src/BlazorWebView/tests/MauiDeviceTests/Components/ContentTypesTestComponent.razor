@page "/content-types-test"
@inject IJSRuntime JSRuntime

<div id="json-result">Loading JSON...</div>
<div id="text-result">Loading Text...</div>
<div id="xml-result">Loading XML...</div>
<button id="testButton" @onclick="TestContentTypes">Test Content Types</button>

@code {
    private async Task TestContentTypes()
    {
        try
        {
            var script = @"
                // Test JSON response
                fetch('/api/json')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('json-result').innerText = 'JSON: ' + data.message;
                });

                // Test text response
                fetch('/api/text')
                .then(response => response.text())
                .then(data => {
                    document.getElementById('text-result').innerText = 'Text: ' + data;
                });

                // Test XML response
                fetch('/api/xml')
                .then(response => response.text())
                .then(data => {
                    document.getElementById('xml-result').innerText = 'XML: ' + (data.includes('<message>') ? 'Valid XML' : 'Invalid');
                });
            ";
            
            await JSRuntime.InvokeVoidAsync("eval", script);
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("document.getElementById('json-result').innerText = 'Error: ' + arguments[0]", ex.Message);
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await TestContentTypes();
        }
    }
}
