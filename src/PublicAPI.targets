<Project>

  <PropertyGroup>
    <!-- The Copilot SWE always generates instead of trying to fix -->
    <PublicApiType Condition="'$(PublicApiType)' == '' and '$(GITHUB_WORKFLOW)' == 'Copilot'">Generate</PublicApiType>
    <!-- The normal CI workflows will NEVER generate, only validate -->
    <PublicApiType Condition="'$(PublicApiType)' == '' and ('$(CI)' == 'true' or '$(TF_BUILD)' == 'true')">Validate</PublicApiType>
    <!-- The Release builds will NEVER generate, only validate -->
    <PublicApiType Condition="'$(PublicApiType)' == '' and '$(Configuration)' != 'Debug'">Validate</PublicApiType>
    <!-- Local Debug workflows will generate -->
    <!--<PublicApiType Condition="'$(PublicApiType)' == '' and '$(Configuration)' == 'Debug'">Generate</PublicApiType>-->
    <!-- Fall back to validate -->
    <PublicApiType Condition="'$(PublicApiType)' == ''">Validate</PublicApiType>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Remove="Microsoft.CodeAnalysis.PublicApiAnalyzers" />
    <PackageReference Include="Microsoft.CodeAnalysis.PublicApiAnalyzers" PrivateAssets="All" Condition="'$(PublicApiType)' != 'Generate'" />
    <PackageReference Include="Mono.ApiTools.MSBuildTasks" PrivateAssets="all" Condition="'$(PublicApiType)' == 'Generate'" />
  </ItemGroup>

  <!-- for explicit TFMs -->
  <ItemGroup Condition="'$(TargetFramework)' != '' and Exists('PublicAPI\$(TargetFramework)\PublicAPI.Shipped.txt') and Exists('PublicAPI\$(TargetFramework)\PublicAPI.Unshipped.txt')">
    <PublicAPIFiles Include="PublicAPI\$(TargetFramework)\PublicAPI.Shipped.txt" />
    <PublicAPIFiles Include="PublicAPI\$(TargetFramework)\PublicAPI.Unshipped.txt" />
  </ItemGroup>

  <!-- for almost-explicit TFMs -->
  <ItemGroup Condition="'$(TargetFramework)' != '' and !Exists('PublicAPI\$(TargetFramework)\PublicAPI.Shipped.txt') and !Exists('PublicAPI\$(TargetFramework)\PublicAPI.Unshipped.txt')">
    <PublicAPIFiles Include="PublicAPI\net\PublicAPI.Shipped.txt" Condition="'$(TargetPlatformIdentifier)' == ''" />
    <PublicAPIFiles Include="PublicAPI\net\PublicAPI.Unshipped.txt" Condition="'$(TargetPlatformIdentifier)' == ''" />
    <PublicAPIFiles Include="PublicAPI\net-$(TargetPlatformIdentifier.ToLower())\PublicAPI.Shipped.txt" Condition="'$(TargetPlatformIdentifier)' != '' and !$(TargetFramework.StartsWith('netstandard'))" />
    <PublicAPIFiles Include="PublicAPI\net-$(TargetPlatformIdentifier.ToLower())\PublicAPI.Unshipped.txt" Condition="'$(TargetPlatformIdentifier)' != '' and !$(TargetFramework.StartsWith('netstandard'))" />
    <PublicAPIFiles Include="PublicAPI\netstandard\PublicAPI.Shipped.txt" Condition="$(TargetFramework.StartsWith('netstandard'))" />
    <PublicAPIFiles Include="PublicAPI\netstandard\PublicAPI.Unshipped.txt" Condition="$(TargetFramework.StartsWith('netstandard'))" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' != ''">
    <AdditionalFiles Include="@(PublicAPIFiles)" />
  </ItemGroup>

  <Target Name="_GeneratePublicApiFiles" 
          AfterTargets="Build"
          Condition="'$(TargetFramework)' != '' and '$(PublicApiType)' == 'Generate'"
          Inputs="$(TargetDir)$(AssemblyName).dll"
          Outputs="$(IntermediateOutputPath)GeneratePublicApiFiles.stamp">
    <GeneratePublicApiFiles
      Assembly="$(TargetDir)$(AssemblyName).dll"
      Files="@(PublicAPIFiles)"
      ReferenceSearchPaths="@(ReferencePath)" />
		<Touch Files="$(IntermediateOutputPath)GeneratePublicApiFiles.stamp" AlwaysCreate="True" />
		<ItemGroup>
			<FileWrites Include="$(IntermediateOutputPath)GeneratePublicApiFiles.stamp" />
		</ItemGroup>
  </Target>

</Project>
