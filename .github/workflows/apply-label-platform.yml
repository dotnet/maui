name: "Triage: Apply Labels"
on:
  pull_request:
    types: [reopened, synchronize, opened]
#   issues:
#     types: [opened, edited]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to triage'
        required: true
        type: number

permissions:
  contents: read
  issues: read
  models: read

jobs:
  triage-issue:
    name: Apply Labels
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Issue Data
        id: issue-data
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number =
              github.event_name === 'workflow_dispatch' ? context.payload.inputs.issue_number :
              github.event_name === 'issues' ? github.event.issue.number :
              '29634';
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number
            });
            const data = {
              title: issue.data.title,
              body: issue.data.body,
              number: issue.data.number
            };
            const fs = require('fs');
            fs.writeFileSync('issue.json', JSON.stringify(data, null, 2));
            return data;

      - name: Create Prompt
        id: create-prompt
        shell: pwsh
        run: |
          ./.github/scripts/process-prompt-template.ps1 `
            -Template ".github/prompts/apply-label-user.prompt-template.md" `
            -Output "user-prompt.md"

      - name: Load System Prompt
        id: load-system-prompt
        shell: pwsh
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          ./.github/scripts/process-prompt-template.ps1 `
            -Template ".github/prompts/apply-label-system.prompt-template.md" `
            -Output "system-prompt.md"
          "system_prompt=$((Get-Content -Raw system-prompt.md) | ConvertTo-Json)" >> $env:GITHUB_OUTPUT

      - name: Log Prompts
        run: |
          echo "::group::System Prompt"
          cat system-prompt.md
          echo "::endgroup::"
          echo "::group::User Prompt"
          cat user-prompt.md
          echo "::endgroup::"

      - name: Run AI Inference
        id: inference
        uses: actions/ai-inference@main
        with:
          prompt-file: "user-prompt.md"
          system-prompt: ${{ steps.load-system-prompt.outputs.system_prompt }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Log AI Analysis
        shell: pwsh
        run: |
          cat "${{ steps.inference.outputs.response-file }}"
