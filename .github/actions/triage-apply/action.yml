name: 'Apply Labels and Comment'
description: 'Merge label JSON files, summarize, comment on the issue, and apply labels.'

inputs:
  issue:
    description: 'The issue number to update'
    required: true
  token:
    description: 'GitHub token to use for authentication'
    required: true
  label-files:
    description: 'Comma-separated or newline-separated list of JSON files with label results'
    required: true

outputs:
  merged-file:
    description: 'The merged JSON file with all labels and summary.'
    value: ${{ steps.merge-labels.outputs.merged-file }}

runs:
  using: 'composite'
  steps:

    - name: Setup working directory
      id: setup
      uses: ./.github/actions/triage-setup
      with:
        token: ${{ inputs.token }}

    - name: Merge response JSON files
      id: merge
      shell: pwsh
      run: |
        "Merge response JSON files"
        echo "::group::Merge response JSON files"
        $out = "${{ steps.setup.outputs.work-dir }}/merged.json"
        ${{ github.action_path }}/merge-responses.ps1 `
          -Inputs "${{ inputs.label-files }}" `
          -Output "$out"
        "merged-file=$out" >> $env:GITHUB_OUTPUT
        echo "::endgroup::"

    - name: Create User prompt file
      id: create-user-prompt
      uses: ./.github/actions/triage-gen-prompt
      with:
        token: ${{ inputs.token }}
        template: ${{ github.action_path }}/user-prompt.md
        output: ${{ steps.setup.outputs.work-dir }}/user-prompt.md

    - name: Run Triage AI Action
      id: triage-ai
      uses: ./.github/actions/triage-ai
      with:
        prompt-file: "${{ steps.create-system-prompt.outputs.prompt }}"
        token: ${{ inputs.token }}
        response-file: "${{ steps.setup.outputs.work-dir }}/ai-response.json"


    # - name: Comment on the issue with summary
    #   uses: actions/github-script@v7
    #   with:
    #     script: |
    #       const fs = require('fs');
    #       const issueNumber = parseInt('${{ inputs.issue }}', 10);
    #       const summary = fs.readFileSync('summary.txt', 'utf8');
    #       await github.rest.issues.createComment({
    #         owner: context.repo.owner,
    #         repo: context.repo.repo,
    #         issue_number: issueNumber,
    #         body: summary
    #       });

    # - name: Apply labels to the issue
    #   uses: actions/github-script@v7
    #   with:
    #     script: |
    #       const fs = require('fs');
    #       const issueNumber = parseInt('${{ inputs.issue }}', 10);
    #       const merged = JSON.parse(fs.readFileSync('merged-labels.json', 'utf8'));
    #       const labels = merged.labels.map(l => l.label).filter(Boolean);
    #       if (labels.length > 0) {
    #         await github.rest.issues.addLabels({
    #           owner: context.repo.owner,
    #           repo: context.repo.repo,
    #           issue_number: issueNumber,
    #           labels
    #         });
    #       }
