parameters:
  androidPool: { }
  iosPool: { }
  catalystPool: { }
  windowsPool: { }
  androidApiLevels: [ 33 ]
  iosVersions: [ 'latest' ]
  iosDeviceVersions: [ '15' ]
  catalystVersions: [ 'latest' ]
  provisionatorChannel: 'latest'
  skipProvisioning: true
  agentPoolAccessToken: ''
  artifactName: 'nuget'
  artifactItemPattern: '**/*.nupkg'
  checkoutDirectory: $(System.DefaultWorkingDirectory)
  androidConfiguration: 'debug' # Indicates the configuration to use for Android. We're slowly enabling this for all projects
  useArtifacts: false
  targetFrameworkVersion:
    tfm: ''
    dependsOn: ''
  projects:
    - name: name
      desc: Human Description
      android: /optional/path/to/android.csproj
      ios: /optional/path/to/ios.csproj
      catalyst: /optional/path/to/catalyst.csproj
  platforms:
    - android
    - ios
    - catalyst
    - windows

stages:

- ${{ each platform in parameters.platforms }}:
  - stage: ${{ platform }}_device_tests_${{ replace(parameters.targetFrameworkVersion.tfm, '.', '') }}
    displayName: ${{ parameters.targetFrameworkVersion.tfm }} ${{ platform }}
    ${{ if eq(parameters.targetFrameworkVersion.dependsOn, '') }}:
      dependsOn: []
    ${{ else }}:
      dependsOn:
        - ${{ platform }}_device_tests_${{ replace(parameters.targetFrameworkVersion.dependsOn, '.', '') }}
    jobs:

    - ${{ if eq(platform, 'android') }}:
      - ${{ each project in parameters.projects }}:
        - ${{ if ne(project.android, '') }}:
          - template: device-tests-jobs.yml
            parameters:
              buildAndTest: false
              platform: android
              timeoutInMinutes: 60
              pool: ${{ parameters.androidPool }}
              versions: ${{ parameters.androidApiLevels }}
              targetFrameworkVersion: ${{ parameters.targetFrameworkVersion }}
              checkoutDirectory: ${{ parameters.checkoutDirectory }}
              project:
                name: ${{ project.name }}
                desc: ${{ project.desc }}
                path: ${{ project.android }}
                versionsExclude: ${{ project.androidApiLevelsExclude }}
                configuration: ${{ project.androidConfiguration }}
              provisionatorChannel: ${{ parameters.provisionatorChannel }}
              skipProvisioning: ${{ parameters.skipProvisioning }}
              agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
              artifactName: ${{ parameters.artifactName }}
              artifactItemPattern: ${{ parameters.artifactItemPattern }}
              useArtifacts: ${{ parameters.useArtifacts }}

    - ${{ if eq(platform, 'ios') }}:
      - ${{ each project in parameters.projects }}:
        - ${{ if ne(project.ios, '') }}:
          - template: device-tests-jobs.yml
            parameters:
              platform: ios
              timeoutInMinutes: 120
              pool: ${{ parameters.iOSPool }}
              versions: ${{ parameters.iosVersions }}
              targetFrameworkVersion: ${{ parameters.targetFrameworkVersion }}
              checkoutDirectory: ${{ parameters.checkoutDirectory }}
              project:
                name: ${{ project.name }}
                desc: ${{ project.desc }}
                path: ${{ project.ios }}
                versionsExclude: ${{ project.iosVersionsExclude }}
                configuration: ${{ project.iOSConfiguration }}
              provisionatorChannel: ${{ parameters.provisionatorChannel }}
              skipProvisioning: ${{ parameters.skipProvisioning }}
              agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
              artifactName: ${{ parameters.artifactName }}
              artifactItemPattern: ${{ parameters.artifactItemPattern }}
              useArtifacts: ${{ parameters.useArtifacts }}

    - ${{ if eq(platform, 'catalyst') }}:
      - ${{ each project in parameters.projects }}:
        - ${{ if ne(project.catalyst, '') }}:
          - template: device-tests-jobs.yml
            parameters:
              platform: catalyst
              timeoutInMinutes: 240
              pool: ${{ parameters.catalystPool }}
              versions: ${{ parameters.catalystVersions }}
              targetFrameworkVersion: ${{ parameters.targetFrameworkVersion }}
              checkoutDirectory: ${{ parameters.checkoutDirectory }}
              project:
                name: ${{ project.name }}
                desc: ${{ project.desc }}
                path: ${{ project.catalyst }}
                versionsExclude: ${{ project.catalystVersionsExclude }}
                configuration: ${{ project.iOSConfiguration }}
              provisionatorChannel: ${{ parameters.provisionatorChannel }}
              skipProvisioning: ${{ parameters.skipProvisioning }}
              agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
              artifactName: ${{ parameters.artifactName }}
              artifactItemPattern: ${{ parameters.artifactItemPattern }}
              useArtifacts: ${{ parameters.useArtifacts }}

    - ${{ if eq(platform, 'windows') }}:
      - ${{ each project in parameters.projects }}:
        - ${{ if ne(project.windows, '') }}:
          - ${{ each windowsVersion in parameters.windowsVersions }}:
            - template: device-tests-jobs.yml
              parameters:
                platform: windows
                timeoutInMinutes: 240
                pool: ${{ parameters.windowsPool }}
                versions: [ '${{ windowsVersion }}' ]
                cakeArgs: ''
                targetFrameworkVersion: ${{ parameters.targetFrameworkVersion }}
                checkoutDirectory: ${{ parameters.checkoutDirectory }}
                project:
                  name: ${{ project.name }}_${{ windowsVersion }}
                  desc: ${{ project.desc }} ${{ windowsVersion }}
                  path: ${{ project.windows }}
                  packageid: ${{ project.windowsPackageId }}
                  configuration: ${{ project.windowsConfiguration }}
                provisionatorChannel: ${{ parameters.provisionatorChannel }}
                skipProvisioning: ${{ parameters.skipProvisioning }}
                agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
                artifactName: ${{ parameters.artifactName }}
                artifactItemPattern: ${{ parameters.artifactItemPattern }}
                useArtifacts: ${{ parameters.useArtifacts }}
