parameters:
  androidPool: { }
  iosPool: { }
  windowsPool: { }
  windowsBuildPool: { }
  macosPool: { }
  androidCompatibilityPool: { }
  iosCompatibilityPool: { }
  androidApiLevels: [ 30 ]
  iosVersions: [ 'latest' ]
  provisionatorChannel: 'latest'
  skipProvisioning: true
  agentPoolAccessToken: ''
  runCompatibilityTests: false
  categoryGroupsToTest:
    # Make sure that this list is always up-to-date with src/Controls/tests/TestCases.Shared.Tests/UITestCategories.cs
    # we might want to improve this somehow depending on how much the categories change over time
    - 'Accessibility,ActionSheet,ActivityIndicator,Animation,AppLinks'
    - 'Border,BoxView,Brush,Button'
    - 'CarouselView,Cells,CheckBox,CollectionView,ContextActions,CustomRenderers'
    - 'DatePicker,Dispatcher,DisplayAlert,DisplayPrompt,DragAndDrop'
    - 'Editor,Effects,Entry,FlyoutPage,Focus,Frame,Gestures,GraphicsView'
    - 'Image,ImageButton,IndicatorView,InputTransparent,IsEnabled,IsVisible'
    - 'Label,Layout,Lifecycle,ListView'
    - 'ManualReview,Maps,Navigation'
    - 'Page,Performance,Picker,ProgressBar'
    - 'RadioButton,RefreshView'
    - 'ScrollView,SearchBar,Shape,Shell,Slider,SoftInput,Stepper,Switch,SwipeView'
    - 'TabbedPage,TableView,TimePicker,TitleView,ToolbarItem'
    - 'ViewBaseTests,Visual,WebView,Window'

  projects:
    - name: name
      desc: Human Description
      android: /optional/path/to/android.csproj
      ios: /optional/path/to/ios.csproj
      winui: /optional/path/to/winui.csproj
      mac: /optional/path/to/mac.csproj
      app: /optional/path/to/app.csproj
      compatibilityAndroidApp: /optional/path/to/app.csproj
      compatibilityAndroidTestProject: /optional/path/to/android.csproj
      compatibilityiOSTestProject: /optional/path/to/ios.csproj
      compatibilityiOSApp: /optional/path/to/app.csproj

stages:
  - stage: build_ui_tests
    displayName: Build UITests Sample App
    dependsOn: []
    jobs:
      - job: build_ui_tests
        displayName: Build Sample App
        pool: ${{ parameters.androidPool }}
        variables:
          REQUIRED_XCODE: $(DEVICETESTS_REQUIRED_XCODE)
          APPIUM_HOME: $(System.DefaultWorkingDirectory)/.appium/
        steps:
          - template: ui-tests-build-sample.yml
            parameters:
                runtimeVariant: "Mono"
                skipProvisioning: ${{ parameters.skipProvisioning }}
  
  - ${{ if or(parameters.BuildEverything, and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['System.TeamProject'], 'devdiv'))) }}:
    - stage: build_ui_tests_nativeaot
      displayName: Build UITests Sample App NativeAOT
      dependsOn: []
      jobs:
        - job: build_ui_tests
          displayName: Build Sample App
          pool: ${{ parameters.androidPool }}
          variables:
            REQUIRED_XCODE: $(DEVICETESTS_REQUIRED_XCODE)
            APPIUM_HOME: $(System.DefaultWorkingDirectory)/.appium/
          steps:
            - template: ui-tests-build-sample.yml
              parameters:
                  runtimeVariant: "NativeAOT"
                  platform: ios
                  skipProvisioning: ${{ parameters.skipProvisioning }}

  - stage: build_ui_tests_windows
    displayName: Build UITests Windows Sample App
    dependsOn: []
    jobs:
      - job: build_ui_tests
        displayName: Build Sample App (Windows)
        pool: ${{ parameters.windowsBuildPool }}
        variables:
          APPIUM_HOME: $(System.DefaultWorkingDirectory)/.appium/
        steps:
          - template: ui-tests-build-sample.yml
            parameters:
                platform: windows
                skipProvisioning: ${{ parameters.skipProvisioning }}

  - stage: android_ui_tests
    displayName: Android UITests
    dependsOn: build_ui_tests
    jobs:
      - ${{ each project in parameters.projects }}:
        - ${{ if ne(project.android, '') }}:
          - ${{ each api in parameters.androidApiLevels }}:
            - ${{ if not(containsValue(project.androidApiLevelsExclude, api)) }}:
              - job: android_ui_tests_${{ project.name }}_${{ api }}
                strategy:
                  matrix:
                    ${{ each categoryGroup in parameters.categoryGroupsToTest }}:
                      ${{ categoryGroup }}:
                        CATEGORYGROUP: ${{ categoryGroup }}
                timeoutInMinutes: 240 # how long to run the job before automatically cancelling
                workspace:
                  clean: all
                displayName: ${{ coalesce(project.desc, project.name) }} (API ${{ api }})
                pool: ${{ parameters.androidPool }}
                variables:
                  REQUIRED_XCODE: $(DEVICETESTS_REQUIRED_XCODE)
                  APPIUM_HOME: $(System.DefaultWorkingDirectory)/.appium/
                steps:
                  - template: ui-tests-steps.yml
                    parameters:
                      platform: android
                      version: ${{ api }}
                      path: ${{ project.android }}
                      app: ${{ project.app }}
                      ${{ if eq(api, 27) }}:
                        device: android-emulator-32_${{ api }}
                      ${{ if not(eq(api, 27)) }}:
                        device: android-emulator-64_${{ api }}
                      provisionatorChannel: ${{ parameters.provisionatorChannel }}
                      agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
                      testFilter: $(CATEGORYGROUP)
                      skipProvisioning: ${{ parameters.skipProvisioning }}

  - stage: ios_ui_tests_mono
    displayName: iOS UITests Mono
    dependsOn: build_ui_tests
    jobs:
      - ${{ each project in parameters.projects }}:
        - ${{ if ne(project.ios, '') }}:
          - ${{ each version in parameters.iosVersions }}:
            - ${{ if not(containsValue(project.iosVersionsExclude, version)) }}:
              - job: ios_ui_tests_mono_${{ project.name }}_${{ replace(version, '.', '_') }}
                strategy:
                  matrix:
                    ${{ each categoryGroup in parameters.categoryGroupsToTest }}:
                      ${{ categoryGroup }}:
                        CATEGORYGROUP: ${{ categoryGroup }}
                timeoutInMinutes: 240 # how long to run the job before automatically cancelling
                workspace:
                  clean: all
                displayName: ${{ coalesce(project.desc, project.name) }} (v${{ version }})
                pool: ${{ parameters.iosPool }}
                variables:
                  REQUIRED_XCODE: $(DEVICETESTS_REQUIRED_XCODE)
                  APPIUM_HOME: $(System.DefaultWorkingDirectory)/.appium/
                steps:
                  - template: ui-tests-steps.yml
                    parameters:
                      platform: ios
                      ${{ if eq(version, 'latest') }}:
                        version: 16.4
                      ${{ if ne(version, 'latest') }}:
                        version: ${{ version }}
                      path: ${{ project.ios }}
                      app: ${{ project.app }}
                      ${{ if eq(version, 'latest') }}:
                        device: ios-simulator-64
                      ${{ if ne(version, 'latest') }}:
                        device: ios-simulator-64_${{ version }}
                      provisionatorChannel: ${{ parameters.provisionatorChannel }}
                      agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
                      runtimeVariant : "Mono"
                      testFilter: $(CATEGORYGROUP)
                      skipProvisioning: ${{ parameters.skipProvisioning }}

  - stage: ios_ui_tests_mono_cv2
    displayName: iOS UITests Mono CollectionView2
    dependsOn: build_ui_tests
    jobs:
      - ${{ each project in parameters.projects }}:
        - ${{ if ne(project.ios, '') }}:
          - ${{ each version in parameters.iosVersions }}:
            - ${{ if not(containsValue(project.iosVersionsExclude, version)) }}:
              - job: ios_ui_tests_mono_${{ project.name }}_${{ replace(version, '.', '_') }}
                timeoutInMinutes: 240 # how long to run the job before automatically cancelling
                workspace:
                  clean: all
                displayName: ${{ coalesce(project.desc, project.name) }} (v${{ version }})
                pool: ${{ parameters.iosPool }}
                variables:
                  REQUIRED_XCODE: $(DEVICETESTS_REQUIRED_XCODE)
                  APPIUM_HOME: $(System.DefaultWorkingDirectory)/.appium/
                steps:
                  - template: ui-tests-steps.yml
                    parameters:
                      platform: ios
                      ${{ if eq(version, 'latest') }}:
                        version: 16.4
                      ${{ if ne(version, 'latest') }}:
                        version: ${{ version }}
                      path: ${{ project.ios }}
                      app: ${{ project.app }}
                      ${{ if eq(version, 'latest') }}:
                        device: ios-simulator-64
                      ${{ if ne(version, 'latest') }}:
                        device: ios-simulator-64_${{ version }}
                      provisionatorChannel: ${{ parameters.provisionatorChannel }}
                      agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
                      runtimeVariant : "Mono"
                      testFilter: "CollectionView"
                      testConfigurationArgs: "CollectionView2"
                      skipProvisioning: ${{ parameters.skipProvisioning }}

  - ${{ if or(parameters.BuildEverything, and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['System.TeamProject'], 'devdiv'))) }}:
    - stage: ios_ui_tests_nativeaot
      displayName: iOS UITests NativeAOT
      dependsOn: build_ui_tests_nativeaot
      jobs:
        - ${{ each project in parameters.projects }}:
          - ${{ if ne(project.ios, '') }}:
            - ${{ each version in parameters.iosVersions }}:
              - ${{ if not(containsValue(project.iosVersionsExclude, version)) }}:
                - job: ios_ui_tests_nativeaot_${{ project.name }}_${{ replace(version, '.', '_') }}
                  strategy:
                    matrix:
                      ${{ each categoryGroup in parameters.categoryGroupsToTest }}:
                        ${{ categoryGroup }}:
                          CATEGORYGROUP: ${{ categoryGroup }}
                  timeoutInMinutes: 240 # how long to run the job before automatically cancelling
                  workspace:
                    clean: all
                  displayName: ${{ coalesce(project.desc, project.name) }} (v${{ version }})
                  pool: ${{ parameters.iosPool }}
                  variables:
                    REQUIRED_XCODE: $(DEVICETESTS_REQUIRED_XCODE)
                    APPIUM_HOME: $(System.DefaultWorkingDirectory)/.appium/
                  steps:
                    - template: ui-tests-steps.yml
                      parameters:
                        platform: ios
                        ${{ if eq(version, 'latest') }}:
                          version: 17.2
                        ${{ if ne(version, 'latest') }}:
                          version: ${{ version }}
                        path: ${{ project.ios }}
                        app: ${{ project.app }}
                        ${{ if eq(version, 'latest') }}:
                          device: ios-simulator-64
                        ${{ if ne(version, 'latest') }}:
                          device: ios-simulator-64_${{ version }}
                        provisionatorChannel: ${{ parameters.provisionatorChannel }}
                        agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
                        runtimeVariant : "NativeAOT"
                        testFilter: $(CATEGORYGROUP)
                        skipProvisioning: ${{ parameters.skipProvisioning }}

  - stage: winui_ui_tests
    displayName: WinUI UITests
    dependsOn: build_ui_tests_windows
    jobs:
      - ${{ each project in parameters.projects }}:
        - ${{ if ne(project.winui, '') }}:
              - job: winui_ui_tests_${{ project.name }}
                strategy:
                  matrix:
                    ${{ each categoryGroup in parameters.categoryGroupsToTest }}:
                      ${{ categoryGroup }}:
                        CATEGORYGROUP: ${{ categoryGroup }}
                timeoutInMinutes: 240 # how long to run the job before automatically cancelling
                workspace:
                  clean: all
                displayName: ${{ coalesce(project.desc, project.name) }}
                pool: ${{ parameters.windowsPool }}
                variables:
                  APPIUM_HOME: $(System.DefaultWorkingDirectory)\.appium\
                steps:
                  - template: ui-tests-steps.yml
                    parameters:
                      platform: windows
                      version: "10.0.19041.0"
                      device: windows10
                      path: ${{ project.winui }}
                      app: ${{ project.app }}
                      provisionatorChannel: ${{ parameters.provisionatorChannel }}
                      agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
                      testFilter: $(CATEGORYGROUP)
                      skipProvisioning: ${{ parameters.skipProvisioning }}

  - stage: mac_ui_tests
    displayName: macOS UITests
    dependsOn: build_ui_tests
    jobs:
      - ${{ each project in parameters.projects }}:
        - ${{ if ne(project.mac, '') }}:
              - job: mac_ui_tests_${{ project.name }}
                strategy:
                  matrix:
                    ${{ each categoryGroup in parameters.categoryGroupsToTest }}:
                      ${{ categoryGroup }}:
                        CATEGORYGROUP: ${{ categoryGroup }}
                timeoutInMinutes: 240 # how long to run the job before automatically cancelling
                workspace:
                  clean: all
                displayName: ${{ coalesce(project.desc, project.name) }}
                pool: ${{ parameters.macosPool }}
                variables:
                  REQUIRED_XCODE: $(DEVICETESTS_REQUIRED_XCODE)
                  APPIUM_HOME: $(System.DefaultWorkingDirectory)/.appium/
                steps:
                  - template: ui-tests-steps.yml
                    parameters:
                      platform: catalyst
                      version: "13.1"
                      device: mac
                      path: ${{ project.mac }}
                      app: ${{ project.app }}
                      provisionatorChannel: ${{ parameters.provisionatorChannel }}
                      agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
                      testFilter: $(CATEGORYGROUP)
                      skipProvisioning: ${{ parameters.skipProvisioning }}

  - ${{ if eq(parameters.runCompatibilityTests, true) }}:  
    - stage: android_compatibility_ui_tests
      displayName: Android Compatibility UITests
      dependsOn: []
      jobs:
        - ${{ each project in parameters.projects }}:
          - ${{ if ne(project.android, '') }}:
            - ${{ each api in parameters.androidApiLevels }}:
              - ${{ if not(containsValue(project.androidApiLevelsExclude, api)) }}:
                - job: android_compatibility_ui_tests_${{ project.name }}_${{ api }}
                  timeoutInMinutes: 240
                  workspace:
                    clean: all
                  displayName: ${{ coalesce(project.desc, project.name) }} (API ${{ api }})
                  pool: ${{ parameters.androidCompatibilityPool }}
                  variables:
                    REQUIRED_XCODE: $(DEVICETESTS_REQUIRED_XCODE)
                  steps:
                    - template: ui-tests-compatibility-steps.yml
                      parameters:
                        platform: android
                        provisionPlatform: macos
                        configuration: Debug
                        version: ${{ api }}
                        path: ${{ project.compatibilityAndroidTestProject }}
                        app: ${{ project.compatibilityAndroidApp }}
                        targetSample: "dotnet-legacy-controlgallery-android"
                        ${{ if eq(api, 27) }}:
                          DEVICE: android-emulator-32_${{ api }}
                        ${{ if not(eq(api, 27)) }}:
                          DEVICE: android-emulator-64_${{ api }}
                        provisionatorChannel: ${{ parameters.provisionatorChannel }}
                        agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
                        skipProvisioning: ${{ parameters.skipProvisioning }}

    - stage: ios_compatibility_ui_tests
      displayName: iOS Compatibility UITests
      dependsOn: []
      jobs:
        - ${{ each project in parameters.projects }}:
          - ${{ if ne(project.ios, '') }}:
            - ${{ each version in parameters.iosVersions }}:
              - ${{ if not(containsValue(project.iosVersionsExclude, version)) }}:
                - job: ios_compatibility_ui_tests_${{ project.name }}_${{ replace(version, '.', '_') }}
                  timeoutInMinutes: 240
                  workspace:
                    clean: all
                  displayName: ${{ coalesce(project.desc, project.name) }} (v${{ version }})
                  pool: ${{ parameters.iosCompatibilityPool }}
                  variables:
                    REQUIRED_XCODE: $(DEVICETESTS_REQUIRED_XCODE)
                  steps:
                    - template: ui-tests-compatibility-steps.yml
                      parameters:
                        platform: ios
                        provisionPlatform: macos
                        configuration: Debug
                        ${{ if eq(version, 'latest') }}:
                          version: 16.2
                        ${{ if ne(version, 'latest') }}:
                          version: ${{ version }}
                        path: ${{ project.compatibilityiOSTestProject }}
                        app: ${{ project.compatibilityiOSApp }}
                        targetSample: "dotnet-legacy-controlgallery-ios"
                        ${{ if eq(version, 'latest') }}:
                          device: ios-simulator-64
                        ${{ if ne(version, 'latest') }}:
                          device: ios-simulator-64_${{ version }}
                        provisionatorChannel: ${{ parameters.provisionatorChannel }}
                        agentPoolAccessToken: ${{ parameters.agentPoolAccessToken }}
                        skipProvisioning: ${{ parameters.skipProvisioning }}