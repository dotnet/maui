parameters:
  jdkFolder: '$(JAVA_HOME_17_X64)'
  jdkMajorVersion: 17

steps:
# Setup JDK Paths (gradle needs it)
- bash: |
    if [ -n "${{ parameters.jdkFolder }}" ]; then
      jdkPath="${{ parameters.jdkFolder }}"
      echo "Using provided JDK folder: $jdkPath"
    else
      echo "Installed JDKs:"
      /usr/libexec/java_home -V
      jdkPath=$(/usr/libexec/java_home -V 2>&1 | grep -E "${{ parameters.jdkMajorVersion }}.*jdk" | head -n 1 | awk '{print $NF}')
      if [ -n "$jdkPath" ]; then
        echo "Found JDK path: $jdkPath"
      else
        echo "Unable to find JDK ${{ parameters.jdkMajorVersion }}"
        exit 1
      fi
    fi
    echo "##vso[task.setvariable variable=JI_JAVA_HOME]$jdkPath"
    echo "##vso[task.setvariable variable=JAVA_HOME]$jdkPath"
    echo "JAVA_HOME set to '$jdkPath'"
  displayName: Setup JDK ${{ parameters.jdkMajorVersion }} Paths
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Darwin'))

- pwsh: |
    if ('${{ parameters.jdkFolder }}') {
      $env:JAVA_HOME = '${{ parameters.jdkFolder }}'
    } else {
      $path = (Get-ChildItem $env:ProgramFiles\Microsoft\jdk-${{ parameters.jdkMajorVersion }}.*\bin\java.exe) | Select-Object -First 1
      if ($path -and (Test-Path $path)) {
        $env:JAVA_HOME = $path.Directory.Parent.FullName
      }
    }
    if ($env:JAVA_HOME) {
      echo "##vso[task.setvariable variable=JAVA_HOME]$env:JAVA_HOME"
      echo "JAVA_HOME set to '$env:JAVA_HOME'"
    } else {
      echo "Unable to set JAVA_HOME"
      exit 1
    }
  displayName: Setup JDK ${{ parameters.jdkMajorVersion }} Paths
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))
