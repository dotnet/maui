parameters:
  platform: '' # [ android, ios, catalyst, windows ]
  path: '' # path to csproj
  device: '' # the xharness device to use
  apiversion: '' # the iOS device api version to use
  cakeArgs: '' # additional cake args
  deviceTestConfiguration: '' # Indicates the configuration to use for Android. We're slowly enabling this for all projects
  provisionatorChannel: 'latest'
  agentPoolAccessToken: ''
  artifactName: 'nuget'
  artifactItemPattern: '**/*.nupkg'
  checkoutDirectory: $(System.DefaultWorkingDirectory)
  useArtifacts: false
  skipProvisioning: true
  targetFrameworkVersion: ''
  appArtifactName: ''

steps:

  ##################################################
  #               Provision Machine                #
  ##################################################

  - ${{ if and(eq(parameters.platform, 'ios'), ne(parameters.poolName, 'Azure Pipelines')) }}:
    - bash: |
        chmod +x $(System.DefaultWorkingDirectory)/eng/scripts/clean-bot.sh
        chmod +x $(System.DefaultWorkingDirectory)/eng/scripts/clean-simulator-runtime.sh
        $(System.DefaultWorkingDirectory)/eng/scripts/clean-bot.sh
      displayName: 'Clean bot'
      continueOnError: true
      timeoutInMinutes: 60

  - template: provision.yml
    parameters:
      skipXcode: ${{ or(eq(parameters.platform, 'android'), eq(parameters.platform, 'windows')) }}
      skipJdk: ${{ ne(parameters.platform, 'android') }}
      skipAndroidCommonSdks: ${{ ne(parameters.platform, 'android') }}
      skipAndroidPlatformApis: ${{ ne(parameters.platform, 'android') }}
      onlyAndroidPlatformDefaultApis: true
      skipAndroidEmulatorImages: true
      skipAndroidCreateAvds: true
      provisionatorChannel: ${{ parameters.provisionatorChannel }}
      ${{ if eq(parameters.skipProvisioning, false) }}:
        skipProvisionator : false
        gitHubToken: $(github--pat--vs-mobiletools-engineering-service2)


  ##################################################
  #                Provision .NET                  #
  ##################################################

  - pwsh: ./build.ps1 --target=dotnet --configuration="Release" --verbosity=diagnostic
    displayName: 'Install .NET'
    retryCountOnTaskFailure: 3
    env:
      DOTNET_TOKEN: $(dotnetbuilds-internal-container-read-token)
      PRIVATE_BUILD: $(PrivateBuild)

  - pwsh: echo "##vso[task.prependpath]$(DotNet.Dir)"
    displayName: 'Add .NET to PATH'


  ##################################################
  #                 Prepare Build                  #
  ##################################################

  - ${{ if eq(parameters.useArtifacts, true) }}:

    - task: DownloadBuildArtifacts@0
      displayName: 'Download Packages'
      inputs:
        artifactName: ${{ parameters.artifactName }}
        itemPattern: ${{ parameters.artifactItemPattern }}
        downloadPath: ${{ parameters.checkoutDirectory }}/artifacts

    - pwsh: Move-Item -Path artifacts\${{ parameters.artifactName }}\*.nupkg -Destination artifacts -Force
      displayName: Move the downloaded artifacts

    - pwsh: ./build.ps1 --target=dotnet-local-workloads --verbosity=diagnostic
      displayName: 'Install .NET (Local Workloads)'
      retryCountOnTaskFailure: 2
      workingDirectory: ${{ parameters.checkoutDirectory }}
      env:
        DOTNET_TOKEN: $(dotnetbuilds-internal-container-read-token)
        PRIVATE_BUILD: $(PrivateBuild)

  - ${{ else }}:

    - pwsh: ./build.ps1 --target=dotnet-buildtasks --configuration="Release"
      displayName: 'Build the MSBuild Tasks'


  ##################################################
  #                     Build                      #
  ##################################################

  - script: ./build.ps1 -Script eng/devices/${{ parameters.platform }}.cake --target=build --project="${{ parameters.path }}" --binlog="$(LogDirectory)" --configuration="${{ parameters.deviceTestConfiguration }}" --targetFrameworkVersion="${{ parameters.targetFrameworkVersion }}" ${{ parameters.cakeArgs }}
    displayName: Build
    workingDirectory: ${{ parameters.checkoutDirectory }}
    retryCountOnTaskFailure: 1


  ##################################################
  #                    Publish                     #
  ##################################################

  - publish: ${{ parameters.checkoutDirectory }}/artifacts/bin
    displayName: Publish Artifacts
    condition: always()
    artifact: ${{ parameters.appArtifactName }}
