parameters:
  poolName: VSEngSS-MicroBuild2022-1ES
  vmImage: ''
  os: windows 
  pushMauiPackagesToMaestro: false
  nugetArtifactName: nuget-signed
  nugetArtifactPath: $(Build.StagingDirectory)\nuget-signed
  dropRetentionDays: 120

jobs:
- job: create_artifact_statuses
  displayName: Publish symbols and Push to Maestro
  timeoutInMinutes: 60
  pool:
    name: ${{ parameters.poolName }}
    image: ${{ parameters.vmImage }}
    os: ${{ parameters.os }}
  templateContext:
    outputs:
    - output: artifactsDrop
      dropServiceURI: https://devdiv.artifacts.visualstudio.com/DefaultCollection
      buildNumber: $(ReleaseDropPrefix)/symbols
      dropMetadataContainerName: DropMetadata-shipping-symbols
      sourcePath: $(Build.StagingDirectory)\symbols
      retentionDays: ${{ parameters.dropRetentionDays }}
      toLowerCase: false
  steps:
  - checkout: self

  # Download symbols to be published to the symbols artifact drop declared above
  - task: DownloadPipelineArtifact@2
    inputs:
      artifactName: nuget
      downloadPath: $(Build.StagingDirectory)\symbols
      patterns: |
        **/*.snupkg
        **/additional-assets.zip
    displayName: Download symbols

  - task: DownloadPipelineArtifact@2
    inputs:
      artifactName: DropMetadata-shipping-nugets
      downloadPath: $(Build.StagingDirectory)\metadata
    displayName: Download nugets drop metadata

  - powershell: |
      $jsonContent = Get-Content -Path "$(Build.StagingDirectory)\metadata\VSTSDrop.json" -Raw | ConvertFrom-Json
      $dropPrefix = $jsonContent.VstsDropBuildArtifact.VstsDropUrl -replace 'https://devdiv.artifacts.visualstudio.com/DefaultCollection/_apis/drop/drops/' -replace '/nugets'
      Write-Host "##vso[task.setvariable variable=ReleaseDropPrefix]$dropPrefix"
    displayName: Set variable ReleaseDropPrefix

  # Download nugets drop created by nuget-msi-convert/job/v4.yml and publish to maestro
  - task: ms-vscs-artifact.build-tasks.artifactDropDownloadTask-1.artifactDropDownloadTask@1
    displayName: Download $(ReleaseDropPrefix)/nugets
    inputs:
      dropServiceURI: https://devdiv.artifacts.visualstudio.com/DefaultCollection
      buildNumber: $(ReleaseDropPrefix)/nugets
      destinationPath: ${{ parameters.nugetArtifactPath }}

  - task: UseDotNet@2                 # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/tool/dotnet-core-tool-installer?view=azure-devops
    displayName: 'Use .NET SDK $(DOTNET_VERSION)'
    inputs:
      packageType: sdk
      version: $(DOTNET_VERSION)
      includePreviewVersions: true

  - task: AzureCLI@2
    displayName: Generate and publish BAR manifest
    inputs:
      azureSubscription: "Darc: Maestro Production"
      scriptType: ps
      scriptLocation: inlineScript
      inlineScript: >-
        dotnet build $(Build.SourcesDirectory)\src\Workload\Microsoft.Maui.Sdk\Microsoft.Maui.Sdk.csproj
        -t:PushManifestToBuildAssetRegistry
        -p:OfficialBuildId=$(_BuildOfficalId)
        -p:OutputPath=${{ parameters.nugetArtifactPath }}
        -v:n -bl:$(Build.StagingDirectory)\binlogs\push-bar-manifest.binlog
    condition: and(succeeded(), eq('${{ parameters.pushMauiPackagesToMaestro }}', 'true'))

  - task: AzureCLI@2
    inputs:
      azureSubscription: "Darc: Maestro Production"
      scriptType: ps
      scriptLocation: inlineScript
      inlineScript: |
        $versionEndpoint = 'https://maestro.dot.net/api/assets/darc-version?api-version=2019-01-16'
        $darcVersion = $(Invoke-WebRequest -Uri $versionEndpoint -UseBasicParsing).Content
        $arcadeServicesSource = 'https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-eng/nuget/v3/index.json'
        & dotnet tool update microsoft.dotnet.darc --version "$darcVersion" --add-source "$arcadeServicesSource" --tool-path $(Agent.ToolsDirectory)\darc -v n
        & $(Agent.ToolsDirectory)\darc\darc add-build-to-channel --default-channels --id $(BARBuildId) --ci --publishing-infra-version 3 --azdev-pat $(System.AccessToken)
    displayName: Add build to default darc channel
    condition: and(succeeded(), eq('${{ parameters.pushMauiPackagesToMaestro }}', 'true'))
