trigger:
  batch: true
  branches:
    include:
    - main
    - release/*
  paths:
    include:
      - '*'
    exclude:
      - '**.md'
      - eng/Version.Details.xml
      - .github/*
      - docs/*
      - LICENSE.TXT
      - PATENTS.TXT
      - THIRD-PARTY-NOTICES.TXT

pr:
  branches:
    include:
    - main
    - release/*
    - feature/*
  paths:
    include:
      - '*'
    exclude:
      - '**.md'
      - eng/Version.Details.xml
      - .github/*
      - docs/*
      - LICENSE.TXT
      - PATENTS.TXT
      - THIRD-PARTY-NOTICES.TXT

variables:
  - template: /eng/pipelines/common/variables.yml@self
  - template: /eng/common/templates/variables/pool-providers.yml
  - template: /eng/pipelines/arcade/variables.yml@self

parameters:
  - name: VM_IMAGE_HOST
    type: object
    default:
      name: NetCore-Public
      image: 1es-windows-2022
      os: windows

  - name: PackPlatform
    type: object
    default:
      name: Windows
      artifact: nuget
      binariesArtifact: pack-binaries
      metadataArtifact: metadata
      logsArtifact: logs
      docsArtifact: xml-docs
      artifactsPath: '$(Build.ArtifactStagingDirectory)'

stages:
- stage: Pack
  displayName: Pack .NET MAUI
  dependsOn: []
  jobs:
    - template: /eng/common/templates-official/jobs/jobs.yml@self
      parameters:
        enableMicrobuild: true
        helixRepo: dotnet/maui
        pool: ${{ parameters.VM_IMAGE_HOST }}
        enablePublishUsingPipelines: true
        enablePublishBuildAssets: true
        enableTelemetry: true
        enableSourceBuild: false
        enableSourceIndex: false
        publishAssetsImmediately: true
        # Publish build logs
        enablePublishBuildArtifacts: true
        # Publish test logs
        enablePublishTestResults: true
        workspace:
          clean: all
        jobs:
        - job: pack_net_${{ parameters.PackPlatform.name }}
          displayName: ${{ parameters.PackPlatform.name }}
          timeoutInMinutes: 240
          preSteps:
            - checkout: self
              fetchDepth: 1
              clean: true
          steps:
            - template: /eng/pipelines/arcade/pack.yml@self
              parameters:
                dotnetScript: $(Build.SourcesDirectory)/dotnet.cmd
                buildScript: $(_buildScript)
                buildConfig: $(_BuildConfig)
                repoArtifactsPath: $(Build.Arcade.ArtifactsPath)
                repoLogPath: $(Build.Arcade.LogsPath)
                repoTestResultsPath: $(Build.Arcade.TestResultsPath)
                isWindows: true
                runAsPublic: ${{ eq(variables['_RunAsPublic'], 'true') }}
                publishTaskPrefix: ''

- stage: UnitTests
  displayName: Run Unit Tests
  dependsOn: []
  jobs:
  - template: /eng/pipelines/arcade/job-unit-tests.yml@self
    parameters:
      testOS: Windows
      jobName: win_unit_tests
      jobDisplayName: Windows Unit Tests
      pool: ${{ parameters.VM_IMAGE_HOST }}
  - template: /eng/pipelines/arcade/job-unit-tests.yml@self
    parameters:
      testOS: macOS
      jobName: mac_unit_tests
      jobDisplayName: macOS Unit Tests
      pool:
        name: Azure Pipelines
        vmImage: $(HostedMacImage)
        os: macOS

- stage: SampleTests
  displayName: Run Sample Tests
  dependsOn: [ 'Pack' ]
  jobs:
  - template: /eng/pipelines/arcade/job-sample-tests.yml@self
    parameters:
      testOS: Windows
      jobName: win_sample_tests
      jobDisplayName: Windows Sample Tests
      pool: ${{ parameters.VM_IMAGE_HOST }}
  - template: /eng/pipelines/arcade/job-sample-tests.yml@self
    parameters:
      testOS: macOS
      jobName: mac_sample_tests
      jobDisplayName: macOS Sample Tests
      pool:
        name: Azure Pipelines
        vmImage: $(HostedMacImage)
        os: macOS

