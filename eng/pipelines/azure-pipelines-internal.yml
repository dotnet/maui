trigger:
  branches:
    include:
    - main
    - net9.0
    - release/*
  tags:
    include:
    - '*'
  paths:
    include:
    - '*'
    exclude:
    - .github/*
    - docs/*
    - CODE-OF-CONDUCT.md
    - CONTRIBUTING.md
    - LICENSE.TXT
    - PATENTS.TXT
    - README.md
    - SECURITY.md
    - THIRD-PARTY-NOTICES.TXT

schedules:
- cron: "0 5 * * *"
  displayName: Run daily at 5:00 UTC
  branches:
    include:
    - main
    - net9.0
    
variables:
  - template: /eng/pipelines/common/variables.yml@self
  - template: /eng/common/templates-official/variables/pool-providers.yml@self
  - template: /eng/pipelines/arcade/variables.yml@self
  - group: DotNetBuilds storage account read tokens
  - group: AzureDevOps-Artifact-Feeds-Pats

parameters:
  - name: enableSourceIndex
    type: boolean
    default: true

  - name: VM_IMAGE_HOST
    type: object
    default:
      name: NetCore1ESPool-Internal
      image: 1es-windows-2022
      os: windows

  - name: PackPlatform
    type: object
    default:
      name: Windows
      artifact: nuget
      binariesArtifact: pack-binaries
      metadataArtifact: metadata
      logsArtifact: logs
      docsArtifact: xml-docs
      artifactsPath: '$(Build.ArtifactStagingDirectory)'

resources:
  repositories:
    - repository: 1ESPipelineTemplates
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

extends:
  ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
    template: v1/1ES.Official.PipelineTemplate.yml@1esPipelines
  ${{ else }}:
    template: v1/1ES.Unofficial.PipelineTemplate.yml@1esPipelines
  parameters:
    pool: ${{ parameters.VM_IMAGE_HOST }}
    sdl:
      binskim:
        scanOutputDirectoryOnly: true
      codeql:
        runSourceLanguagesInSourceAnalysis: true
      policheck:
        enabled: true
      spotBugs:
        enabled: false
        justification: 'Failing with "Could not successfully find the java tool launcher"'
      sourceRepositoriesToScan:
        exclude:
        - repository: yaml-templates
      suppression:
        suppressionFile: $(Build.SourcesDirectory)\eng\automation\guardian\source.gdnsuppress
    stages:
    - stage: Pack
      displayName: Pack .NET MAUI
      dependsOn: []
      jobs:
      - template: /eng/common/templates-official/jobs/jobs.yml@self
        parameters:
          enableMicrobuild: true
          helixRepo: dotnet/maui
          pool: ${{ parameters.VM_IMAGE_HOST }}
          enablePublishUsingPipelines: true
          enablePublishBuildAssets: true
          enableTelemetry: true
          enableSourceBuild: false
          enableSourceIndex: ${{ parameters.enableSourceIndex }}
          sourceIndexParams:
            sourceIndexBuildCommand: build.cmd -restore -build -ci -warnAsError 0 /bl:$(Build.Arcade.LogsPath)sourceIndexBuild.binlog /p:OfficialBuildId=$(_BuildOfficalId) /p:_SkipUpdateBuildNumber=true
            binlogPath: $(Build.Arcade.LogsPath)sourceIndexBuild.binlog
          publishAssetsImmediately: true
          # Publish build logs
          enablePublishBuildArtifacts: true
          # Publish test logs
          enablePublishTestResults: true
          workspace:
            clean: all
          jobs:
          - job: pack_net_${{ parameters.PackPlatform.name }}
            displayName: ${{ parameters.PackPlatform.name }}
            timeoutInMinutes: 240
           
            # templateContext:
            #    outputs:
            #     - output: pipelineArtifact
            #       displayName: 'Publish the ${{ parameters.PackPlatform.artifact }} artifacts'
            #       artifactName: ${{ parameters.PackPlatform.artifact }}
            #       targetPath: '${{ parameters.PackPlatform.artifactsPath }}/nuget'
                
            #     - output: pipelineArtifact
            #       displayName: 'Publish the ${{ parameters.PackPlatform.binariesArtifact }} artifacts'
            #       artifactName: ${{ parameters.PackPlatform.binariesArtifact }}
            #       targetPath: '$(System.DefaultWorkingDirectory)/artifacts/binaries'

            #     - output: pipelineArtifact
            #       displayName: 'Publish the ${{ parameters.PackPlatform.docsArtifact }} artifacts'
            #       artifactName: ${{ parameters.PackPlatform.docsArtifact }}
            #       targetPath: '$(System.DefaultWorkingDirectory)/artifacts/docs-packs'

            #     - output: pipelineArtifact
            #       displayName: 'Publish the ${{ parameters.PackPlatform.metadataArtifact }} artifacts'
            #       artifactName: ${{ parameters.PackPlatform.metadataArtifact }}
            #       targetPath: '${{ parameters.PackPlatform.artifactsPath }}/metadata'

            #     - output: pipelineArtifact
            #       displayName: 'Publish the ${{ parameters.PackPlatform.logsArtifact }} artifacts'
            #       artifactName: ${{ parameters.PackPlatform.logsArtifact }}
            #       targetPath: '${{ parameters.PackPlatform.artifactsPath }}/logs'
        
            variables:
            preSteps:
              - checkout: self
                fetchDepth: 1
                clean: true
            steps:
              - template: /eng/pipelines/arcade/pack.yml@self
                parameters:
                  dotnetScript: $(Build.SourcesDirectory)/dotnet.cmd
                  buildScript: $(_buildScript)
                  buildConfig: $(_BuildConfig)
                  repoArtifactsPath: $(Build.Arcade.ArtifactsPath)
                  repoLogPath: $(Build.Arcade.LogsPath)
                  repoTestResultsPath: $(Build.Arcade.TestResultsPath)
                  isWindows: true
                  runAsPublic: ${{ eq(variables['_RunAsPublic'], 'true') }}

      # Publish and validation steps. Only run in official builds
    - template: /eng/common/templates-official/post-build/post-build.yml@self
      parameters:
        publishingInfraVersion: 3
        enableSymbolValidation: true
        enableSigningValidation: false
        # Disable for now as we test the new signing process
        enableSourceLinkValidation: false
        validateDependsOn:
        - Pack
        publishDependsOn:
        - Validate
        # This is to enable SDL runs part of Post-Build Validation Stage
        SDLValidationParameters:
          enable: false

    - stage: UnitTests
      displayName: Run Unit Tests
      dependsOn: []
      jobs:
      - template: /eng/pipelines/arcade/job-unit-tests.yml@self
        parameters:
          testOS: Windows
          jobName: win_msbuild_tests
          jobDisplayName: Windows Unit Tests
          pool: ${{ parameters.VM_IMAGE_HOST }}

      - template: /eng/pipelines/arcade/job-unit-tests.yml@self
        parameters:
          testOS: macOS
          jobName: mac_unit_tests
          jobDisplayName: macOS Unit Tests
          pool:
            name: Azure Pipelines
            image: $(HostedMacImage)
            os: macOS
