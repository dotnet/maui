trigger:
  batch: true
  branches:
    include:
    - main
    - net10.0
    - release/*
    - inflight/*
  paths:
    include:
    - '*'
    exclude:
    - '**.md'
    - eng/Version.Details.xml
    - .github/*
    - docs/*
    - LICENSE.TXT
    - PATENTS.TXT
    - THIRD-PARTY-NOTICES.TXT

pr:
  branches:
    include:
    - main
    - net10.0
    - release/*
    - inflight/*
  paths:
    include:
    - '*'
    exclude:
    - '**.md'
    - eng/Version.Details.xml
    - .github/*
    - docs/*
    - LICENSE.TXT
    - PATENTS.TXT
    - THIRD-PARTY-NOTICES.TXT

variables:
- template: /eng/common/templates/variables/pool-providers.yml@self
- template: /eng/pipelines/common/variables.yml@self
- template: /eng/pipelines/arcade/variables.yml@self

# Centralized configuration based on pipeline type
- name: IsPublicBuild
  value: ${{ eq(variables['Build.DefinitionName'], 'maui-pr') }}

parameters:
- name: BuildConfigurations
  type: object
  default:
  - Debug
  - Release

# Simplified pool definitions - will be selected based on pipeline type
- name: WindowsPool
  type: object
  default:
    internal:
      name: NetCore1ESPool-Internal
      image: 1es-windows-2022
      os: windows
    public:
      name: NetCore-Public
      image: 1es-windows-2022
      os: windows

- name: MacPool
  type: object
  default:
    name: Azure Pipelines
    vmImage: $(HostedMacImage)
    os: macOS

stages:

# Helix Tests Stage
- template: /eng/pipelines/arcade/stage-helix-tests.yml@self
  parameters:
    ${{ if eq(variables['Build.DefinitionName'], 'maui-pr') }}:
      helixPool: ${{ parameters.WindowsPool.public }}
      runAsPublic: true
      helixInternal: 'False'
    ${{ else }}:
      helixPool: ${{ parameters.WindowsPool.internal }}
      runAsPublic: false
      helixInternal: 'True'
      HelixAccessToken: $(HelixApiAccessToken)
    prepareSteps:
    - template: /eng/pipelines/common/provision.yml@self
      parameters:
        checkoutDirectory: '$(System.DefaultWorkingDirectory)'
        skipJdk: false
        skipAndroidCommonSdks: false
        skipAndroidPlatformApis: false
        onlyAndroidPlatformDefaultApis: true
        skipAndroidEmulatorImages: true
        skipAndroidCreateAvds: true
        skipProvisioning: true
        skipXcode: true

# Pack Stage  
- template: /eng/pipelines/arcade/stage-pack.yml@self
  parameters:
    ${{ if eq(variables['Build.DefinitionName'], 'maui-pr') }}:
      pool: ${{ parameters.WindowsPool.public }}
      runAsPublic: true
    ${{ else }}:
      pool: ${{ parameters.WindowsPool.internal }}
      runAsPublic: false
    prepareSteps:
    - template: /eng/pipelines/common/provision.yml@self
      parameters:
        checkoutDirectory: '$(System.DefaultWorkingDirectory)'
        skipJdk: false
        skipAndroidCommonSdks: false
        skipAndroidPlatformApis: false
        onlyAndroidPlatformDefaultApis: true
        skipAndroidEmulatorImages: true
        skipAndroidCreateAvds: true
        skipProvisioning: true
        skipXcode: true

# Build Stage
- template: /eng/pipelines/arcade/stage-build.yml@self
  parameters:
    buildConfigurations: ${{ parameters.BuildConfigurations }}
    ${{ if eq(variables['Build.DefinitionName'], 'maui-pr') }}:
      runAsPublic: true
      buildPlatforms:
      - ${{ parameters.WindowsPool.public }}
        buildScript: $(_buildScript)
        sln: '$(Build.SourcesDirectory)/Microsoft.Maui.sln'
      - ${{ parameters.MacPool }}
        buildScript: $(_buildScriptMacOS)
        sln: '$(Build.SourcesDirectory)/Microsoft.Maui-mac.slnf'
    ${{ else }}:
      runAsPublic: false
      buildPlatforms:
      - ${{ parameters.WindowsPool.internal }}
        buildScript: $(_buildScript)
        sln: '$(Build.SourcesDirectory)/Microsoft.Maui.sln'
      - ${{ parameters.MacPool }}
        buildScript: $(_buildScriptMacOS)
        sln: '$(Build.SourcesDirectory)/Microsoft.Maui-mac.slnf'
    prepareSteps:
    - template: /eng/pipelines/common/provision.yml@self
      parameters:
        checkoutDirectory: '$(System.DefaultWorkingDirectory)'
        skipJdk: false
        skipAndroidCommonSdks: false
        skipAndroidPlatformApis: false
        onlyAndroidPlatformDefaultApis: true
        skipAndroidEmulatorImages: true
        skipAndroidCreateAvds: true
        skipProvisioning: true
        skipXcode: true

# Unit Tests Stage
- template: /eng/pipelines/arcade/stage-unit-tests.yml@self
  parameters:
    jobMatrix:
    - name: win_unit_tests
      displayName: Windows Unit Tests
      ${{ if eq(variables['Build.DefinitionName'], 'maui-pr') }}:
        pool: ${{ parameters.WindowsPool.public }}
        runAsPublic: true
      ${{ else }}:
        pool: ${{ parameters.WindowsPool.internal }}
        runAsPublic: false
      timeout: 90
      testOS: Windows
    - name: mac_unit_tests
      displayName: macOS Unit Tests
      pool: ${{ parameters.MacPool }}
      timeout: 90
      testOS: macOS
    publishTaskPrefix: ''

# Integration Tests Stage
- template: /eng/pipelines/arcade/stage-integration-tests.yml@self
  parameters:
    stageDependsOn: Pack
    publishTaskPrefix: ''
    jobMatrix:
    # Windows test jobs - simplified with template
    - ${{ each testJob in [
        { name: 'win_samples_tests', category: 'Samples', timeout: 120 },
        { name: 'win_wintemplate_tests', category: 'WindowsTemplates', timeout: 120 },
        { name: 'win_buildtemplate_tests', category: 'Build', timeout: 120 },
        { name: 'win_blazortemplate_tests', category: 'Blazor', timeout: 120 },
        { name: 'win_multitemplate_tests', category: 'MultiProject', timeout: 120 }
      ] }}:
      - name: ${{ testJob.name }}
        ${{ if eq(variables['Build.DefinitionName'], 'maui-pr') }}:
          pool: ${{ parameters.WindowsPool.public }}
          runAsPublic: true
        ${{ else }}:
          pool: ${{ parameters.WindowsPool.internal }}
          runAsPublic: false
        timeout: ${{ testJob.timeout }}
        testCategory: ${{ testJob.category }}

    # macOS test jobs  
    - ${{ each testJob in [
        { name: 'mac_samples_tests', category: 'Samples', timeout: 120 },
        { name: 'mac_buildtemplate_tests', category: 'Build', timeout: 240 },
        { name: 'mac_blazortemplate_tests', category: 'Blazor', timeout: 120 },
        { name: 'mac_multitemplate_tests', category: 'MultiProject', timeout: 120 },
        { name: 'mac_runandroid_tests', category: 'RunOnAndroid', timeout: 180 },
        { name: 'mac_runios_tests', category: 'RunOniOS', timeout: 180 }
      ] }}:
      - name: ${{ testJob.name }}
        pool: ${{ parameters.MacPool }}
        timeout: ${{ testJob.timeout }}
        testCategory: ${{ testJob.category }}
