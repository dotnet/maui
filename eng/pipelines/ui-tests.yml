trigger:
  branches:
    include:
    - main
    - release/*
    - loc
  tags:
    include:
    - '*'
  paths:
    include:
    - '*'
    exclude:
    - .github/*
    - docs/*
    - src/Templates/*
    - CODE-OF-CONDUCT.md
    - CONTRIBUTING.md
    - LICENSE.TXT
    - PATENTS.TXT
    - README.md
    - SECURITY.md
    - THIRD-PARTY-NOTICES.TXT

pr:
  branches:
    include:
    - main
    - release/*
  paths:
    include:
    - '*'
    exclude:
    - .github/*
    - docs/*
    - src/Templates/*
    - CODE-OF-CONDUCT.md
    - CONTRIBUTING.md
    - LICENSE.TXT
    - PATENTS.TXT
    - README.md
    - SECURITY.md
    - THIRD-PARTY-NOTICES.TXT

variables:
  - template: /eng/pipelines/common/variables.yml
  - name: AgentPoolAccessToken
    value: $(botdeploy--azdo--token--register--xamarin-public--untrusted)

parameters:

  - name: UseProvisionator
    type: boolean
    default: false

  - name: provisionatorChannel
    displayName: 'Provisionator channel'
    type: string
    default: 'latest'           # Support for launching a build against a Provisionator PR (e.g., pr/[github-account-name]/[pr-number]) as a means to test in-progress Provisionator changes

  - name: BuildEverything
    type: boolean
    default: false

  - name: CompatibilityTests
    type: boolean
    default: false

  - name: androidPool
    type: object
    default:
      name: $(androidTestsVmPool)
      vmImage: $(androidTestsVmImage)
      demands:
        - macOS.Name -equals Sonoma
        - macOS.Architecture -equals x64

  - name: iosPool
    type: object
    default:
      name: $(iosTestsVmPool)
      vmImage: $(iosTestsVmImage)
      demands:
        - macOS.Name -equals Sonoma
        - macOS.Architecture -equals x64
  
  - name: windowsBuildPool
    type: object
    default:
      name: $(windowsVmPool)
      vmImage: $(windowsVmImage)

  - name: windowsPool
    type: object
    default:
      name: $(windowsTestsVmPool)
      vmImage: $(windowsTestsVmImage)

  - name: macosPool
    type: object
    default:
      name: Azure Pipelines
      vmImage: macOS-14

  - name: androidCompatibilityPool
    type: object
    default:
      name: $(androidTestsVmPool)
      vmImage: $(androidTestsVmImage)
      demands:
        - macOS.Name -equals Sonoma
        - macOS.Architecture -equals x64

  - name: iosCompatibilityPool
    type: object
    default:
      name: $(androidTestsVmPool)
      vmImage: $(androidTestsVmImage)
      demands:
        - macOS.Name -equals Sonoma
        - macOS.Architecture -equals x64

resources:
  repositories:
    - repository: yaml-templates
      type: github
      name: xamarin/yaml-templates
      endpoint: xamarin
      ref: refs/heads/main

stages:

  - template: common/ui-tests.yml
    parameters:
      androidPool: ${{ parameters.androidPool }}
      iosPool: ${{ parameters.iosPool }}
      windowsPool: ${{ parameters.windowsPool }}
      windowsBuildPool: ${{ parameters.windowsBuildPool }}
      macosPool: ${{ parameters.macosPool }}
      androidCompatibilityPool: ${{ parameters.androidCompatibilityPool }}
      iosCompatibilityPool: ${{ parameters.iosCompatibilityPool }}
      agentPoolAccessToken: $(AgentPoolAccessToken)
      ${{ if or(parameters.BuildEverything, and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['System.TeamProject'], 'devdiv'))) }}:
        androidApiLevels: [ 30 ]
        iosVersions: [ '18.0' ]
        provisionatorChannel: ${{ parameters.provisionatorChannel }}
      ${{ else }}:
        androidApiLevels: [ 30 ]
        iosVersions: [ '18.0' ]
        provisionatorChannel: ${{ parameters.provisionatorChannel }}
      ${{ if parameters.CompatibilityTests }}:
        runCompatibilityTests: true
      ${{ if or(eq(parameters.UseProvisionator, true), eq(variables['internalProvisioning'],'True') ) }}:
        skipProvisioning: false
        gitHubToken: $(github--pat--vs-mobiletools-engineering-service2)
      ${{ else }}:  
        skipProvisioning: true
      projects:
        - name: controls
          desc: Controls
          androidApiLevelsExclude: [25] # Ignore for now API25 since the runs's are not stable
          android: $(System.DefaultWorkingDirectory)/src/Controls/tests/TestCases.Android.Tests/Controls.TestCases.Android.Tests.csproj
          app: $(Pipeline.Workspace)/Controls.TestCases.HostApp/
          iosVersionsExclude: [ '12.4'] # Ignore iOS 12.4 while we can't make it work on CI
          ios: $(System.DefaultWorkingDirectory)/src/Controls/tests/TestCases.iOS.Tests/Controls.TestCases.iOS.Tests.csproj
          winui: $(System.DefaultWorkingDirectory)/src/Controls/tests/TestCases.WinUI.Tests/Controls.TestCases.WinUI.Tests.csproj
          mac: $(System.DefaultWorkingDirectory)/src/Controls/tests/TestCases.Mac.Tests/Controls.TestCases.Mac.Tests.csproj
          compatibilityAndroidApp: $(System.DefaultWorkingDirectory)/src/Compatibility/ControlGallery/src/Android/Compatibility.ControlGallery.Android.csproj 
          compatibilityAndroidTestProject: $(System.DefaultWorkingDirectory)/src/Compatibility/ControlGallery/test/Android.UITests/Compatibility.ControlGallery.Android.UITests.csproj
          compatibilityiOSApp: $(System.DefaultWorkingDirectory)/src/Compatibility/ControlGallery/src/iOS/Compatibility.ControlGallery.iOS.csproj 
          compatibilityiOSTestProject: $(System.DefaultWorkingDirectory)/src/Compatibility/ControlGallery/test/iOS.UITests/Compatibility.ControlGallery.iOS.UITests.csproj


