variables:
# needed for darc (dependency flow) publishing
- name: _BuildConfig
  value: Release
- name: Build.Arcade.ArtifactsPath
  value: $(Build.SourcesDirectory)/artifacts/
- name: Build.Arcade.LogsPath
  value: $(Build.Arcade.ArtifactsPath)log/$(_BuildConfig)/
- name: Build.Arcade.TestResultsPath
  value: $(Build.Arcade.ArtifactsPath)TestResults/$(_BuildConfig)/
- name: _buildScript
  value: $(Build.SourcesDirectory)/build.cmd -ci
- name: _BuildOfficalId
  value: $[ format('{0}.{1}', format('{0:yyyyMMdd}', pipeline.startTime), counter(format('{0:yyyyMMdd}', pipeline.startTime), 1) )]
- name: TreatWarningsAsErrors
  value: false
- name: _OfficialBuildIdArgs
  value: /p:OfficialBuildId=$(_BuildOfficalId) /p:_SkipUpdateBuildNumber=true
# Produce test-signed build for PR and Public builds
- ${{ if or(eq(variables['_RunAsPublic'], 'true'), eq(variables['Build.Reason'], 'PullRequest')) }}:
  # needed for darc (dependency flow) publishing
  - name: _PublishArgs
    value: ''
  - name: _OfficialBuildIdArgs
    value: ''
  # needed for signing
  - name: _SignType
    value: test
  - name: _SignArgs
    value: '/p:DotNetSignType=$(_SignType) /p:TeamName=$(TeamName)'
# Set up non-PR build from internal project
- ${{ if and(ne(variables['_RunAsPublic'], 'true'), ne(variables['Build.Reason'], 'PullRequest')) }}:
  # needed for darc (dependency flow) publishing
  - name: _PublishArgs
    value: >-
          /p:DotNetPublishUsingPipelines=true
  # - name: _OfficialBuildIdArgs
  #   value: /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
  # needed for signing
  - name: _SignType
    value: real
  - name: _SignArgs
    value: /p:DotNetSignType=$(_SignType) /p:TeamName=$(TeamName) /p:Sign=true /p:DotNetPublishUsingPipelines=true
