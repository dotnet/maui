# Template for build + pack on dnceng
parameters:
- name: pool
  type: object
- name: enableSourceBuild
  type: boolean
  default: false
- name: enableSourceIndex
  type: boolean
  default: false
- name: sourceIndexParams
  type: object
  default: []
- name: runAsPublic
  type: boolean
  default: false

stages:
- stage: Pack
  displayName: Pack .NET MAUI
  dependsOn: []
  jobs:
  - template: /eng/common/templates-official/jobs/jobs.yml
    parameters:
      helixRepo: dotnet/maui
      pool: ${{ parameters.pool }}
      enableMicrobuild: true
      enablePublishUsingPipelines: true
      enablePublishBuildAssets: true
      enableTelemetry: true
      enableSourceBuild: ${{ parameters.enableSourceBuild }}
      enableSourceIndex: ${{ parameters.enableSourceIndex }}
      sourceIndexParams: ${{ parameters.sourceIndexParams }}
      publishAssetsImmediately: true
      enablePublishBuildArtifacts: true
      enablePublishTestResults: true
      workspace:
        clean: all
      jobs:
      - job: pack_net_Windows
        displayName: Pack Windows
        timeoutInMinutes: 240
        preSteps:
        - checkout: self
          fetchDepth: 1
          clean: true
        steps:

        - script: $(_buildScript)
                  -restore -build
                  -configuration $(_BuildConfig)
                  /p:ArchiveTests=true
                  /p:TreatWarningsAsErrors=false
                  /bl:$(Build.Arcade.LogsPath)build.binlog
                  $(_OfficialBuildIdArgs)
          displayName: üõ†Ô∏è Build

        # Run on public pipeline
        - ${{ if eq(parameters.runAsPublic, 'true') }}:
          - script: $(_buildScript)
                    -restore -pack
                    -publish $(_PublishArgs)
                    -configuration $(_BuildConfig)
                    /bl:$(Build.Arcade.LogsPath)pack.binlog
                    $(_OfficialBuildIdArgs)
            displayName: Pack & Publish

        # Run on internal pipeline
        - ${{ if and(eq(parameters.runAsPublic, 'false'), ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
          - script: $(_buildScript)
                    -restore -pack
                    -sign $(_SignArgs)
                    -publish $(_PublishArgs)
                    -configuration $(_BuildConfig)
                    /bl:$(Build.Arcade.LogsPath)pack.binlog
                    $(_OfficialBuildIdArgs)
            displayName: Pack, Sign & Publish
          
          # only for workloads
          - script: $(_buildScript)
              -restore -build
              -sign $(_SignArgs)
              -publish $(_PublishArgs)
              -configuration $(_BuildConfig)
              /bl:$(Build.Arcade.LogsPath)/build-workloads.binlog
              -projects src/Workload/workloads.csproj
              $(_OfficialBuildIdArgs)
            displayName: Build Workloads

          - task: 1ES.PublishPipelineArtifact@1
            displayName: Publish VSDrop MSIs
            inputs:
              targetPath: '$(Build.SourcesDirectory)/artifacts/VSSetup/$(_BuildConfig)'
              artifactName: VSDropInsertion
