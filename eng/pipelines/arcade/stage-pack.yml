# Template for build + pack on dnceng
parameters:
- name: prepareSteps
  type: stepList
  default: []
- name: postSteps
  type: stepList
  default: []
- name: pool
  type: object
- name: enableSourceBuild
  type: boolean
  default: false
- name: enableSourceIndex
  type: boolean
  default: false
- name: sourceIndexParams
  type: object
  default: []
- name: runAsPublic
  type: boolean
  default: true

stages:
- stage: Pack
  displayName: Pack .NET MAUI
  dependsOn: []
  jobs:
  - template: ${{ iif(eq(parameters.runAsPublic, 'true'), '/eng/common/templates/jobs/jobs.yml', '/eng/common/templates-official/jobs/jobs.yml@self') }}
    parameters:
      helixRepo: dotnet/maui
      pool: ${{ parameters.pool }}
      enableMicrobuild: true
      enablePublishUsingPipelines: true
      enablePublishBuildAssets: true
      enableTelemetry: true
      enableSourceBuild: ${{ parameters.enableSourceBuild }}
      enableSourceIndex: ${{ parameters.enableSourceIndex }}
      sourceIndexParams: ${{ parameters.sourceIndexParams }}
      publishAssetsImmediately: true
      enablePublishBuildArtifacts: true
      enablePublishTestResults: false
      templateContext:
        outputs:
        - output: pipelineArtifact
          artifact: APIScanFiles
          path: $(Agent.TempDirectory)/APIScanFiles
        - output: pipelineArtifact
          artifact: Metadata
          path: $(Agent.TempDirectory)/metadata

      workspace:
        clean: all

      jobs:
      - job: pack_net_Windows
        displayName: Pack Windows
        timeoutInMinutes: 240
        preSteps:
        - checkout: self
          fetchDepth: 1
          clean: true

        steps:
        - ${{ each step in parameters.prepareSteps }}:
          - ${{ each pair in step }}:
              ${{ pair.key }}: ${{ pair.value }}

        # Run on public pipeline
        - ${{ if parameters.runAsPublic }}:
          - script: $(_buildScript) -restore -pack -publish $(_PublishArgs) -configuration $(_BuildConfig) /bl:$(Build.Arcade.LogsPath)/$(_BuildConfig)/pack.binlog $(_OfficialBuildIdArgs)
            displayName: Pack & Publish

        # Run on internal pipeline
        - ${{ if and(not(parameters.runAsPublic) , notin(variables['Build.Reason'], 'PullRequest')) }}:
          - script: $(_buildScript) -restore -pack -sign $(_SignArgs) -configuration $(_BuildConfig) /bl:$(Build.Arcade.LogsPath)/$(_BuildConfig)/pack.binlog $(_OfficialBuildIdArgs)
            displayName: Pack, Sign

          # only for workloads
          - script: $(_buildScript) -restore -build -sign $(_SignArgs) -publish $(_PublishArgs) -configuration $(_BuildConfig) /bl:$(Build.Arcade.LogsPath)/$(_BuildConfig)/build-workloads.binlog -projects src/Workload/workloads.csproj $(_OfficialBuildIdArgs)
            displayName: Build Workloads, Sign & Publish

        - task: CopyFiles@2
          displayName: Copy assemblies for APIScan
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)\artifacts\bin\Controls.Core'
            Contents: |
              **/*.dll
              **/*.pdb
            TargetFolder: '$(Agent.TempDirectory)\APIScanFiles'

        - task: CopyFiles@2
          displayName: Copy Metadata
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)\artifacts\packages\$(_BuildConfig)\Shipping\metadata'
            Contents: |
              **/*.json
            TargetFolder: '$(Agent.TempDirectory)\metadata'

        - ${{ each step in parameters.postSteps }}:
          - ${{ each pair in step }}:
              ${{ pair.key }}: ${{ pair.value }}
