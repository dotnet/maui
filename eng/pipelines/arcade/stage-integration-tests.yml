parameters:
  stageDependsOn: []
  jobMatrix: []  # Should define jobMatrix.name, jobMatrix.displayName, jobMatrix.pool, jobMatrix.timeout, jobMatrix.testCategory
  mauiSourcePath: $(Build.SourcesDirectory)
  buildConfig: Debug
  repoLogPath: $(Build.Arcade.LogsPath)
  publishTaskPrefix: '1ES.'

stages:
- stage: IntegrationTests
  displayName: Run Integration Tests
  dependsOn: ${{ parameters.stageDependsOn }}
  jobs:
  - ${{ each job in parameters.jobMatrix }}:
    - job: ${{ job.name }}
      displayName: ${{ job.testCategory }} ${{ job.pool.os }}
      pool: ${{ job.pool }}
      timeoutInMinutes: ${{ job.timeout }}
      steps:
      - template: /eng/pipelines/arcade/setup-test-env.yml
        parameters:
          mauiSourcePath: ${{ parameters.mauiSourcePath }}
          buildConfig: ${{ parameters.buildConfig }}
          repoLogPath: ${{ parameters.repoLogPath }}

      - template: /eng/pipelines/common/run-dotnet-preview.yml
        parameters:
          displayName: Run Integration Tests - ${{ job.testCategory }} ${{ job.pool.os }}
          mauiSourcePath: ${{ parameters.mauiSourcePath }}
          command: test
          project: ${{ parameters.mauiSourcePath }}/src/TestUtils/src/Microsoft.Maui.IntegrationTests/Microsoft.Maui.IntegrationTests.csproj
          arguments: '-c ${{ parameters.buildConfig }} --filter "Category=${{ job.testCategory }}" --logger trx --results-directory $(Agent.TempDirectory)/Microsoft.Maui.IntegrationTests'
          useExitCodeForErrors: true

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: VSTest
          testResultsFiles: $(Agent.TempDirectory)/Microsoft.Maui.IntegrationTests/*.trx
          testRunTitle: Integration Tests - ${{ job.testCategory }} ${{ job.pool.os }}

      - task: ${{ parameters.publishTaskPrefix }}PublishPipelineArtifact@1
        displayName: Publish Logs
        inputs:
          targetPath: ${{ parameters.repoLogPath }}
          artifact: Logs - Integration Tests ${{ job.testCategory }} ${{ job.pool.os }} $(System.JobAttempt)
        condition: always()

      - template: /eng/pipelines/common/fail-on-issue.yml
