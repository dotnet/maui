parameters:
  jobMatrix: []  # Should define jobMatrix.name, jobMatrix.displayName, jobMatrix.pool, jobMatrix.timeout, jobMatrix.testOS
  mauiSourcePath: $(Build.SourcesDirectory)
  buildConfig: Debug
  repoLogPath: $(Build.Arcade.LogsPath)
  publishTaskPrefix: '1ES.'
  buildTaskProjects: '$(Build.SourcesDirectory)/Microsoft.Maui.BuildTasks.slnf'

stages:
- stage: UnitTests
  displayName: Run Unit Tests
  dependsOn: []
  jobs:
  - ${{ each job in parameters.jobMatrix }}:
    - job: ${{ job.name }}
      displayName: ${{ job.displayName }}
      pool: ${{ job.pool }}
      timeoutInMinutes: ${{ job.timeout }}
      steps:
      - checkout: self
        clean: true

      - template: /eng/pipelines/common/provision.yml@self
        parameters:
          checkoutDirectory: '$(System.DefaultWorkingDirectory)'
          skipJdk: false
          skipAndroidCommonSdks: false
          skipAndroidPlatformApis: false
          onlyAndroidPlatformDefaultApis: true
          skipAndroidEmulatorImages: true
          skipAndroidCreateAvds: true
          skipProvisioning: true
          skipXcode: false
          skipSimulatorSetup: true
          base64Encode: true
          outputVariableName: dotnetbuilds-internal-container-read-token-base64
      
      - script: ${{ job.buildScript }} -restore -build -configuration ${{ parameters.buildConfig }} -projects "${{ parameters.buildTaskProjects }}" /p:ArchiveTests=false /p:TreatWarningsAsErrors=$(TreatWarningsAsErrors) /bl:$(Build.Arcade.LogsPath)${{ parameters.buildConfig }}/buildtasks.binlog $(_OfficialBuildIdArgs)
        displayName: üõ†Ô∏è Build BuildTasks

      # - template: /eng/pipelines/arcade/setup-test-env.yml
      #   parameters:
      #     mauiSourcePath: ${{ parameters.mauiSourcePath }}
      #     buildConfig: ${{ parameters.buildConfig }}
      #     repoLogPath: ${{ parameters.repoLogPath }}
      #     installPackageArtifacts: false
      #     buildMSBuildTasks: true

      - template: /eng/pipelines/common/run-dotnet-preview.yml
        parameters:
          displayName: Run Controls.Xaml.UnitTests - ${{ job.testOS }}
          mauiSourcePath: ${{ parameters.mauiSourcePath }}
          command: test
          project: ${{ parameters.mauiSourcePath }}/src/Controls/tests/Xaml.UnitTests/Controls.Xaml.UnitTests.csproj
          arguments: '-c ${{ parameters.buildConfig }} --logger trx --results-directory $(Agent.TempDirectory)/Controls.Xaml.UnitTests /bl:$(Build.Arcade.LogsPath)${{ parameters.buildConfig }}/Controls.Xaml.UnitTests.binlog /p:_SkipUpdateBuildNumber=true'
          useExitCodeForErrors: true

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: VSTest
          testResultsFiles: $(Agent.TempDirectory)/Controls.Xaml.UnitTests/*.trx
          testRunTitle: Controls.Xaml.UnitTests - ${{ job.testOS }}

      - template: /eng/pipelines/common/run-dotnet-preview.yml
        parameters:
          displayName: Run Resizetizer.UnitTests - ${{ job.testOS }}
          mauiSourcePath: ${{ parameters.mauiSourcePath }}
          command: test
          project: ${{ parameters.mauiSourcePath }}/src/SingleProject/Resizetizer/test/UnitTests/Resizetizer.UnitTests.csproj
          arguments: '-c ${{ parameters.buildConfig }} --logger trx --results-directory $(Agent.TempDirectory)/Resizetizer.UnitTests /p:_SkipUpdateBuildNumber=true'
          useExitCodeForErrors: true

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: VSTest
          testResultsFiles: $(Agent.TempDirectory)/Resizetizer.UnitTests/*.trx
          testRunTitle: Resizetizer.UnitTests - ${{ job.testOS }}

      - template: /eng/pipelines/common/run-dotnet-preview.yml
        parameters:
          displayName: Run Graphics.Tests - ${{ job.testOS }}
          mauiSourcePath: ${{ parameters.mauiSourcePath }}
          command: test
          project: ${{ parameters.mauiSourcePath }}/src/Graphics/tests/Graphics.Tests/Graphics.Tests.csproj
          arguments: '-c ${{ parameters.buildConfig }} --logger trx --results-directory $(Agent.TempDirectory)/Graphics.Tests /p:_SkipUpdateBuildNumber=true'
          useExitCodeForErrors: true

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: VSTest
          testResultsFiles: $(Agent.TempDirectory)/Graphics.Tests/*.trx
          testRunTitle: Graphics.Tests - ${{ job.testOS }}

      - task: ${{ parameters.publishTaskPrefix }}PublishPipelineArtifact@1
        displayName: Publish Logs
        inputs:
          targetPath: ${{ parameters.repoLogPath }}
          artifact: Logs - Unit Tests ${{ job.testOS }} $(System.JobAttempt)
        condition: always()

      # - template: /eng/pipelines/common/fail-on-issue.yml
