<?xml version="1.0" encoding="utf-8"?>
<Project>
  <!--
    This file contains targets for generating and updating the cgmanifest.json file with versions from Versions.props.
    Include this file in your project to ensure component governance manifests are kept up to date.
    
    Usage:
    - For CI: dotnet build -p:GenerateCgManifest=true
    - Manual: dotnet build -t:GenerateCgManifest
  -->
  
  <PropertyGroup>
    <CgManifestPath>$(MSBuildThisFileDirectory)..\..\src\Templates\src\cgmanifest.json</CgManifestPath>
    <!-- Always generate cgmanifest.json file by default during build -->
    <UpdateCgManifestBeforeBuild Condition="'$(UpdateCgManifestBeforeBuild)' == ''">true</UpdateCgManifestBeforeBuild>
    <!-- Detect if we're in CI build -->
    <IsInCIBuild Condition="'$(TF_BUILD)' == 'true' OR '$(GITHUB_ACTIONS)' == 'true'">true</IsInCIBuild>
    <IsInCIBuild Condition="'$(IsInCIBuild)' == ''">false</IsInCIBuild>
    <!-- Global switch to control whether to include cgmanifest.json in package (defaults to false) -->
    <GenerateCgManifest Condition="'$(GenerateCgManifest)' == ''">false</GenerateCgManifest>
  </PropertyGroup>
  
  <!-- Always update cgmanifest.json before build -->
  <Target Name="UpdateCgManifest" BeforeTargets="BeforeBuild" Condition="'$(UpdateCgManifestBeforeBuild)' == 'true'">
    <Message Text="Updating cgmanifest.json from Versions.props" Importance="high" />
    <Exec Command="pwsh -NonInteractive -ExecutionPolicy Bypass -File &quot;$(MSBuildThisFileDirectory)scripts\update-cgmanifest.ps1&quot;" />
  </Target>
  
  <!-- Add a custom target to update cgmanifest.json on demand -->
  <Target Name="GenerateCgManifest">
    <Message Text="Generating cgmanifest.json from Versions.props" Importance="high" />
    <Exec Command="pwsh -NonInteractive -ExecutionPolicy Bypass -File &quot;$(MSBuildThisFileDirectory)scripts\update-cgmanifest.ps1&quot;" />
  </Target>
</Project>
