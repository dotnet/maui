<Project sdk="Microsoft.DotNet.Helix.Sdk" DefaultTargets="Test">

  <PropertyGroup>
    <ScenariosDir>$(RepoRoot)/artifacts/bin/</ScenariosDir>
 </PropertyGroup>
  <PropertyGroup>
    <IncludeXHarnessCli>true</IncludeXHarnessCli>
  </PropertyGroup>

  <PropertyGroup>
      <!-- Set Helix build to build number if available -->
    <HelixBuild Condition="'$(HelixBuild)' == ''">$(BUILD_BUILDNUMBER)</HelixBuild>
    <HelixBuild Condition="'$(HelixBuild)' == ''">default</HelixBuild>

    <HelixTargetQueues>OSX.15.ARM64.Open</HelixTargetQueues>
    <Creator Condition="'$(HelixAccessToken)' == ''">maui</Creator>

    <IncludeDotNetCli>true</IncludeDotNetCli>
    <DotNetCliPackageType>sdk</DotNetCliPackageType>

    <EnableAzurePipelinesReporter>true</EnableAzurePipelinesReporter>
    <FailOnTestFailure>true</FailOnTestFailure>
  </PropertyGroup>

  <PropertyGroup Condition="'$(HelixType)' == ''">
    <!-- For PRs we want HelixType to be the same for all frameworks except package testing-->
    <TestScope Condition="'$(TestScope)' == ''">innerloop</TestScope>
    <HelixType>test/functional/cli/$(TestScope)/</HelixType>
  </PropertyGroup>

  <ItemGroup>
    <MAUIiOSScenario Include="Controls DeviceTests">
      <ScenarioDirectoryName>Controls.DeviceTests</ScenarioDirectoryName>
      <PayloadDirectory>$(ScenariosDir)%(ScenarioDirectoryName)</PayloadDirectory>
      <IPAName>Microsoft.Maui.Controls.DeviceTests</IPAName>
      <PackageName>com.microsoft.maui.controls.devicetests</PackageName>
    </MAUIiOSScenario>
  </ItemGroup>

 <ItemGroup>
    <XHarnessAppBundleToTest Include="$([System.IO.Directory]::GetDirectories('$(ScenariosDir)/Controls.DeviceTests', '*.app', System.IO.SearchOption.AllDirectories))">
        <!-- Specify target platform () -->
        <TestTarget>ios-simulator-64_18.0</TestTarget>
    </XHarnessAppBundleToTest>
  <ItemGroup>

  <PropertyGroup>
  <!-- Optional: Specific version of Xcode to use. If omitted, xcode-select is used to determine the version -->
    <XHarnessXcodeVersion>16.3</XHarnessXcodeVersion>
 </PropertyGroup>
  <!-- <ItemGroup>
    <PreparePayloadWorkItem Include="@(MAUIiOSScenario)">
      <Command>sudo xcode-select -s /Applications/Xcode_16.3.app; $(Python) pre.py publish -f $(PERFLAB_Framework)-ios --self-contained -c Release -r ios-arm64 $(NativeAOTCommandProps) --binlog $(PreparePayloadWorkItemBaseDirectory)%(PreparePayloadWorkItem.ScenarioDirectoryName)/%(PreparePayloadWorkItem.ScenarioDirectoryName).binlog -o $(PreparePayloadWorkItemBaseDirectory)%(PreparePayloadWorkItem.ScenarioDirectoryName); cd ../; zip -r %(PreparePayloadWorkItem.ScenarioDirectoryName).zip %(PreparePayloadWorkItem.ScenarioDirectoryName)</Command>
      <WorkingDirectory>%(PreparePayloadWorkItem.PayloadDirectory)</WorkingDirectory>
    </PreparePayloadWorkItem>
  </ItemGroup> -->


  <!-- <ItemGroup Condition="'$(NeedsWorkload)' == 'true'">
    <HelixCommandPrefixEnvVarItem Condition="'$(WindowsShell)' != 'true'" Include="PATH=$HELIX_CORRELATION_PAYLOAD/$(SdkForWorkloadTestingDirName):$PATH" />
    <HelixCommandPrefixEnvVarItem Condition="'$(WindowsShell)' == 'true'" Include="PATH=%HELIX_CORRELATION_PAYLOAD%\$(SdkForWorkloadTestingDirName)%3B%PATH%" />

    <!-- set this to a writable location so the first time experience can write create sentinels -->
    <HelixCommandPrefixEnvVarItem Condition="'$(WindowsShell)' != 'true'" Include="DOTNET_CLI_HOME=$HELIX_WORKITEM_ROOT/.dotnet" />
    <HelixCommandPrefixEnvVarItem Condition="'$(WindowsShell)' == 'true'" Include="DOTNET_CLI_HOME=%HELIX_WORKITEM_ROOT%\.dotnet" />

    <HelixCommandPrefixEnvVarItem Condition="'$(WindowsShell)' != 'true'" Include="DOTNET_ROOT=$HELIX_CORRELATION_PAYLOAD/$(SdkForWorkloadTestingDirName)" />
    <HelixCommandPrefixEnvVarItem Condition="'$(WindowsShell)' == 'true'" Include="DOTNET_ROOT=%HELIX_CORRELATION_PAYLOAD%\$(SdkForWorkloadTestingDirName)" />

    <HelixCommandPrefixEnvVarItem Condition="'$(WindowsShell)' != 'true'" Include="SDK_FOR_WORKLOAD_TESTING_PATH=%24{HELIX_CORRELATION_PAYLOAD}/$(SdkForWorkloadTestingDirName)" />
    <HelixCommandPrefixEnvVarItem Condition="'$(WindowsShell)' == 'true'" Include="SDK_FOR_WORKLOAD_TESTING_PATH=%HELIX_CORRELATION_PAYLOAD%\$(SdkForWorkloadTestingDirName)" />

    <HelixCommandPrefixEnvVarItem Include="DOTNET_CLI_TELEMETRY_OPTOUT=1" />
    <HelixCommandPrefixEnvVarItem Condition="'$(TestUsingWorkloads)' == 'true'" Include="TEST_USING_WORKLOADS=true" />
    <HelixCommandPrefixEnvVarItem Condition="'$(WasmEnableWebcil)' == 'false'" Include="WASM_ENABLE_WEBCIL=false" />
    <HelixCommandPrefixEnvVarItem Condition="'$(WasmFingerprintAssets)' == 'false'" Include="WASM_FINGERPRINT_ASSETS=false" />
    <HelixCommandPrefixEnvVarItem Condition="'$(WasmBundlerFriendlyBootConfig)' == 'true'" Include="WASM_BUNDLER_FRIENDLY_BOOT_CONFIG=true" />
    <HelixCommandPrefixEnvVarItem Condition="'$(WorkloadsTestPreviousVersions)' == 'true'" Include="WORKLOADS_TEST_PREVIOUS_VERSIONS=true" />
  </ItemGroup>


  <PropertyGroup Condition="'$(NeedsDotNetSdk)' == 'true'">
    <IncludeDotNetCli>true</IncludeDotNetCli>
    <DotNetCliPackageType>sdk</DotNetCliPackageType>
  </PropertyGroup>

  <ItemGroup>
    <HelixProperties Condition="'$(RuntimeFlavor)' != ''" Include="runtimeFlavor" Value="$(RuntimeFlavor)" />
    <HelixProperties Condition="'$(Scenario)' != ''" Include="scenario" Value="$(Scenario)" />
  </ItemGroup> -->

  <ItemGroup>
    <XHarnessAppBundleToTest Include="**/*.app" />
  </ItemGroup>

</Project>