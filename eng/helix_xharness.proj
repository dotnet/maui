<Project Sdk="Microsoft.DotNet.Helix.Sdk" DefaultTargets="Test">
    <PropertyGroup>
        <HelixType>test/devices/</HelixType>
        <HelixBuild Condition="'$(HelixBuild)' == ''">$(BUILD_BUILDNUMBER)</HelixBuild>
        <HelixBuild Condition="'$(HelixBuild)' == ''">default</HelixBuild>
        <HelixTargetQueues Condition="'$(TargetOS)' == 'ios'">OSX.15.ARM64.Open</HelixTargetQueues>
        <HelixTargetQueues Condition="'$(TargetOS)' == 'android'">
            ubuntu.2204.amd64.android.23.open;ubuntu.2204.amd64.android.33.open</HelixTargetQueues>
        <Creator Condition="'$(HelixAccessToken)' == ''">maui</Creator>
        <IncludeDotNetCli>true</IncludeDotNetCli>
        <DotNetCliPackageType>sdk</DotNetCliPackageType>
        <EnableAzurePipelinesReporter>true</EnableAzurePipelinesReporter>
        <FailOnTestFailure>true</FailOnTestFailure>
    </PropertyGroup>

    <!-- Local build outside of Azure Pipeline -->
    <PropertyGroup Condition="'$(SYSTEM_ACCESSTOKEN)' == ''">
        <ScenariosDir>$(RepoRoot)artifacts/bin/</ScenariosDir>
        <HelixTargetQueues Condition="'$(HelixTargetQueues)' == ''">
            Windows.10.Amd64.Open;OSX.1200.Amd64.Open;OSX.1200.ARM64.Open;Ubuntu.2204.Amd64.Open@mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-20.04-helix-sqlserver-amd64</HelixTargetQueues>
        <EnableAzurePipelinesReporter>false</EnableAzurePipelinesReporter>
        <HelixSource>maui/localbuild/</HelixSource>
        <HelixBuild>t001</HelixBuild>
    </PropertyGroup>

    <PropertyGroup>
        <ScenariosDir>$(BUILD_SOURCESDIRECTORY)/artifacts/bin/</ScenariosDir>
        <TargetsAppleMobile Condition="'$(TargetOS)' == 'ios'">true</TargetsAppleMobile>
    </PropertyGroup>

    <PropertyGroup>
        <IncludeXHarnessCli>true</IncludeXHarnessCli>
        <!-- Optional: Specific version of Xcode to use. If omitted, xcode-select is used to
        determine the version -->
        <!-- <XHarnessXcodeVersion>16.3</XHarnessXcodeVersion> -->
    </PropertyGroup>

    <ItemGroup Condition="'$(TargetsAppleMobile)' == 'true'">
        <HelixPreCommand Include="export XHARNESS_DISABLE_COLORED_OUTPUT=true" />
        <HelixPreCommand Include="export XHARNESS_LOG_WITH_TIMESTAMPS=true" />
    </ItemGroup>

    <ItemGroup>

        <MAUIScenario Include="Controls">
            <ScenarioDirectoryName>Controls.DeviceTests</ScenarioDirectoryName>
            <PayloadDirectory>$(ScenariosDir)Controls.DeviceTests</PayloadDirectory>
            <IPAName>Microsoft.Maui.Controls.DeviceTests</IPAName>
            <PackageName>com.microsoft.maui.controls.devicetests</PackageName>
        </MAUIScenario>

        <MAUIScenario Include="Core">
            <ScenarioDirectoryName>Core.DeviceTests</ScenarioDirectoryName>
            <PayloadDirectory>$(ScenariosDir)Core.DeviceTests</PayloadDirectory>
            <IPAName>Microsoft.Maui.Core.DeviceTests</IPAName>
            <PackageName>com.microsoft.maui.core.devicetests</PackageName>
        </MAUIScenario>

        <MAUIScenario Include="Graphics">
            <ScenarioDirectoryName>Graphics.DeviceTests</ScenarioDirectoryName>
            <PayloadDirectory>$(ScenariosDir)Graphics.DeviceTests</PayloadDirectory>
            <IPAName>Microsoft.Maui.Graphics.DeviceTests</IPAName>
            <PackageName>com.microsoft.maui.graphics.devicetests</PackageName>
        </MAUIScenario>

        <MAUIScenario Include="Essentials">
            <ScenarioDirectoryName>Essentials.DeviceTests</ScenarioDirectoryName>
            <PayloadDirectory>$(ScenariosDir)Essentials.DeviceTests</PayloadDirectory>
            <IPAName>Microsoft.Maui.Essentials.DeviceTests</IPAName>
            <PackageName>com.microsoft.maui.essentials.devicetests</PackageName>
        </MAUIScenario>

        <MAUIScenario Include="MauiBlazorWebView">
            <ScenarioDirectoryName>MauiBlazorWebView.DeviceTests</ScenarioDirectoryName>
            <PayloadDirectory>$(ScenariosDir)MauiBlazorWebView.DeviceTests</PayloadDirectory>
            <IPAName>Microsoft.Maui.MauiBlazorWebView.DeviceTests</IPAName>
            <PackageName>com.microsoft.maui.mauiblazorwebview.devicetests</PackageName>
        </MAUIScenario>
    </ItemGroup>

    <!-- Process each test scenario individually using direct path construction -->
    <Target Name="DiscoverTestBundles" BeforeTargets="Build">
        <!-- Print all MAUIScenarios -->
        <Message Text="Discovered MAUIScenarios: @(MAUIScenario->Count())" Importance="high" />

        <ItemGroup>
            <!-- Create a special batching task to find app bundles by scenario -->
            <_MAUIScenarioSearch Include="@(MAUIScenario)" />
        </ItemGroup>

        <!-- Add the discovered items to the appropriate Helix test collection -->
        <ItemGroup Condition="'$(TargetOS)' == 'ios'">
            <XHarnessAppBundleToTest Include="$([System.IO.Directory]::GetDirectories('%(_MAUIScenarioSearch.PayloadDirectory)/Debug/net9.0-ios/', '*.app', System.IO.SearchOption.AllDirectories))" >
                <TestTarget>ios-simulator-64</TestTarget>
                <WorkItemTimeout>02:00:00</WorkItemTimeout>
                <TestTimeout>01:00:00</TestTimeout>
                <WorkItemPrefix>%(_MAUIScenarioSearch.ScenarioDirectoryName)</WorkItemPrefix>
            </XHarnessAppBundleToTest>
        </ItemGroup>

        <ItemGroup Condition="'$(TargetOS)' == 'android'">
            <_apks Include="%(_MAUIScenarioSearch.PayloadDirectory)/Debug/net9.0-android/**/*Signed.apk" />
            <XHarnessApkToTest Include="@(_apks)">
                <Targets>armeabi-v7a</Targets>
                <WorkItemTimeout>02:00:00</WorkItemTimeout>
                <TestTimeout>01:00:00</TestTimeout>
                <AndroidPackageName>%(Filename)</AndroidPackageName>
            </XHarnessApkToTest>

            <!-- Update the package name to remove -Signed suffix -->
            <XHarnessApkToTest Update="@(XHarnessApkToTest)">
                <AndroidPackageName>$([System.String]::Copy('%(AndroidPackageName)').Replace('-Signed',''))</AndroidPackageName>
            </XHarnessApkToTest>
        </ItemGroup>
    </Target>


</Project>